var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","","","gt_eq","","","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","","","lt_eq","","","","","","","","","max","","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","eq","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","hash_impl","hour","hours","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","physical","","precision","register_value","remainder","","","","","","","","","","","","round","","same_src","scale","second","seconds","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","columns","default","","deref","","","","","deref_mut","","","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","min_horizontal","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","","","","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","Eq","EqValidity","Err","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","List","","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","SerReader","SerWriter","SerializeOptions","Series","","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","batched_borrowed","binary","","binary_expr","bitand","","","bitand_assign","bitor","","bitor_assign","bits","","bitxor","","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","buffer","builder","cache","","","","call","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","check_schema","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","count","","","count_matches","count_matches_many","count_rows","count_rows_from_slice","create_enum_dtype","create_left_df_chunked","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalenteval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","head","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpol","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_data","into_inner","","into_iter","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","lazy","","le","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","line_terminator","list","lit","","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","","","","","","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","method","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","offset","","","offsets","on","","","optimize","options","or","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","rename_fields","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","separator","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_parallel","set_rechunk","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","","","","","","std_reduce","","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","","","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parse_options","with_path","","with_paths","with_predicate","","with_predicate_pushdown","with_projection","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","with_same_dtype","with_sample_size","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","year","","","","zip","zip_with","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","read_this_row_group","to_deserializer","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","","equivalent","","","fmt","from","","from_str","from_untyped_config","hash","init","","into","","max_retries","options","to_owned","try_from","","try_into","","type_id","","vzip","","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","Enum","","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","","","","borrow_mut","","","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","","fmt_list","from","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","","gt_eq","","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","len","","limit","list","lit","lt","","","","lt_eq","","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","","checked","div","divide","","mul","multiply","","rem","remainder","","sub","subtract","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[856,"polars::chunked_array::arithmetic"],[884,"polars::chunked_array::builder"],[1145,"polars::chunked_array::builder::list"],[1162,"polars::chunked_array::cast"],[1191,"polars::chunked_array::collect"],[1205,"polars::chunked_array::float"],[1207,"polars::chunked_array::from_iterator_par"],[1211,"polars::chunked_array::iterator"],[1266,"polars::chunked_array::iterator::par"],[1268,"polars::chunked_array::metadata"],[1551,"polars::chunked_array::object"],[1628,"polars::chunked_array::object::builder"],[1651,"polars::chunked_array::object::registry"],[1679,"polars::chunked_array::ops"],[1885,"polars::chunked_array::ops::arity"],[1921,"polars::chunked_array::ops::float_sorted_arg_max"],[1923,"polars::chunked_array::ops::gather"],[1926,"polars::chunked_array::ops::search_sorted"],[1956,"polars::chunked_array::ops::sort"],[1963,"polars::chunked_array::ops::sort::arg_bottom_k"],[1964,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1972,"polars::chunked_array::ops::sort::options"],[1985,"polars::chunked_array::temporal"],[1993,"polars::chunked_array::temporal::conversion"],[1996,"polars::datatypes"],[3446,"polars::datatypes::categorical"],[3463,"polars::datatypes::categorical::revmap"],[3469,"polars::datatypes::categorical::string_cache"],[3488,"polars::docs"],[3490,"polars::error"],[3582,"polars::error::PolarsError"],[3586,"polars::error::constants"],[3589,"polars::frame"],[3857,"polars::frame::explode"],[3886,"polars::frame::group_by"],[4125,"polars::frame::group_by::GroupByMethod"],[4126,"polars::frame::group_by::GroupsProxy"],[4128,"polars::frame::group_by::aggregations"],[4141,"polars::frame::group_by::expr"],[4144,"polars::frame::row"],[4254,"polars::functions"],[4256,"polars::prelude"],[9485,"polars::prelude::AggExpr"],[9492,"polars::prelude::BooleanFunction"],[9495,"polars::prelude::DslPlan"],[9545,"polars::prelude::Expr"],[9580,"polars::prelude::FunctionExpr"],[9602,"polars::prelude::GroupByMethod"],[9603,"polars::prelude::GroupsProxy"],[9605,"polars::prelude::LiteralValue"],[9608,"polars::prelude::PolarsError"],[9612,"polars::prelude::StringFunction"],[9626,"polars::prelude::TemporalFunction"],[9628,"polars::prelude::_internal"],[9630,"polars::prelude::aggregations"],[9643,"polars::prelude::arity"],[9679,"polars::prelude::array"],[9698,"polars::prelude::binary"],[9715,"polars::prelude::buffer"],[9789,"polars::prelude::buffer::Buffer"],[9792,"polars::prelude::cat"],[9793,"polars::prelude::chunkedarray"],[9859,"polars::prelude::chunkedarray::string"],[9898,"polars::prelude::chunkedarray::string::infer"],[9929,"polars::prelude::cloud"],[9979,"polars::prelude::cloud::options"],[9988,"polars::prelude::compression"],[10006,"polars::prelude::datatypes"],[10279,"polars::prelude::datatypes::categorical"],[10296,"polars::prelude::datatypes::categorical::revmap"],[10302,"polars::prelude::datatypes::categorical::string_cache"],[10306,"polars::prelude::datetime"],[10309,"polars::prelude::default_arrays"],[10315,"polars::prelude::dt"],[10367,"polars::prelude::expr"],[10370,"polars::prelude::fixed_size_list"],[10390,"polars::prelude::float_sorted_arg_max"],[10392,"polars::prelude::function_expr"],[10565,"polars::prelude::function_expr::BooleanFunction"],[10568,"polars::prelude::function_expr::FunctionExpr"],[10590,"polars::prelude::function_expr::StringFunction"],[10604,"polars::prelude::function_expr::TemporalFunction"],[10606,"polars::prelude::function_expr::cat"],[10608,"polars::prelude::function_expr::pow"],[10612,"polars::prelude::function_expr::rolling"],[10643,"polars::prelude::function_expr::rolling_by"],[10674,"polars::prelude::gather"],[10677,"polars::prelude::interpolate"],[10681,"polars::prelude::interpolate_by"],[10682,"polars::prelude::mode"],[10683,"polars::prelude::nan_propagating_aggregate"],[10688,"polars::prelude::null"],[10719,"polars::prelude::schema_inference"],[10746,"polars::prelude::search_sorted"],[10752,"polars::prelude::series"],[10774,"polars::prelude::sort"],[10781,"polars::prelude::sort::arg_bottom_k"],[10782,"polars::prelude::sort::arg_sort_multiple"],[10790,"polars::prelude::sort::options"],[10803,"polars::prelude::strings"],[10857,"polars::prelude::udf"],[10863,"polars::prelude::utf8"],[10867,"polars::series"],[11304,"polars::series::amortized_iter"],[11328,"polars::series::arithmetic"],[11349,"polars::series::arithmetic::checked"],[11355,"polars::series::ops"],[11382,"dyn_clone::sealed"],[11383,"polars_core::datatypes"],[11384,"polars_core::chunked_array"],[11385,"polars_error"],[11386,"core::result"],[11387,"polars_core::series"],[11388,"core::ops::function"],[11389,"num_traits"],[11390,"num_traits::cast"],[11391,"polars_core::series::arithmetic::borrowed"],[11392,"polars_core::frame::group_by::proxy"],[11393,"polars_core::chunked_array::object"],[11394,"core::option"],[11395,"polars_arrow::array"],[11396,"alloc::boxed"],[11397,"core::iter::traits::iterator"],[11398,"polars_core::chunked_array::list::iterator"],[11399,"polars_utils::pl_str"],[11400,"core::marker"],[11401,"alloc::borrow"],[11402,"polars_core::series::amortized_iter"],[11403,"alloc::string"],[11404,"polars_core::datatypes::dtype"],[11405,"polars_arrow::array::binview::view"],[11406,"polars_core::chunked_array::ops::sort::options"],[11407,"polars_core::chunked_array::cast"],[11408,"polars_core::series::arithmetic::borrowed::checked"],[11409,"core::slice::iter"],[11410,"core::iter::adapters::map"],[11411,"alloc::vec"],[11412,"compact_str"],[11413,"polars_core::chunked_array::metadata"],[11414,"core::iter::traits::double_ended"],[11415,"polars_arrow::offset"],[11416,"core::fmt"],[11417,"core::iter::traits::collect"],[11418,"polars_core::chunked_array::from_iterator"],[11419,"polars_arrow::bitmap::immutable"],[11420,"core::borrow"],[11421,"core::convert"],[11422,"rayon::iter"],[11423,"polars_arrow::pushable"],[11424,"polars_arrow::trusted_len"],[11425,"polars_core::datatypes::any_value"],[11426,"polars_arrow::array::binary"],[11427,"std::sync::rwlock"],[11428,"polars_core::chunked_array::logical"],[11429,"polars_core::datatypes::time_unit"],[11430,"core::iter::traits::exact_size"],[11431,"polars_core::series::series_trait"],[11432,"polars_core::chunked_array::iterator"],[11433,"polars_core::scalar"],[11434,"polars_core::chunked_array::metadata::guard"],[11435,"polars_core::chunked_array::metadata::interior_mutable"],[11436,"alloc::sync"],[11437,"polars_core::chunked_array::metadata::md_trait"],[11438,"core::ops::range"],[11439,"polars_core::datatypes::field"],[11440,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11441,"polars_core::chunked_array::ops::rolling_window"],[11442,"polars_ops::chunked_array::scatter"],[11443,"polars_utils::index"],[11444,"ahash::random_state"],[11445,"polars_utils::hashing"],[11446,"ndarray"],[11447,"ndarray::dimension::dim"],[11448,"ndarray::data_repr"],[11449,"either"],[11450,"core::any"],[11451,"polars_core::frame"],[11452,"polars_core::chunked_array::arithmetic::numeric"],[11453,"polars_core::chunked_array::builder::list::anonymous"],[11454,"polars_core::chunked_array::builder::list::boolean"],[11455,"polars_core::chunked_array::builder::list::primitive"],[11456,"polars_core::chunked_array::builder::list"],[11457,"polars_core::chunked_array::builder"],[11458,"polars_core::chunked_array::builder::list::binary"],[11459,"polars_core::chunked_array::builder::list::null"],[11460,"polars_core::chunked_array::builder::string"],[11461,"polars_arrow::array::binview"],[11462,"polars_core::chunked_array::builder::boolean"],[11463,"polars_core::chunked_array::builder::null"],[11464,"polars_core::chunked_array::builder::primitive"],[11465,"core::clone"],[11466,"polars_core::series::implementations::null"],[11467,"core::hash"],[11468,"polars_core::chunked_array::collect"],[11469,"polars_core::chunked_array::float"],[11470,"polars_core::chunked_array::from_iterator_par"],[11471,"polars_arrow::array::boolean"],[11472,"polars_arrow::array::fixed_size_list"],[11473,"polars_core::chunked_array::metadata::env"],[11474,"polars_core::chunked_array::metadata::collect"],[11475,"bitflags::iter"],[11476,"std::fs"],[11477,"std::sync::mutex"],[11478,"polars_arrow::datatypes"],[11479,"polars_arrow::bitmap::utils::iterator"],[11480,"polars_arrow::bitmap::utils::zip_validity"],[11481,"polars_core::chunked_array::object::builder"],[11482,"polars_core::chunked_array::object::registry"],[11483,"polars_core::chunked_array::ops"],[11484,"polars_arrow::legacy::array::slice"],[11485,"polars_core::chunked_array::ops::arity"],[11486,"polars_arrow::array::static_array"],[11487,"core::error"],[11488,"polars_arrow::array::primitive"],[11489,"polars_core::chunked_array::ops::search_sorted"],[11490,"polars_core::utils"],[11491,"polars_row::row"],[11492,"chrono::naive::datetime"],[11493,"chrono_tz::timezones"],[11494,"chrono::naive::time"],[11495,"polars_core::chunked_array::logical::categorical"],[11496,"polars_core::chunked_array::logical::categorical::builder"],[11497,"polars_arrow::array::static_array_collect"],[11498,"std::ffi::os_str"],[11499,"std::path"],[11500,"bytemuck::zeroable"],[11501,"polars_core::chunked_array::logical::categorical::revmap"],[11502,"polars_core::chunked_array::logical::categorical::merge"],[11503,"core::cmp"],[11504,"polars_arrow::datatypes::physical_type"],[11505,"polars_arrow::types"],[11506,"chrono::time_delta"],[11507,"chrono::naive::date"],[11508,"polars_core::datatypes::into_scalar"],[11509,"polars_plan::dsl::expr"],[11510,"polars_core::chunked_array::logical::categorical::string_cache"],[11511,"polars_error::warning"],[11512,"alloc::collections"],[11513,"simdutf8::basic"],[11514,"regex::error"],[11515,"std::io::error"],[11516,"planus::errors"],[11517,"polars_parquet::parquet::error"],[11518,"polars_schema::schema"],[11519,"polars_core::series::from"],[11520,"hashbrown::set"],[11521,"polars_core::frame::row"],[11522,"polars_core::frame::group_by"],[11523,"polars_time::group_by::dynamic"],[11524,"polars_lazy::frame"],[11525,"polars_core::chunked_array::ndarray"],[11526,"polars_arrow::array::struct_"],[11527,"polars_arrow::record_batch"],[11528,"polars_time::windows::duration"],[11529,"polars_core::frame::explode"],[11530,"polars_utils::idx_vec"],[11531,"rayon::iter::plumbing"],[11532,"polars_plan::plans::aexpr"],[11533,"polars_core::frame::group_by::into_groups"],[11534,"core::iter::adapters::copied"],[11535,"core::iter::adapters::zip"],[11536,"polars_utils::float"],[11537,"polars_arrow::types::native"],[11538,"polars_core::frame::group_by::aggregations::agg_list"],[11539,"polars_core::frame::group_by::aggregations"],[11540,"polars_core::frame::group_by::expr"],[11541,"polars_core::frame::row::av_buffer"],[11542,"polars_utils::arena"],[11543,"polars_plan::plans::ir"],[11544,"polars_ops::frame::join::hash_join"],[11545,"polars_ops::frame::join::args"],[11546,"polars_plan::dsl::struct_"],[11547,"polars_ops::chunked_array::gather::chunked"],[11548,"polars_ops::frame"],[11549,"polars_io::csv::read::reader"],[11550,"polars_io::predicates"],[11551,"polars_io::mmap"],[11552,"polars_plan::dsl::selector"],[11553,"polars_plan::frame::opt_state"],[11554,"core::alloc"],[11555,"polars_plan::plans::anonymous_scan"],[11556,"polars_lazy::scan::anonymous_scan"],[11557,"polars_plan::dsl::expr_dyn_fn"],[11558,"polars_plan::plans::visitor"],[11559,"polars_plan::dsl::function_expr"],[11560,"polars_ops::series::ops::arg_min_max"],[11561,"polars_plan::dsl::array"],[11562,"polars_plan::dsl::list"],[11563,"polars_plan::dsl::function_expr::schema"],[11564,"polars_io::ipc::ipc_stream"],[11565,"std::io"],[11566,"polars_ops::chunked_array::binary"],[11567,"polars_time::chunkedarray::string"],[11568,"std::os::fd::owned"],[11569,"polars_ops::chunked_array::list"],[11570,"std::os::fd::raw"],[11571,"polars_ops::series::ops"],[11572,"polars_ops::chunked_array::strings"],[11573,"core::mem::maybe_uninit"],[11574,"polars_ops::chunked_array::strings::namespace"],[11575,"polars_io::csv::read::read_impl::batched"],[11576,"polars_io::csv::write::writer"],[11577,"polars_io::ipc::write"],[11578,"polars_io::parquet::read::reader"],[11579,"polars_io::parquet::read::read_impl"],[11580,"polars_io::parquet::write::writer"],[11581,"polars_io::parquet::write::batched_writer"],[11582,"polars_plan::dsl::binary"],[11583,"polars_plan::dsl::udf"],[11584,"polars_lazy::frame::exitable"],[11585,"hashbrown::map"],[11586,"polars_plan::dsl::cat"],[11587,"polars_ops::series::ops::round"],[11588,"polars_time::series"],[11589,"polars_lazy::scan::csv"],[11590,"polars_lazy::scan::ipc"],[11591,"polars_lazy::scan::ndjson"],[11592,"polars_lazy::scan::parquet"],[11593,"polars_time::chunkedarray::rolling_window"],[11594,"polars_time::windows::bounds"],[11595,"polars_time::windows::group_by"],[11596,"polars_time::windows::window"],[11597,"polars_io::csv::read::options"],[11598,"polars_io::csv::write::options"],[11599,"polars_io::ipc::ipc_file"],[11600,"polars_ops::frame::join::asof"],[11601,"polars_io::json"],[11602,"polars_ops::series::ops::interpolation::interpolate"],[11603,"polars_ops::series::ops::is_between"],[11604,"polars_io::parquet::read::options"],[11605,"polars_ops::series::ops::rank"],[11606,"polars_io::parquet::write::options"],[11607,"polars_plan::plans"],[11608,"polars_plan::dsl::arity"],[11609,"polars_plan::dsl::function_expr::boolean"],[11610,"polars_plan::dsl::function_expr::cat"],[11611,"polars_plan::dsl::function_expr::datetime"],[11612,"polars_plan::dsl::function_expr::pow"],[11613,"polars_plan::dsl::function_expr::strings"],[11614,"polars_plan::dsl::function_expr::struct_"],[11615,"polars_parquet::arrow::write"],[11616,"polars_plan::dsl::functions::temporal"],[11617,"polars_plan::dsl::options"],[11618,"polars_parquet::parquet::metadata::file_metadata"],[11619,"polars_plan::plans::lit"],[11620,"polars_plan::plans::options"],[11621,"polars_arrow::legacy::kernels::rolling"],[11622,"polars_arrow::legacy::kernels::time"],[11623,"polars_lazy::scan::file_list_reader"],[11624,"polars_io::cloud::options"],[11625,"polars_parquet::parquet::metadata::column_order"],[11626,"polars_ops::chunked_array::binary::namespace"],[11627,"polars_io::ndjson::core"],[11628,"polars_ops::frame::join::cross_join"],[11629,"polars_lazy::dsl::eval"],[11630,"polars_time::chunkedarray::date"],[11631,"polars_time::chunkedarray::datetime"],[11632,"polars_time::chunkedarray::duration"],[11633,"core::ffi::c_str"],[11634,"core::default"],[11635,"polars_parquet::parquet::metadata::column_chunk_metadata"],[11636,"polars_core::series::ops"],[11637,"polars_plan::dsl::dt"],[11638,"polars_ops::series::ops::various"],[11639,"polars_arrow::scalar"],[11640,"polars_lazy::dsl::list"],[11641,"crossterm::command"],[11642,"polars_io::shared"],[11643,"polars_plan::plans::apply"],[11644,"polars_plan::dsl::function_expr::binary"],[11645,"polars_plan::dsl::function_expr::array"],[11646,"polars_plan::dsl::function_expr::range"],[11647,"polars_plan::dsl::function_expr::list"],[11648,"polars_parquet::arrow::read::statistics"],[11649,"alloc::ffi::c_str"],[11650,"polars_arrow::array::struct_::mutable"],[11651,"polars_arrow::array::growable::structure"],[11652,"polars_core::schema"],[11653,"polars_arrow::legacy::array::default_arrays"],[11654,"polars_arrow::buffer::immutable"],[11655,"polars_arrow::array::list"],[11656,"polars_core::named_from"],[11657,"polars_ops::frame::join"],[11658,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11659,"polars_time::chunkedarray::time"],[11660,"core::num::nonzero"],[11661,"polars_arrow::array::struct_::iterator"],[11662,"polars_ops::frame::join::asof::groups"],[11663,"polars_ops::chunked_array::list::namespace"],[11664,"polars_plan::dsl::name"],[11665,"parquet_format_safe::parquet_format"],[11666,"polars_core::utils::supertype"],[11667,"polars_io::options"],[11668,"polars_core::chunked_array::ops::aggregate"],[11669,"polars_core::chunked_array::ops::aggregate::quantile"],[11670,"polars_arrow::legacy::index"],[11671,"polars_plan::plans::ir::scan_sources"],[11672,"polars_ops::chunked_array::strings::split"],[11673,"core::pin"],[11674,"core::io::borrowed_buf"],[11675,"parquet_format_safe::thrift::varint::decode"],[11676,"polars_time::chunkedarray::rolling_window::dispatch"],[11677,"polars_time::round"],[11678,"polars_parquet::parquet::metadata::schema_descriptor"],[11679,"polars_core::chunked_array::ops::aggregate::var"],[11680,"polars_plan::dsl::string"],[11681,"polars_ops::series::ops::to_dummies"],[11682,"polars_time::truncate"],[11683,"polars_io::csv::read::schema_inference"],[11684,"polars_time::upsample"],[11685,"polars_core::hashing::vector_hasher"],[11686,"alloc::collections::btree::map"],[11687,"polars_parquet::parquet::metadata::row_metadata"],[11688,"polars_utils::mmap::private"],[11689,"polars_parquet::arrow::read::deserialize::utils::filter"],[11690,"polars_ops::chunked_array::array::namespace"],[11691,"polars_ops::chunked_array::array"],[11692,"polars_io::csv::read::buffer"],[11693,"polars_time::chunkedarray::string::patterns"],[11694,"polars_time::chunkedarray::string::infer"],[11695,"polars_io::utils::compression"],[11696,"polars_arrow::legacy::array::fixed_size_list"],[11697,"polars_plan::dsl::function_expr::rolling"],[11698,"polars_plan::dsl::function_expr::rolling_by"],[11699,"polars_arrow::legacy::array::null"],[11700,"polars_arrow::bitmap::mutable"],[11701,"polars_arrow::array::utf8"],[11702,"polars_core::series::iterator"],[11703,"alloc::rc"],[11704,"polars_core"],[11705,"polars_core::chunked_array::struct_"],[11706,"polars_core::chunked_array::iterator::par"],[11707,"polars_core::chunked_array::object::extension"],[11708,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11709,"polars_core::chunked_array::ops::gather"],[11710,"polars_core::chunked_array::ops::sort"],[11711,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11712,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11713,"polars_core::chunked_array::temporal"],[11714,"polars_core::chunked_array::temporal::conversion"],[11715,"polars_core::chunked_array::temporal::time"],[11716,"polars_core::chunked_array::logical::date"],[11717,"polars_core::chunked_array::logical::datetime"],[11718,"polars_core::chunked_array::logical::decimal"],[11719,"polars_core::chunked_array::logical::duration"],[11720,"polars_core::datatypes::aliases"],[11721,"polars_utils::aliases"],[11722,"polars_core::chunked_array::logical::time"],[11723,"polars_error::constants"],[11724,"polars_core::functions"],[11725,"polars_core::frame::horizontal"],[11726,"polars_arrow::datatypes::schema"],[11727,"polars_io::utils::other"],[11728,"polars_io::parquet::metadata"],[11729,"polars_arrow::legacy::prelude"],[11730,"polars_arrow::legacy::array"],[11731,"polars_io::path_utils"],[11732,"polars_ops::series::ops::rolling"],[11733,"polars_parquet::parquet::write"],[11734,"polars_io::utils"],[11735,"polars_ops::frame::join::general"],[11736,"polars_io::parquet::read"],[11737,"polars_ops::series::ops::abs"],[11738,"polars_plan::dsl::functions::selectors"],[11739,"polars_plan::dsl::functions::horizontal"],[11740,"polars_plan::dsl::functions::arity"],[11741,"polars_plan::dsl"],[11742,"polars_plan::dsl::functions::range"],[11743,"polars_plan::dsl::functions::index"],[11744,"polars_ops::chunked_array"],[11745,"polars_plan::dsl::functions::coerce"],[11746,"polars_plan::dsl::functions::syntactic_sugar"],[11747,"polars_time::base_utc_offset"],[11748,"polars_io::csv::read"],[11749,"polars_time"],[11750,"polars_ops::series::ops::clip"],[11751,"polars_io"],[11752,"polars_ops::series::ops::horizontal"],[11753,"polars_lazy::dsl::functions"],[11754,"polars_plan::dsl::functions::concat"],[11755,"polars_ops::series::ops::index"],[11756,"polars_io::csv::read::parser"],[11757,"polars_ops::series::ops::cum_agg"],[11758,"polars_ops::series::ops::diff"],[11759,"polars_time::dst_offset"],[11760,"polars_ops::series::ops::floor_divide"],[11761,"polars_ops::chunked_array::strings::concat"],[11762,"polars_ops::series::ops::duration"],[11763,"polars_ops::chunked_array::datetime::replace_time_zone"],[11764,"polars_time::date_range"],[11765,"polars_ops::series::ops::interpolation"],[11766,"polars_ops::series::ops::interpolation::interpolate_by"],[11767,"polars_ops::series::ops::is_first_distinct"],[11768,"polars_ops::series::ops::is_in"],[11769,"polars_ops::series::ops::is_last_distinct"],[11770,"polars_io::parquet::read::utils"],[11771,"polars_ops::series::ops::negate"],[11772,"polars_ops::series::ops::not"],[11773,"polars_ops::series::ops::int_range"],[11774,"polars_plan::dsl::functions::repeat"],[11775,"polars_ops::chunked_array::repeat_by"],[11776,"polars_ops::series::ops::replace"],[11777,"polars_ops::chunked_array::strings::strip"],[11778,"polars_io::partition"],[11779,"polars_io::parquet::read::predicates"],[11780,"polars_io::parquet::read::mmap"],[11781,"polars_time::chunkedarray"],[11782,"polars_io::cloud"],[11783,"polars_ops::chunked_array::mode"],[11784,"polars_ops::chunked_array::nan_propagating_aggregate"],[11785,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````M`000`l000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000101``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`000000000000100000000000000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000`0000000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABf00000000000000000000000000````````````````ACjACnAD`ADbABh0ABjABlABn0AC`ACb54ACdACf5ACh5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADh000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Fj000000000000000000000000000``ADlADn1000101000`AE```AEbAEd````AEhAElAEn21021021021021021021021021210210`210210210210210``AFlK`Gj0Jf`3Mf22````````42110Mh4AF`4343434343434433434321560432156043150431504315043AFb54542654332671543267154541Ml777437826565265265777777726666655555437826565665565656577507777354378265656565437826565657657777656522077770777365365657757777775776565653372656543782654378265334378265653437826513````AG`00000Jh1111`111111110011111111111111111111``111111101111111110Cd2222222222`AGl000000000000000000000````AGn00AH`0000000```00`0`10000AI````````````````````````````0AHf``AIb22222DJl3``0``3F`Ff5AHb5AHh066AHj0AHl`549549AHn0065:65:65:6565:65:6565:65:88666555AId0`AIfAIh`98=9988=`AIjAIl`AIn0>><;AI`=<0=<0AJ`AJbAIb0F`FfAHb0AJd1132?32AJf5543>1AJh0AJjAJlAJn0`0AK`AKbAKd0`AHj0AKf;AKhAKjAKlF`FfAI`210210210AHl7321323232232232`AKn`ALhALdAL``````````````````````````````````````ALl00`0`000000000000000000`00000`````>>````````````87878787>>```````````AOl`JbElDl```````21AGb`2``3`0320```32`````````3200``32``3200``0320``Dd0431```11`51431``431```AOb`3DJnDK```````8``764``764``764``764``4`555444AOh875``3``5B@bKl1010Al;:8`;:`;``939```````````BA``3`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALb0;09Kh69AMhAOjJbAOlElAOnOf;ObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bAMhJb01Kh1CfL`ObNjFbNdN`NnKdKjEfEhAnB`BbAMjAMh110AMl0AMn0ElJbKh0Dd0003OfANdALb3433:BB`5DKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bDdAMjBB`KhDKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bElAOb`AOfJb3Kh0200000AMh`L`ObNjFbNdN`NnKdKjEfEhDd=AOhAOb>AOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bDdKhAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bDdKhAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bDdOfB@f0002El00`Kh4B@hAOhAObJbAOl6;99AMjBB`77DKbDjAhjCfL`Cb=<;AMhAOj<;ElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bDdAMjBB`Kh0DKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bKhCfL`ObNjFbNdN`NnKdKjEfEhAMjDd1BB`?DKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bAOfKh0000AMhJbOf0Dd00AOh3AOlEl0AOn5Kl<;7888888555777333222111666000<<<;;;9AObAOdAMjB@h9983AOj<<8776;55AGbB@b<<<<<4BB`Kh00DKbDjAhjCfL`Cb<AOhAObAMh>Jb00000AOlEl000AOnOf00Kl0ObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGb00B@bElAMhKh01Dd00000001111110002ALb00030AOb33333AOf544444051DlAhjCfL`CbObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AObAMhElJbBAlALb444444Dd3AOl5OfKlAGbB@b8Kh0:6AMjBB`2DKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bEl2DdAMjBB`KhDKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bBB`BAnKh0000AMhJbDdEl00200033020AOb31110131931313111131111319ALb502153555555``2AOl6`B@h887888CfL`ObNjFbNdN`NnKdKjEfEhAMh0Of0Kh0DJnDK`AMj33333333B@h54AOnBB`8888888166DdJbKl9;96CfL`ObNjFbNdN`NnKdKjEfEhKh0AOb111Of2222BB`AMh0444Jb5CfL`ObNjFbNdN`NnKdKjEfEhKh00>ElOfKl20AMh00AGbDd6AOhAOb4AOjJbAOl:AOn:9ObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bEl2KhDd111Jb3Kl133AMl0AMn0B@f00045AMjBB`8DKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bDdAMjBB`KhDKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bJbElDd21Kl1AMjBB`KhDKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@b1AMh0ALb10El1DdAMjBB`KhDKbDjAhjCfL`CbB@hAOhAObAMhAOjJbAOlElAOnOfKlObNjFbNdN`NnKdKjEfEhKfLhAnB`FdBbLbKnLdB@`AGbB@bDJnDK`ALbDd00Jb`````AOb`AOh10``AOd`````2121``BBl0000`00`0000000`0``BC`n000DKd`112101```11111112BBn302302`223002302302`300223002222222`302302`0``````02302302023023022DKfDKh10```BDf`0BDd11``0``01AAj0000000000000BEjBEl3421034222342342342224210342103421034222222222242224442`222222342210342222222222222222`2222422222222222221034221034210222222222222222222221022222222222222`222222222222222221022222222222222222342222221034222221034221034222222222210342222222`BFn000000000000000000000000000`BGd0``0``````BGlC``2`22222222210`222BG`1BDl40`1023BHfBGhBGf453762104537453745374537345621004537621045373162104453745444555`643445377`6210444455377445335BH`4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648DKjDKl0``````````BHlBHn0`BI`0BIbBId``1011110101010101010`10011010101010BDj211210210210210210`02102102100000022110`2102102121021```210210210210210``BLhBKbBBb`BNd1CGbCCf01`CD``C@f5```3ALlAOlBDf6```::`CHnJbElDl``>``````````CCn```?```CEhCEf`CDlAI`BLhCGjCGf``CId;:AGb``BBb5`<``=``152=<1`````CBfCEb``CEn`BFfBKh00CFf69`;JbEl```````CGh><```````````````````````````````````>``>CCj:nCEh<?``1BLhCGj003CGfBNdBGd3CCn```````555553`````<CBhCBj`DBd6CId?>AGb0``1`8JbEl``:``:31022``CEf`3=CFfC@f??`CG`BBbn`CGf:879``````BKhD@dCGj;:77DKd6`BKb7CHl```;BLhAGb55577````:CGl0`````2``2>;6BNdBGdBDf44`CIdAOl61JbEl8``3108``9C@fBFfCDlAI`=CBj```CCnAHfBBb``0BLhCGh`CGd`AOb``CFf`BGd``````CHl>>CEn`33DlDJnDK`CGj0OlCGf``n:DBdBGlC``````BNd=`BBb````CCn`CIdAOl``1JbElAGb``4210``4210``4210``BKbBLh0`2``````=````````CGb0`000`0?0Dl11100CGfAIbCFfCHl`````CCj``DGfCGl``1```2BBbCDj`=`=``=BNdBGdBDfD@d`````DKnCBfCBhCCnCEbALl`;CGj0AOh`CE`OlCHnJbElAGb````BLh````````BBb`AOb`C@f0`CCb94<11CEn0CDb07CFfCEfBNdAI`BGd1;210;20CGfB@bKlOl332176545?<3?<CBj4CCdCGl?BKh`:8CG`CCf``::987AlCDlCE`9CD`BLh`1`n``2CBfDJlCEbCEhDL`BDfCGbC@f0BBb`CIdD@dJbElAGbCInBLh``````43`4`DKdAI`CDb0``;CEfCGf;ABfnBK`CHj``Dl`BKh0```````AOh2```````C@f```````````BA``>`CEhCGl`BNdBGd``=`7D@dCInCEfBLh0CId1```BBb`82CGj33CGf4`14DKnCBfCBhCCnCEbALlCHj`;;``````BKb8<<``CEhBKh0n01CBj`ABfCFf`````33```>B@b1`BBb````CId````````BLh7000CCd553CGjBGlC```CEnDJlDL`;99```555`CGh`6``BNdBGdAOl<<JbEl`n``>```2`<<<<<<`21AGb``?1``3`BKbBBbCGl98BLhCBjBKhCGj`3``5`2CGfCId<;99``1```922`2511111111ABfBA`C@f`473?><``3?><``3?><``3?><````CEnCFf>`:`El?```;8`CCbAGb0=ALb0BNdBGd``?<<`BBb`0CBj``CGl?;?CDjAI`Dl8=`C@nBEnBKfBL`CAjCAlCAnCB`CBbBDnBF`CBdBFlCBfCBhCBjCBlAAlA@dCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfBFhMdBAbOlCIjCIlCIn`BEnBIn0``BJb9AHbBJdBJf000BJh6BJj`BBbBK`1BKbBFl0BKd1BKf5`5`5BKh`MjBKlCHhBKn00CH`;BEn<`<AC`ACb1010AHf:?`?AHh0BBb0`22`BFhBLjBLlBLn42104AHj5BJd`1AHl71`BM`CHh`9AMl990AMn0::`BMbBKn7BMf=8=MdBMhBMj000MjBN`11BNd2ANdBNfBJdALbBNh`877`BBbBNl0`CChBJjBO`BOfBOjBOn4`7`BKbBKh<00<00010<0CAbBLlALnBKlC@bBNn<C@nBEnBKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMj0CIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCInCAbBLlALnBKlC@bBNnBJjC@nBEnBKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCInBEn7`ABn1CAlCB`CHfC@hC@j`BMfC@l2C@n`BJd:AHnBBbAOf=2201`1Mj2CAd3OnCAfBFhBOjCAh:0:CBn`;;`9`9`9<BEnBKfBL`CAjCAlCAnCB`CBbBDnBF`CBdBFlCBfCBhCBjCBlAAlA@dCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfBFhMdBAbOlCIjCIlCInBJdC@nBEnBKfBL`CAjCAlCAnCB`CBbBDnBF`CBdBFlCBfCBhCBjCBlAAlA@dCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfBFhMdBAbOlCIjCIlCInC@nBEnBKfBL`CAjCAlCAnCB`CBbBDnBF`CBdBFlCBfCBhCBjCBlAAlA@dCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfBFhMdBAbOlCIjCIlCInCBbBDnBF``CJ`CAjCAnCAlCB`BFlMj`BKlCCjBJ```BEn`B@f000ADlADn100033`CIb0CBnBJhCC`<;BKh`CDfCElCFf`BNl`CJ`CAj````BLlCJh4BLn9155``BEnCJjBBb88```BInCIb4CJl0`3``3`3`3``3CJn>`CCl```0`````CK`CKbCAfCH`CKdBFlCHb1CHdCIjCC`Mj0BEnBL`CAlCB`CKfBDnBF`CBjCBn:CCbBJ`CChCCjCClCD`CDbCDfCDhCDjCDlCDnCEbCEhCEjCElCEnCFfBBbBLd00CGnCH`CHbCHfCHhCHjCHlCI`BKhMj000CIfCIhOnBFfBAbOl``CAbBLlALn0BKlC@bBNnBJjC@nBEnBKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLd0CGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMj0CIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCInCAbBLlALn0BKlC@bBNnBJjC@nBEnBKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCInCEjF`FfCFfBEn0001Mj`BDl`CIh`BLnBBbBKh7CKnCGnBK`4BKd5999CAbBLlALnBKlC@bBNnBJjC@n0BEn0BKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMj0CIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCInBBbBEn01BJd``2AOf1:98Of9``CBn`CGnBKhMj0CC`CJh0```CLh2CBbBDnBF`BFlCBfCBhCBjAAl>:CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdBNdBBb0CG`C@fBLd0CGbCGdCGfCGhCGjCGlBLhCKnCGnCHdCHfCHhCHjCHlCHnCI`BKbCIdMj00CIfCIhOnBFfBFh0MdBAbOlCInBBbAIb0BDn00BF`00BFl00CBf00CBh00CBj00AAl00CBn00CC`00CCb00CCd00CCf00BJ`00CCh00CCj00CCl00CCn00CD`00CDb00CDf00CDh00CDj00CDl00CDn00CE`00CEb00CEd00CEh00CEl00CEn00CF`00CFb00CFd00BBb00CG`00C@f00CGb00CGd00CGf00CGh00CGj00CGl00CGn00CHd00CHf00CHh00CHj00CHl00CHn00CI`00BKb00Mj00CIf00CIh00BFf00BAb00Ol00CIn00CLnBDn?BBb09```BEn0AId20`BKh3BNlA@d111AC`C@n601BJdBJb00BFhCBn:;`:;;AIfAIh5<=999CMdCMfACbAOdBKlBJjCJ`CAjCAnBO`CMhBMbCMjBOfCMlCMnCJjBOjBOnAC`=<;9BOl`BEnBLnBBb`0CCl0`BLdCAd33`MjBMfC@lC@hCBbBDnBF`CBdBFl0CBfCBhCBjAAlA@dBKnCBnCC`CCbCCdCCfBJ`CChCCjCN`CClCCn0CD`CDb0CDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdBBb0CG`C@f0BLdCGb0CGd0CGf0CGh0CGj0CGl0BLh0CKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKh0000CIbCIdMj00CIfCIhOnBFfBFhMdBAbOlCIjCIlCIn`:CBb9`BKlCHhCHf`BBbCAbBLlALn6C@bBNnBJjC@nBEn00BKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAl0A@dBOnDDhCBnCC`CCbCCd0CCfBJ`0CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBb0000000000000CG`C@fBLd0000000000CGbCGdCGfCGhCGjCGlBLh0000CKn0CGnCH`CHbCHdCHfCHhCHj0CHlCHnCI`BKb0000C@jBKhCIbCIdMj00000000000000000CIfCIhOnBFfD@dBFh00MdBAbOlCIjCIlCInCOhBKh000COjCOnD@`ALn04MjDLb00ADh13310732CIhCJj4422D@d66BLdD@fALb0`AIj1CGnBEnD@hAIl5BFhC@j`BBb`00MjBJdBLlBLn<4AInAOf10CAb<CIdDlCBl00CKhBLbCOh?BM``BOj=>>==BMf6CBn`CN`BAlALbBJdCJ`CAjCB`BEnDAd11``BH`AIbBBbMj21=9BDnBF`BFlCBfCBhCBjCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdBNdBBbCG`C@fCGbCGdCGfCGhCGjCGlBLhCGnCHdCHfCHhCHjCHlCHnCI`BKbCIdMjCIfCIhBFfBAbOlCInDAh0BKfBLnBBbBNl0CAlCB``DAjCKbCAfCH`CKdCHbBKlBJ`AAlCBn```=`BO`CChBDn>=21Mj0CI`BFn`3BF```CMnCJjBL`:CAbBLlALnBKlC@bBNnBJjC@nBEnBKf:CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCInAAlAC`BEnD@hA@dC@jBKh``8``BBb``011CAbBLlALnBKlC@bBNnBJjC@n=BKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCIn6ALn=DDfDA`BBbBKh;DAnBLnMj0CBnBAnBDb3MdBFd;8C@fCCn`;`1BFlCGn<BJdBOl?`AJ`BBb45`00`AJb1CK`CKbCAf4=4`74`7A@d5>AAlBAb`MjCIdBDbCLh35CDb4BFl;:9ALbBKhBFhCOh2DBdBLlBEnBLnD@hDBf3DBh0BKlBJ`1BJbDBjCIb0BDn`:9ALbBBbDBn=MjCDh?=:ABf00`BJdBLn6BFhBEn3CCl9`DC`BFlDCbCIdMd>>6BKfCAnCJjCB`CBnCEdBBbDBh00000000000000000000AIb2Mj13CChCDfCDnCElF`Ff``6BEnDBj;`;BM`0BLd0=020=`==`1?1111CId```BLl5BLnAHbBBbDCjBJdCIbCKnCGn`=7653`8=7AJd64DCl5CMh`BAbCEjCH`CKdCHbCAf21`BLlBEnBLnAHbBBb1CBbCHdOnDCjBJdCKnCGnDAjCKb>CH`CKdCHbCC``=CK`5CAf5BFl0BK`1BBbBKdF`FfBJdCJ`CAjCAnBL`CAlCB`DDhCBnBO`1BLlBLnAHlBBb==09C@jOfBAb33`DAjCKbCAfCKdBFlCHbMjCDb3;``3DCn<<BM`DJnCMdCMfDK`DD`ALnBKlBJjCAjCAnBO`;CMhBMbCMjCKfBOfBFlCMlCMnCBlCJjBOlBOjBOnBJ`BLdCH`CHbBKbC@jMjBFhMdBAb32AJfBJdCCd6`05CAjCAn28888108888DDfDA`BKnC@bBNnBOlBBb0`0BKhAIb0``AAlA@dCCl?BEn6CKnCGnCC`F`FfBOjCIbBDnBF`CBlAIdBKlCI`BFn>C@jBBbCK`CKbCAf0CFjCFnDDh66`CB`CEdCIhBFl9DAj9CBn22Mj1BDnBF`?22````?9DBj0`CIlDCjBBbBEn8BFh88`1AJd3DClBJdCK`CKbCAf>CC`CCl0CBnDDn<Mj0BOj1111CJ`:CAjCAnCAlCB`8CIh`AJh0BK`BBbBKdBKh`BJdBEnBJb``5`BNl60BM`11``7`7`C@jAJj6BLl6BLn;CDhBKlDAd:>AJl?<?DEfBBb1010100010101010101010101010DEhCAd2CBl0130CElCIbCJ`CAjCAnBL`CAlCB`CBnCHh0DBhBLd??3BKnBEn00000DEjAJn0CMhBMbBOlBOj7CIb?DDh=1`BKh>9`DAjCKbCAfCH`CKdCHbMjBEn0CC`CClCCh`AJn<4?BOnCMhBMbCMnBOjCMdBBbBFhAK`BJdBLl?BLn5AKbBEn7BJ`8ACb692222CJhBL`CBnCIf1:68=<<5AKd=0=====`AHj;8:??80<MjCJ`CAjCAnBNlBJdBFh022`2`2BBbBDn>>CElBLlBEnBLnAKf68DF`9A@d8;`;;;;;CDhCAfCHf;``>`>`>`>`>Mj<BK`=BKbBKh0BKdBKlDBjBJ`01`BLlBEnBLnAHbBBbDCjBJdBLdC@f=Mj8BKf86AKh5DFd066AKj7BFh`CFhCFlCCl`CH`CHb1CAfBEnCFf1CIdBLnCOh;AKl5DFhBJhBBbBNlBLl1DBjAAlC@n=BKfBL`CAjCAlCAnCB`CBbBDnBF`CBdBFlCBfCBhCBjCBlAAlA@dCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfBFhMdBAbOlCIjCIlCInBBbBM`CAfBFlCCnCDb5C@fCGbCGdCGfCGhCGjCGlBLhMjCOhCIhBNl0DBjCDfCElBKhCDh0BEnBFh000ABf00DFjBFl0CBl10CC`21AMl660AMn077B@f000ADlADn1000CAbBLlALnBKlC@bBNnBJjC@nBEnBKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCId0Mj0CIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCIn>COhCAbBLlALnBKlC@bBNnBJjC@nBEnBKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCInCBnBM`0BBb1DCnCF`CFbCFdMj>00000CC`11BMfC@hBLbBFlCCnCDb<C@fCGbCGdCGfCGhCGjCGlBLh??CAbBLlALnBKlC@bBNnBJjC@nBEnBKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCInCd`BKhAHlBLlBEnBLnBBbBJd3432133Mj0>CBn3DGb0BOjCB`CEd`BKlBJ`BFh0ALbMdCLh=CI`BFn4545BLlBEnBLnAKfBBbBJdDF`187DGd0CIbMjCAb:ALnBKlC@bBNnBJjC@n?BKfBL`CAjCAlCAnCB`DDfBO`BM`CMhDA`BMbCMjCKfCBbBOfBDnBF`CBdBFlDGfCMlCBfCMnCBhCBjCBlBLnDBjCJjBJbBOlBOjAAlA@dBOnDDhCBnCC`CCbCCdCCfBJ`CChCCjCClCCnCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdDCbCFfCFhCFjCFlCFnBNdBBbCG`C@fBLdCGbCGdCGfCGhCGjCGlBLhCKnCGnCH`CHbCHdCHfCHhCHjCHlCHnCI`BKbC@jBKhCIbCIdMjCIfCIhOnBFfD@dBFhMdBAbOlCIjCIlCIn<CK`CKbCAf10CBjBFlCHb1?`CFjCFnCBbCHdOnBKlCH`CAnBO`CMnCAjDJnDK`CJjCBn47BEnBJ`11CMhBMbBOj5DDh5:CC`CMjBOf1CKf1BOn:0BO`0CH`CHbCAj8BM`1CBn2:2:7BJb664331?=54543CAnCMnCJj4CMhBOj84846CMl4<97BAb<;;<;:CC`=CJ`<<885BMb7;7;>BO`>3BEn=9=397082:97=0?141?=3?;9=0BOn41CAj0==:4;9?BM`CBn2?>=02?>=0CH`CHb47:64242=694CAn6BJ`9336<6<8BFh0ALb145:ABf00000000000000000MjCDfCEl`22BBbCK`CKbCAf=`AKnDLdDLfDLh2102DLjDLlDLnDM`0DMbDMdDMfDMhDMjDMlDMnDN`0DNbDNdDNf15;4DNh:DNj4:DNlDNn0>DO`DM`240<4;02:5136229=??9<DObDOdDOf0DOhDOj4DOlDOnE@`E@b3E@d528E@f1E@h11098432323570;5E@jE@lE@n0EA`EAbEAdEAfEAh01EAj1EAlEAnEB`EBbEBdEBf697DKjDKl0EBh00DKfDKh10EBjEBlEBn21EC`ECbECdECf03421ECh0````````````BHlBHn0`ALhALdAL```````````````````````````````````DHd000000000000000DHf`C@d000000000000000DHh`0`00`0000000000000`00ECjEClECn32103210321032103321032103`210332103210321032103ED`00````````BMj0000CBbCK`CKbCKd3DAj213232114021320213230232DEf0000000000000132`433543`DHl0000``07777DHj8111111111111111`11111111`DId``DHn000000000`0000DI`11111211111DIf0``0000CJb010100000101010100000110001010`001010101011``11110DIh`00000000000`0000AOl`JbElDl```````21AGb`2``3`0320```32`````````3200``32``3200``0320``320```00`40320``320```AOb`2DJnDK```````7``653``653``653``653``3`444333AOh764``3``4B@bKl1010Al:97`:9`:``838```````````BA``3`<;:`;`;:8;`;:88````80`;:8``;:8``;:8``;:8``8:8`88ALb0:0AMl0AMn0ANd3`AOf0`B@f000`1OfAOd7777733DlBAl9BAn::```4DJnDK`;;::7777<<<10<`````AOb`AOh10``7`````1010```````````COjCOnD@``CLf00000000000000000000000000000000000000000000000000`BI`0`DIj000000000000000000``BLhCGb00011111CGjCGf33`03`CGh414414222124444411111444124222CGl055355`51CGd443665555553555531446646633363631365636`1366616466364666366366664444246`4444446`1646`334446333333333664633133````DLjDLlDLnE@jE@lE@n0EA`EAbEAdEAfEAh01EAj1EAlEAnEB`EBbEBdEBf697EBjEBlEBn21EC`ECbECdECf03421ECh0`CGdCGh0`0DIl000`00000000000000000000000000DIn000`00000000000000000000000000````CE`0`````````DJ`00000000000000000000000000000`DG`000000000`0000``000000000ALl00`````DJdCAf000000000000000000`````AKd0````````````F`Ff10101022```BNhBNl0000000000000000`0000000`0`00`00000`0`0`0`0`00000`C@j0000``EDbEDdLl``0``AIbEDf2````02AbBJd111111`11100`110010011101110001DJh3520352122221221211225215252222220352203522222035211252422242222255522222212152220352222222222222222222222222222222222222222222222222222222222222122211114222422215222222`20352035220BDb3233332203333232335333533332232232333323223333333333333333333333333333333333333333333333333333332315333533332`332233323332623333223312332232233333333323323322233333633331463333314633333314633333232221463333``Ed000000000000000000000```BK``0BKdBn`210210210210``CAhFl10CLb0`000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{An}}{l{An}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}}{{{l{Bb}}{l{Bb}}}}{{{l{B`}}{l{B`}}}}{{{f{{l{B`}}}}{f{{Bf{Bd}}}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BhBj}}{{{f{{l{c}}}}e}{}Al{BhBj}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{An}}}}{f{Bl}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{{Cb{c}}}}}}{f{C`}}}AbCd}{{{f{{l{c}}}}{f{C`}}}AbAl}{{{f{{l{Bb}}}}{f{C`}}}Ab}{{{f{{l{An}}}}{f{C`}}}Ab}{{{f{{l{B`}}}}{f{C`}}}Ab}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{Cf}}}}{f{C`}}}Ab}{{{f{{l{Bb}}}}}d}{{{f{{l{Bb}}}}}{{Ch{d}}}}{{{f{{l{Cf}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cf}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dl{}{{Dh{Dj}}}}}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{Ch}{{Ad{Ch}}}}E`}}{{{f{{l{B`}}}}c}{{l{B`}}}{{Dn{{Ch{{f{{Bf{Bd}}}}}}}{{Ad{{Ch{{Eb{{Bf{Bd}}}}}}}}}}E`}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dn{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Dn{{Ch{{f{Bl}}}}}{{Ad{{Ch{{Eb{Bl}}}}}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Cf}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Cf}}}}c}{{l{Cf}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Ef}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{c}}}}e}{{l{An}}}Dl{{Af{{f{DfEj}}}}}}{{{f{{l{An}}}}{f{Dn}}}{{l{An}}}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}Al}{{{f{{l{Bb}}}}{f{Dn}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{Dn}}}{{l{B`}}}}{{{f{{l{B`}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{Dn}}}{{l{e}}}AlDl}{{{f{{l{Bb}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{An}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{Df{l{c}}}}e}bAl{{Dn{}{{Ad{}}}}E`}}{{{f{{l{B`}}}}c}{{l{B`}}}{{Af{{f{{Bf{Bd}}}}}{{Ad{{f{{Bf{Bd}}}}}}}}}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{{f{Bl}}}{{Ad{{f{Bl}}}}}}}}{{{f{{l{c}}}}Elg}{{l{i}}}Dl{}{{Af{}{{Ad{e}}}}}Dl}{{{f{{l{Cf}}}}{f{Dn}}}{{A`{{l{Cf}}n}}}}{{{f{{l{Ah}}}}{f{Dn}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Bb}}}}e{f{Df{Bf{c}}}}}b{}{{Dn{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{c}}}}g{f{Df{Bf{e}}}}}bAl{}{{Dn{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{B`}}}}e{f{Df{Bf{c}}}}}b{}{{Dn{{Ch{{f{{Bf{Bd}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{Cb{c}}}}}}g{f{Df{Bf{e}}}}}bCd{}{{Dn{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bf{c}}}}}b{}{{Dn{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{An}}}}e{f{Df{Bf{c}}}}}b{}{{Dn{{Ch{{f{Bl}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dn{d}{{Ad{d}}}}E`}}{{{f{{l{B`}}}}c}{{l{B`}}}{{Dn{{f{{Bf{Bd}}}}}{{Ad{{Eb{{Bf{Bd}}}}}}}}E`}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{Ab}{{Ad{Ab}}}}E`}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dn{{f{c}}}{{Ad{c}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Dn{{f{Bl}}}{{Ad{{Eb{Bl}}}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{En{f{Bl}}}{{Ad{En}}}}E`}}{{{f{{l{c}}}}F`}{{l{Fb}}}Al}{{{f{{l{B`}}}}F`}{{l{Fb}}}}{{{f{{l{Fd}}}}F`}{{l{Fb}}}}{{{f{{l{j}}}}F`}{{l{Fb}}}}{{{f{{l{An}}}}F`}{{l{Fb}}}}{{{f{{l{Bb}}}}F`}{{l{Fb}}}}{{{f{{l{An}}}}{f{{Bf{Ab}}}}{f{Ff}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Fd}}}}{f{{Bf{Ab}}}}{f{Ff}}}{{A`{{l{Fb}}n}}}}{{{f{{l{B`}}}}{f{{Bf{Ab}}}}{f{Ff}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bb}}}}{f{{Bf{Ab}}}}{f{Ff}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}{f{{Bf{Ab}}}}{f{Ff}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{Bb}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{An}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{B`}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{Fb}}n}}}Cd}`{{{f{{l{Cf}}}}}{{f{{l{Cf}}}}}}{{{f{{l{An}}}}}{{l{B`}}}}{{{f{{l{B`}}}}}{{f{{l{B`}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{An}}}}}{{f{{l{An}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DlDl{{Af{{Ch{Ed}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fh}{{{l{Bb}}{l{Bb}}}}021021{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0``{{{f{{l{j}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Dn{}{{Ad{}}}}E`}Al}{{{f{{l{Cf}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{B`}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}}{{A`{Abn}}}Al}{{{f{{l{Fd}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Fd}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}Fj}{{A`{Abn}}}Al}{{{f{{l{An}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{l{B`}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{l{j}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Fl}{{{f{{l{c}}}}e}{{A`{Abn}}}FlBj}{{{f{{l{c}}}}}{{Gd{{Fn{{Cn{Cl}}}}{Gb{{f{{Cn{Cl}}}}}{{Ad{G`}}}}}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{G`}}}}}}}Dl}{{{f{{l{c}}}}}{{f{{Gf{{Cn{Cl}}}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{Gf{{Cn{Cl}}}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Dl}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DlAl}}`{fGh}{{{f{{l{c}}}}}{{A`{{f{Bf}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Gj}bDl}{{{f{Df{l{c}}}}{f{{l{e}}}}Gj}bDlDl}{{{f{{l{c}}}}}{{`{Gl}}}Al}{{}{{l{c}}}Dl}{G`{{f{c}}}{}}0{G`{{f{Dfc}}}{}}0{{{f{{l{c}}}}e}{}Al{BhBj}}{{{l{c}}e}{}Al{BhBj}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}}bDl}{G`b}0{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}{{{f{{l{An}}}}{f{Bl}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}AlBj}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{Bf{Bd}}}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bb}}}}8264513790{{{f{{l{Cf}}}}}{{A`{{Hb{Ab{H`{Gn}}}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hb{Ab{H`{Gn}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bl}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gf{Ab}}}}{{{f{{l{Bb}}}}d}{{A`{{l{Bb}}n}}}}{{{f{{l{B`}}}}{f{{Bf{Bd}}}}}{{A`{{l{B`}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{c}}}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}{{Dl{}{{Hd{Dj}}{Hf{Dj}}}}}}{{{f{{l{An}}}}{f{{l{Bb}}}}}{{A`{{l{An}}n}}}}{{{f{{l{{Cb{c}}}}}}{f{{l{Bb}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{B`}}}}{f{{l{Bb}}}}}{{A`{{l{B`}}n}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{G`}}}Dl}`{{{f{{l{Bb}}}}{f{DfHh}}}{{A`{bHj}}}}{{{f{{l{{Cb{c}}}}}}{f{DfHh}}}{{A`{bHj}}}Cd}{{{f{{l{c}}}}{f{DfHh}}}{{A`{bHj}}}Al}{{{f{{l{B`}}}}{f{DfHh}}}{{A`{bHj}}}}{{{f{{l{Ah}}}}{f{DfHh}}}{{A`{bHj}}}}{{{f{{l{Cf}}}}{f{DfHh}}}{{A`{bHj}}}}{{{f{{l{An}}}}{f{DfHh}}}{{A`{bHj}}}}{{{f{{l{c}}}}e}bDl{{Af{Ch}}}}{{{f{{l{Cf}}}}c}b{{Af{{Ch{Ed}}}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ed}}}}}}{cc{}}{c{{l{e}}}Cl{{Dl{}{{Hl{c}}}}}}1{{Ddc}{{l{e}}}Hn{{Dl{}{{Hl{}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}{{Dl{}{{Hl{}}}}Dl}Hn}{{Dd{Gf{{Cn{Cl}}}}}{{l{c}}}Dl}{{Dd{Gf{{Cn{Cl}}}}El}{{l{c}}}Dl}{e{{l{B`}}}{{I`{{Bf{Bd}}}}}{{Hn{}{{Cj{c}}}}}}{c{{l{Ah}}}{{Hn{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{e{{l{{Cb{c}}}}}Cd{{Hn{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Hn{}{{Cj{{Hb{Gf{Ch{Ib}}}}}}}}}Al}{c{{l{Ah}}}{{Hn{}{{Cj{{Ch{Ab}}}}}}}}{c{{l{e}}}{{Hn{}{{Cj{Ch}}}}}Al}{e{{l{Ah}}}{{Id{Ab}}}{{Hn{}{{Cj{c}}}}}}{c{{l{Bb}}}{{Hn{}{{Cj{{Ch{d}}}}}}}}{c{{l{Bb}}}{{Hn{}{{Cj{d}}}}}}{e{{l{An}}}{{If{Bl}}}{{Hn{}{{Cj{{Ch{c}}}}}}}}{e{{l{An}}}{{I`{Bl}}}{{Hn{}{{Cj{c}}}}}}{e{{l{B`}}}{{If{{Bf{Bd}}}}}{{Hn{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{B`}}}{{If{{Bf{Bd}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{Bb}}}{{D`{}{{Cj{{Ch{d}}}}}}}}{{Dde}{{l{{Cb{c}}}}}Cd{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Dde}{{l{An}}}{{If{Bl}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{e{{l{Fd}}}{{If{{Bf{Bd}}}}}{{Hn{}{{Cj{{Ch{c}}}}}}}}6;=:978?<{e{{l{Fd}}}{{I`{{Bf{Bd}}}}}{{Hn{}{{Cj{c}}}}}}{e{{l{B`}}}{{I`{{Bf{Bd}}}}}{{Hn{}{{Cj{c}}}}}}{{Dde}{{l{{Cb{c}}}}}Cd{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Dde}{{l{B`}}}{{If{{Bf{Bd}}}}}{{D`{}{{Cj{c}}}}}}{{Dde}{{l{An}}}{{If{Bl}}}{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{Bb}}}{{D`{}{{Cj{d}}}}}}`{c{{l{Bb}}}{{Ih{}{{Cj{{Ch{d}}}}}}}}{c{{l{Bb}}}{{Ih{}{{Cj{d}}}}}}{c{{l{e}}}{{Ih{}{{Cj{Ch}}}}}Al}{e{{l{An}}}{{I`{Bl}}IjIlIn}{{Ih{}{{Cj{c}}}}}}{e{{l{B`}}}{{I`{{Bf{Bd}}}}IjIlIn}{{Ih{}{{Cj{c}}}}}}{e{{l{An}}}{{If{Bl}}IjIl}{{Ih{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Ih{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{B`}}}{{If{{Bf{Bd}}}}IjIl}{{Ih{}{{Cj{{Ch{c}}}}}}}}{{cDdEl}{{l{Ah}}}{{Ih{}{{Cj{{Ch{Ab}}}}}}}}{{Dd{f{{Bf{Ab}}}}}{{A`{{l{j}}n}}}}{{Dd{f{{Bf{c}}}}}{{l{An}}}{{If{Bl}}}}{{Dd{f{{Bf{d}}}}}{{l{Bb}}}}{{Dd{f{Bf}}}{{l{c}}}Al}{{Dd{f{{Bf{c}}}}}{{l{{Cb{c}}}}}Cd}{{Dd{f{{Bf{c}}}}}{{l{B`}}}{{If{{Bf{Bd}}}}}}{{Dd{f{{Bf{{Ch{c}}}}}}}{{l{An}}}{{If{Bl}}}}{{Dd{f{{Bf{{Ch{d}}}}}}}{{l{Bb}}}}{{Dd{f{{Bf{Ch}}}}}{{l{c}}}Al}{{Dd{f{{Bf{{Ch{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{Dd{f{{Bf{{Ch{c}}}}}}}{{l{B`}}}{{If{{Bf{Bd}}}}}}{c{{l{e}}}{{J`{}{{Cj{Ch}}}}}Al}{c{{l{Bb}}}{{J`{}{{Cj{{Ch{d}}}}}}}}{{DdGf}{{l{c}}}Al}{{DdGf{Ch{Ib}}}{{l{c}}}Al}{{DddG`}{{l{Bb}}}}{{Dd{f{{Bf{Bd}}}}G`}{{l{B`}}}}{{Dd{f{Bl}}G`}{{l{An}}}}{{DdG`}{{l{c}}}Al}{{Dd{f{Ab}}G`}{{l{Cf}}}}{{DdcG`}{{l{{Cb{c}}}}}Cd}{{Dd{f{{Bf{Bd}}}}G`}{{l{Fd}}}}{{Dd{f{Ab}}G`}{{l{Ah}}}}{{DdG`}{{l{Bb}}}}{{DdG`}{{l{Ah}}}}{{DdG`}{{l{An}}}}7{{DdG`}{{l{B`}}}}{{DdG`}{{l{{Cb{c}}}}}Cd}{{DdG`}{{l{j}}}}{{DdG`}{{l{Fd}}}}{{DdG`}{{l{Cf}}}}{{{f{{l{c}}}}G`}{{l{c}}}Dl}{{DdG`{f{El}}}{{l{Ah}}}}{{DdG`{f{El}}G`}{{l{Cf}}}}{{{f{{l{c}}}}G`}ChDl}{{{f{{l{B`}}}}G`}{{A`{Jbn}}}}{{{f{{l{Cf}}}}G`}{{A`{Jbn}}}}{{{f{{l{c}}}}G`}{{A`{Jbn}}}Al}{{{f{{l{Bb}}}}G`}{{A`{Jbn}}}}{{{f{{l{An}}}}G`}{{A`{Jbn}}}}{{{f{{l{Fd}}}}G`}{{A`{Jbn}}}}{{{f{{l{j}}}}G`}{{A`{Jbn}}}}{{{f{{l{{Cb{c}}}}}}G`}{{A`{Jbn}}}Cd}{{{f{{l{Ah}}}}G`}{{A`{Jbn}}}}{{{f{{l{Bb}}}}G`}Jb}{{{f{{l{Cf}}}}G`}Jb}{{{f{{l{B`}}}}G`}Jb}{{{f{{l{{Cb{c}}}}}}G`}JbCd}{{{f{{l{Ah}}}}G`}Jb}{{{f{{l{An}}}}G`}Jb}{{{f{{l{j}}}}G`}Jb}{{{f{{l{Fd}}}}G`}Jb}{{{f{{l{c}}}}G`}JbAl}{{{f{{l{Ah}}}}G`}{{Ch{Ab}}}}{{{f{{l{Cf}}}}G`}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Jd}}}Dl}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}JfDl}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Cf}}}}}Ab}{{{f{{l{c}}}}}ChDl}0{{{f{{l{{Cb{c}}}}}}G`}{{Ch{{f{Jh}}}}}Cd}0{{{f{{l{j}}}}F`}{{A`{{l{Fd}}n}}}}{{{f{{l{j}}}}F`}{{A`{{Jj{Gn}}n}}}}{{{f{{l{c}}}}G`}ChDl}{{{f{{l{Cf}}}}}G`}{{{f{{l{Ah}}}}}G`}{{{f{{l{An}}}}}G`}{{{f{{l{Fd}}}}}G`}{{{f{{l{An}}}}dd}{{A`{C`n}}}}{{{f{{l{Bb}}}}dd}{{A`{C`n}}}}{{{f{{l{Cf}}}}dd}{{A`{C`n}}}}{{{f{{l{B`}}}}dd}{{A`{C`n}}}}{{{f{{l{{Cb{c}}}}}}dd}{{A`{C`n}}}Cd}{{{f{{l{c}}}}dd}{{A`{C`n}}}Al}{{{f{{l{Fd}}}}dd}{{A`{C`n}}}}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}G`dG`}C`Fh}{{{f{{l{An}}}}{f{Bl}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{Bf{Bd}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{Bb}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}AlBj}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}543617820{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}{Ch{G`}}}{{l{c}}}Dl}{{}G`}0{{G`Jl{Ch{Jn}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{El}}}}{{{f{{l{Cf}}}}}{{f{El}}}}{{{f{{l{c}}}}}{{Kb{{K`{c}}}}}Dl}{{}c{}}0{{{l{Kd}}}{{Kh{KfKd}}}}{{{l{Kj}}Kl{Ch{Dd}}}{{Kh{KnKj}}}}{{{l{L`}}{Ch{G`}}G`}{{A`{{Kh{LbL`}}n}}}}{{{l{L`}}{Ch{G`}}G`}{{Kh{LbL`}}}}{{{l{Kj}}Kl}{{Kh{LdKj}}}}{{{f{{l{B`}}}}}}{{{f{{l{Cf}}}}}}{{{f{{l{{Cb{c}}}}}}}{}Cd}{{{f{{l{Fd}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{An}}}}}}{{{f{{l{Bb}}}}}}{{{f{{l{c}}}}}{{`{IjIlLfGlJ`}}}Al}{{{l{c}}}AbDl}{{{l{L`}}}Ab}{{{l{Kj}}}{{Kh{LhKj}}}}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}{{l{Bb}}}Lj}000{{{f{{l{c}}}}}{{l{Bb}}}Dl}02{{{f{{l{c}}}}}LlDl}{{{f{{l{c}}}}}{{`{Ln}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dl}{{{f{{l{Ah}}}}}{{`{{D`{}{{Cj{Gn}}}}}}}}{{{f{{l{c}}}}}{{Gd{{Fn{{Cn{Cl}}}}{Gb{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Ib}}}}}}}}}}}Dl}`{{fc}Gh{{If{Bl}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{G`}}}Dl}{{{f{{l{c}}}}}{{M`{c}}}Dl}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}01{{{f{{l{c}}}}}G`Dl}0{{{f{{l{c}}}}e}{{l{c}}}Al{BhMb}}00{{{f{{l{c}}}}G`}{{l{c}}}Dl}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{Bb}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bb}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}{{{f{{l{An}}}}{f{Bl}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}AlBj}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{Bf{Bd}}}}}{{l{Bb}}}}376084521{{{f{{l{c}}}}}ChAl}{{{f{{l{Bb}}}}}{{Ch{d}}}}{{{f{{l{Bb}}}}}Md}{{{f{{l{An}}}}}Md}{{{f{{l{B`}}}}}Md}{{{f{{l{c}}}}}MdAl}{{{f{{l{Bb}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{c}}}}}{{Ch{Aj}}}Fh}{{{f{{l{Ef}}}}}{{Ch{Jl}}}}{{{f{{l{Eh}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}MdFh}{{{f{{l{Eh}}}}}Md}{{{f{{l{Ef}}}}}Md}{{{f{Df{l{c}}}}{K`{c}}}bDl}`{{{f{{l{c}}}}}{{Mf{c}}}Dl}{{{f{{l{c}}}}}{{f{{Mj{{Mh{c}}}}}}}Dl}{{{f{{l{c}}}}}{{Ch{{Mn{Ml}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{Mj{{Mh{c}}}}}}}Dl}{{{f{{l{c}}}}}{{Mj{{Mh{c}}}}}Dl}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bb}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}{{Ch{Hb}}}Al}{{{f{{l{c}}}}}MdAl}{{{f{{l{B`}}}}}Md}{{{f{{l{An}}}}}Md}{{{f{{l{Bb}}}}}Md}{{Dd{f{{Bf{Bd}}}}G`G`}{{l{Bb}}}}{{Dd{f{Bf}}}{{l{c}}}Al}{{{f{{l{c}}}}e}{}Al{BhBj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BhBj}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}G`Dl}{{{f{{l{B`}}}}}{{A`{G`n}}}}{{{f{{l{c}}}}}{{A`{G`n}}}Al}{{{f{{l{An}}}}}{{A`{G`n}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dl}{{Ddc}{{l{An}}}{{If{{Bf{{f{Bl}}}}}}}}{{Dd{f{{Bf{c}}}}}{{l{{Cb{c}}}}}Cd}{{Ddc}{{l{N`}}}{{If{{Bf{{Ch{Nb}}}}}}}}{{Ddc}{{l{N`}}}{{If{{Bf{Nb}}}}}}{{Ddc}{{l{An}}}{{If{{Bf{{Eb{Bl}}}}}}}}{{Ddc}{{l{Nd}}}{{If{{Bf{{Ch{Jn}}}}}}}}{{Dd{Nf{Jd}}}{{l{Fb}}}}{{Ddc}{{l{An}}}{{If{{Bf{{Ch{{Eb{Bl}}}}}}}}}}{{Dd{Nf{Jn}}}{{l{Nd}}}}{{Ddc}{{l{Kj}}}{{If{{Bf{{Ch{Gn}}}}}}}}{{Ddc}{{l{B`}}}{{If{{Bf{{f{{Bf{Bd}}}}}}}}}}{{Ddc}{{l{B`}}}{{If{{Bf{{Ch{{f{{Bf{Bd}}}}}}}}}}}}{{Ddc}{{l{B`}}}{{If{{Bf{{Eb{{Bf{Bd}}}}}}}}}}{{Ddc}{{l{Bb}}}{{If{{Bf{{Ch{d}}}}}}}}{{Dd{Nf{Nh}}}{{l{Kd}}}}{{Ddc}{{l{An}}}{{If{{Bf{Ej}}}}}}{{Ddc}{{l{B`}}}{{If{{Bf{{Ch{{Eb{{Bf{Bd}}}}}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bf{{Ch{{f{Bl}}}}}}}}}}{{Ddc}{{l{Fb}}}{{If{{Bf{{Ch{Jd}}}}}}}}{{Ddc}{{l{B`}}}{{If{{Bf{{Gf{Bd}}}}}}}}{{Ddc}{{l{Ef}}}{{If{{Bf{{Ch{Jl}}}}}}}}{{Ddc}{{l{Nj}}}{{If{{Bf{{Ch{Nl}}}}}}}}{{Dd{Nf{Gn}}}{{l{Kj}}}}{{Ddc}{{l{Nn}}}{{If{{Bf{{Ch{O`}}}}}}}}{{Dde}{{l{{Cb{c}}}}}Cd{{If{{Bf{{Ch{c}}}}}}}}{{Ddc}{{l{B`}}}{{If{{Bf{{Ch{{Gf{Bd}}}}}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bf{{Ch{Aj}}}}}}}}{{Ddc}{{l{Ob}}}{{If{{Bf{{Ch{Bd}}}}}}}}{{Ddc}{{l{Nn}}}{{If{{Bf{O`}}}}}}{{Ddc}{{l{An}}}{{If{{Bf{{Ch{Ej}}}}}}}}{{Ddc}{{l{Nd}}}{{If{{Bf{Jn}}}}}}{{Ddc}{{l{Fb}}}{{If{{Bf{Jd}}}}}}{{Ddc}{{l{Nj}}}{{If{{Bf{Nl}}}}}}{{Ddc}{{l{Kd}}}{{If{{Bf{{Ch{Nh}}}}}}}}{{Ddc}{{l{Kd}}}{{If{{Bf{Nh}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bf{Aj}}}}}}{{Ddc}{{l{Ob}}}{{If{{Bf{Bd}}}}}}{{Ddc}{{l{Bb}}}{{If{{Bf{d}}}}}}{{Ddc}{{l{Kj}}}{{If{{Bf{Gn}}}}}}{{Ddc}{{l{L`}}}{{If{{Bf{Od}}}}}}{{Ddc}{{l{Ef}}}{{If{{Bf{Jl}}}}}}{{Ddc}{{l{L`}}}{{If{{Bf{{Ch{Od}}}}}}}}{Dd{{l{{Cb{c}}}}}Cd}{{{f{{l{Ah}}}}G`G`}{{l{Ah}}}}{{{f{{l{{Cb{c}}}}}}G`G`}{{l{{Cb{c}}}}}Cd}{{{f{{l{Cf}}}}G`G`}{{l{Cf}}}}{{{f{{l{c}}}}G`G`}{{l{c}}}Al}{{{f{{l{j}}}}G`G`}{{l{j}}}}{{{f{{l{Bb}}}}G`G`}{{l{Bb}}}}{{{f{{l{An}}}}G`G`}{{l{An}}}}{{{f{{l{B`}}}}G`G`}{{l{B`}}}}{{{f{{l{Fd}}}}G`G`}{{l{Fd}}}}{{Dd{Gf{c}}}{{l{{Cb{c}}}}}Cd}{{Dd{Gf{c}}Ib}{{l{{Cb{c}}}}}Cd}{{DdGf}{{l{c}}}Al}{{{Mj{Of}}{Gf{{Cn{Cl}}}}JdJd}{{l{c}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Lj}{{{l{Bb}}}}{{{f{{l{Bb}}}}}}{{{f{{l{An}}}}{f{Bl}}}{{l{Bb}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{Bf{Bd}}}}}{{l{Bb}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bb}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bb}}}}{{{f{{l{B`}}}}{f{{l{B`}}}}}{{l{Bb}}}}{{{f{{l{c}}}}e}{{l{Bb}}}AlBj}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bb}}}Al}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bb}}}}34{{{f{{l{Cf}}}}{f{{l{Cf}}}}}}92:6738{{{f{{l{c}}}}}G`Dl}`{{{f{{l{Cf}}}}}{{A`{{H`{Gn}}n}}}}{{{f{{l{Ah}}}}}{{A`{{H`{Gn}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Oh{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{{l{An}}}}}{{`{{Oh{}{{Cj{{Ch{{f{Bl}}}}}}}}}}}}{{{f{Df{l{Ah}}}}}{{`{Oj}}}}{{{f{{l{An}}}}}{{`{Oj}}}}{{{f{{l{c}}}}}MdAl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{Eh}}}}AjOl}{{A`{{Ch{Aj}}n}}}}{{{f{{l{Ef}}}}AjOl}{{A`{{Ch{Jl}}n}}}}{{{f{{l{c}}}}AjOl}{{A`{{Ch{Aj}}n}}}Fh}{{{f{{l{Eh}}}}AjOl}{{A`{Mdn}}}}{{{f{{l{c}}}}AjOl}{{A`{Mdn}}}Fh}{{{f{{l{Ef}}}}AjOl}{{A`{Mdn}}}}{{DdG`Aj}{{A`{{l{Bb}}n}}}}{{DdG`AjAj}{{A`{{l{c}}n}}}Al}{{DdG`}{{l{c}}}Al}{{DdG`AjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{Of}}}Dl}{{{f{{l{Kj}}}}}Ab}{{{f{{l{Fb}}}}}Ab}{{{f{{l{Nj}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Nn}}}}}Ab}{{{f{{l{Ob}}}}}Ab}{{{f{{l{N`}}}}}Ab}{{{f{{l{Ef}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Kd}}}}}Ab}{{{f{{l{Eh}}}}}Ab}:0682495137{{{l{c}}e}{}Al{BhBj}}{{{f{{l{c}}}}e}{}Al{BhBj}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDl}{{{f{{l{Fd}}}}}{{l{Fd}}}}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{B`}}}}}{{l{B`}}}}{{{f{{l{{Cb{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Cf}}}}}{{l{Cf}}}}{{{f{{l{c}}}}{f{Dn}}On}{{A`{Abn}}}Al}{{{f{{l{c}}}}G`e}{{A`{{l{c}}n}}}Lj{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Jn}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}G`dd{Ch{Jn}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{An}}}}{f{{Bf{Jd}}}}c}{{A`{Abn}}}{{Hn{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{{{f{{l{Bb}}}}{f{{Bf{Jd}}}}c}{{A`{Abn}}}{{Hn{}{{Cj{{Ch{d}}}}}}}}{{{f{Df{l{c}}}}{f{{Bf{Jd}}}}e}{{A`{Abn}}}A@`{{Hn{}{{Cj{Ch}}}}}}{{{f{{l{An}}}}c{Ch{{f{Bl}}}}}{{A`{{l{An}}n}}}{{Hn{}{{Cj{Jd}}}}}}{{{f{{l{B`}}}}c{Ch{{f{{Bf{Bd}}}}}}}{{A`{{l{B`}}n}}}{{Hn{}{{Cj{Jd}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Hn{}{{Cj{Jd}}}}}}{{{f{{l{Bb}}}}c{Ch{d}}}{{A`{{l{Bb}}n}}}{{Hn{}{{Cj{Jd}}}}}}{{{f{{l{B`}}}}ce}{{A`{{l{B`}}n}}}{{Hn{}{{Cj{Jd}}}}}{{Dn{{Ch{{f{{Bf{Bd}}}}}}}{{Ad{{Ch{{Gf{Bd}}}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Hn{}{{Cj{Jd}}}}}{{Dn{Ch}{{Ad{Ch}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Hn{}{{Cj{Jd}}}}}{{Dn{{Ch{{f{Bl}}}}}{{Ad{{Ch{Ej}}}}}}}}{{{f{{l{Bb}}}}ce}{{A`{{l{Bb}}n}}}{{Hn{}{{Cj{Jd}}}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}{Ch{d}}}{{A`{{l{Bb}}n}}}}{{{f{{l{c}}}}{f{{l{Bb}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{{l{B`}}}}{f{{l{Bb}}}}{Ch{{f{{Bf{Bd}}}}}}}{{A`{{l{B`}}n}}}}{{{f{{l{An}}}}{f{{l{Bb}}}}{Ch{{f{Bl}}}}}{{A`{{l{An}}n}}}}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDl}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{c}}}}Jd}bDl}{{{f{Df{l{c}}}}Ll}bDl}{{{f{{l{c}}}}Gn}{{l{c}}}Al}{{{f{{l{j}}}}Gn}{{l{j}}}}{{{f{{l{Bb}}}}Gn}{{l{Bb}}}}{{{f{{l{An}}}}Gn}{{l{An}}}}{{{f{{l{B`}}}}Gn}{{l{B`}}}}{{{f{{l{Fd}}}}Gn}{{l{Fd}}}}{{{f{{l{Ah}}}}Gn}{{l{Ah}}}}{{{f{{l{Cf}}}}Gn}{{l{Cf}}}}{{{f{{l{{Cb{c}}}}}}Gn}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}GnCh}{{l{c}}}Al}{{{f{{l{{Cb{c}}}}}}Gn{Ch{{Cb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{Cf}}}}Gn{Ch{{f{Ab}}}}}{{l{Cf}}}}{{{f{{l{Ah}}}}Gn{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Fd}}}}Gn{Ch{{f{{Bf{Bd}}}}}}}{{l{Fd}}}}{{{f{{l{B`}}}}Gn{Ch{{f{{Bf{Bd}}}}}}}{{l{B`}}}}{{{f{{l{An}}}}Gn{Ch{{f{Bl}}}}}{{l{An}}}}{{{f{{l{Bb}}}}Gn{Ch{d}}}{{l{Bb}}}}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}GnG`}{{l{c}}}Dl}0{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Fd}}}}d}{{l{Fd}}}}{{{f{{l{Bb}}}}d}{{l{Bb}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{B`}}}}d}{{l{B`}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{c}}}}F`}{{l{c}}}Al}{{{f{{l{Bb}}}}F`}{{l{Bb}}}}{{{f{{l{B`}}}}F`}{{l{B`}}}}{{{f{{l{j}}}}F`}{{l{j}}}}{{{f{{l{An}}}}F`}{{l{An}}}}{{{f{{l{Fd}}}}F`}{{l{Fd}}}}{{{f{{l{c}}}}Gn}{{Hb{{l{c}}{l{c}}}}}Dl}0{{{f{{l{c}}}}Bd}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}Bd}Md}{{{f{{l{c}}}}Bd}MdFh}{{{f{{l{Ef}}}}Bd}Md}{{{f{{l{j}}}}}{{f{{Bf{Of}}}}}}{{{f{{l{c}}}}e}{}Al{BhBj}}{{{l{c}}e}{}Al{BhBj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Bb}}}}}{{Ch{Jd}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{B`}}}}}Md}{{{f{{l{Bb}}}}}Md}{{{f{{l{c}}}}}MdAl}{{{f{{l{c}}}}{Ch{G`}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dl{{If{{Bf{Jd}}}}A@b}}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}{f{{Bf{A@d}}}}Ll}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{Bf{A@d}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{l{c}}}{{Dl{}{{Hd{Dj}}{A@f{Dj}}}}Dl}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dl{}{{Hd{Dj}}{A@f{Dj}}}}Dl}{{If{{Bf{Jd}}}}A@b}}{{{f{{l{An}}}}{f{c}}}{{l{An}}}{{If{{Bf{Jd}}}}A@b}}{{{f{{l{B`}}}}{f{{l{Fb}}}}}{{l{B`}}}}{{{f{{l{B`}}}}{f{c}}}{{l{B`}}}{{If{{Bf{Jd}}}}A@b}}{{{f{{l{j}}}}{f{{l{Fb}}}}}{{l{j}}}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{If{{Bf{Jd}}}}A@b}}{{{f{{l{An}}}}{f{{l{Fb}}}}}{{l{An}}}}`{{{f{{l{c}}}}dA@h}{{Gf{{Gf{A@j}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Lj}{{{f{{l{An}}}}G`}{{A`{Abn}}}}{{{f{Df{l{Cf}}}}El}b}{{{f{Df{l{Ah}}}}El}b}{{{f{{l{c}}}}}{{A`{{AAb{{A@l{f}}{AA`{{A@n{G`}}}}}}n}}}Al}{{{f{{l{Ah}}}}}{{A`{{AAb{AAd{AA`{{A@n{G`}}}}}}n}}}}{fc{}}{{{f{{l{B`}}}}}{{l{An}}}}{{{f{{l{c}}}}}{{Gf{Ch}}}Al}{{{f{{l{c}}}}}{{AAf{Gf{Gf{Ch}}}}}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}01{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Cf}}}}c}{{A`{{l{Cf}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{An}}e}}}Dl{}{{Af{{f{DfEj}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Hn{}{{Cj{{A`{ce}}}}}}}{{Dl{}{{Hl{c}}}}Dl}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAh}0{{{f{{l{{Cb{c}}}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bb}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{B`}}}}}{{A`{{l{B`}}n}}}}{{{l{j}}}AAj}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}G`}{}Dl}{{{f{{l{c}}}}Bd}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}Bd}Md}{{{f{{l{Ef}}}}Bd}Md}{{{f{{l{c}}}}Bd}MdFh}{{{f{{l{Fd}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{N`}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}Cd}{{{f{{l{B`}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{L`}}}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}Cd}{{{f{{l{Fd}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{N`}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{L`}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{B`}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cf}}}}}G`}{{Ddc}{{l{e}}}Cl{{Dl{}{{Hl{c}}}}Dl}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dl{}{{Hl{c}}}}Dl}}{{{f{{l{c}}}}{Gf{{Cn{Cl}}}}}{{l{c}}}Dl}{{{l{c}}Dd}{{l{c}}}Dl}{{{f{{Bf{AAl}}}}e}c{}{{AAn{{f{{l{Fb}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Ib}}}{{l{j}}}}{{{l{j}}{l{Bb}}}{{l{j}}}}{{{f{{l{c}}}}Ll}{{l{c}}}Dl}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}32102332012332012323013223013223{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cf}}}}{f{{l{c}}}}e}{{l{Cf}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{j}}}}{f{{l{Bb}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}{{{f{{l{c}}}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dl{}{{A@f{Dj}}}}}}````{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}e{}{}{}}{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}g{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}g{}{}{}}{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}g{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABh}}{f{Cl}}}b}{{{f{DfABh}}}b}{{{f{DfABj}}}b}{{{f{DfABl}}c}b{{D`{}{{Cj{{Ch{d}}}}}}J`}}{{{f{Df{ABn{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}J`}}{{{f{Df{ABn{c}}}}e}bAl{{D`{}{{Cj{}}}}J`}}{{{f{DfAC`}}}b}{{{f{DfACb}}}b}65{{{f{DfACd}}}b}{{{f{DfACf}}}b}{{{f{DfABl}}}b}{{{f{DfACh}}}b}{{{f{Df{ABn{c}}}}}bAl}{{{f{Df{ACj{c}}}}}b{AClA@b}}{{{f{DfACn}}}b}{{{f{DfAD`}}}b}{{{f{Df{ADb{c}}}}}bAl}{{{f{DfABh}}{Ch{{f{Cl}}}}}b}{{{f{DfABh}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfAC`}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ABn{c}}}}{Ch{{f{Bf}}}}}bAl}{{{f{Df{ACj{c}}}}{Ch{e}}}b{AClA@b}{{If{c}}}}{{{f{DfACb}}{Ch{c}}}b{}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABh}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ABn{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ABn{c}}}}{f{Bf}}}bAl}{{{f{DfACd}}c}b{{D`{}{{Cj{{Ch{{f{Bl}}}}}}}}J`}}{{{f{DfACf}}c}b{{D`{}{{Cj{{Ch{{f{{Bf{Bd}}}}}}}}}}J`}}{{{f{DfACb}}c}b{}}{{{f{Df{ACj{c}}}}e}b{AClA@b}{{If{c}}}}{{{f{DfACn}}d}b}{{{f{Df{ADb{c}}}}}bAl}{{{f{DfACd}}c}b{{D`{}{{Cj{{f{Bl}}}}}}}}{{{f{DfACf}}c}b{{D`{}{{Cj{{f{{Bf{Bd}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{ACj{c}}}}}{{ACj{c}}}{AClA@b}}{{{f{ACn}}}ACn}{{{f{AD`}}}AD`}{{{f{{ADb{c}}}}}{{ADb{c}}}{ADdAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABh}{{}ABj}{G`{{f{c}}}{}}0000000000{G`{{f{Dfc}}}{}}0000000000{G`b}0000000000{{{f{ACd}}}d}{{{f{ACf}}}d}{{{f{ABl}}}d}{{{f{{ABn{c}}}}}dAl}{{{f{AC`}}}d}{{{f{ACd}}}{{f{Of}}}}{{{f{ACf}}}{{f{Of}}}}{{{f{ABl}}}{{f{Of}}}}{{{f{{ABn{c}}}}}{{f{Of}}}Al}{{{f{AC`}}}{{f{Of}}}}{ACb{{l{c}}}Dl}{{{f{DfABh}}}{{l{Ah}}}}{{{f{DfABj}}}{{l{Ah}}}}{{{f{DfACh}}}{{l{Ah}}}}{{{f{DfAC`}}}{{l{Ah}}}}{{{ACj{Bl}}}{{l{An}}}}{{{ACj{{Bf{Bd}}}}}{{l{B`}}}}{ACn{{l{Bb}}}}{AD`ADf}{{{ADb{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADh{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADh{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bf{c}}}}}ADh{}}{{Dd{f{{Bf{{Ch{c}}}}}}}ADh{}}{{{f{El}}G`G`Dd}{{A`{{Cn{AC`}}n}}}}{{}G`}0000000000{{{f{DfACd}}}{{Cn{Cl}}}}{{{f{DfACf}}}{{Cn{Cl}}}}{{{f{DfABl}}}{{Cn{Cl}}}}{{{f{Df{ABn{c}}}}}{{Cn{Cl}}}Al}{{{f{DfAC`}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdG`{Ch{El}}}ABh}{{DdG`{Ch{El}}}ABj}{{DdG`G`}ACd}{{DdG`G`}ACf}{{DdG`G`}ABl}{{DdG`}ACh}{{DdG`G`El}{{ABn{c}}}Al}{{DdG`}{{ACj{c}}}{AClA@b}}{{DdG`}ACn}{{DdG`}AD`}{{DdG`}{{ADb{c}}}Al}{{DdG`G`ElEl}{{ABn{c}}}Al}{{{f{DfACb}}}b}{{{f{DfACn}}}b}{{{f{DfAD`}}}b}{{{f{Df{ADb{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAh}0000000000{{}c{}}0000000000````````{{{f{DfAC`}}}b}{{{f{DfAC`}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}`{{{f{AC`}}}d}{{{f{AC`}}}{{f{Of}}}}{{{f{DfAC`}}}{{l{Ah}}}}{{{f{El}}G`G`Dd}{{A`{{Cn{AC`}}n}}}}{{{f{DfAC`}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Fj}}}Fj}{{f{f{Dfc}}}b{}}{fb}{{}Fj}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{Fj}}{f{Fj}}}d}{{f{f{c}}}d{}}00{{{f{Fj}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{{{f{Fj}}{f{Dfc}}}bADj}{{}G`}{{}c{}}{{{f{Fj}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}5``{{ADlDd}{{l{c}}}Dl}{{ADn{f{{l{c}}}}}{{l{c}}}Dl}10{{ADnDdEl}{{l{c}}}Dl}0{{ADlDd}{{A`{{l{c}}e}}}Dl{}}{{ADn{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{ADnDdEl}{{A`{{l{c}}e}}}Dl{}}0`{AE`AE`}``{{AEbDdEl}e{}{{AEd{c}}}}{{eDdEl}AEd{}{{Ih{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{G`{{f{c}}}{}}00{G`{{f{Dfc}}}{}}00{G`b}00{cc{}}00{{}G`}00{{}c{}}00000{{{f{AEf}}}AEh}{{{f{AEj}}El}AEl}{{{f{DfAEh}}}Ch}{{{f{DfAEl}}}Ch}{{{f{Df{AEn{c}}}}}ChD`}21{{{f{Df{AEn{c}}}}}ChGl}`{{{f{AEh}}}{{Hb{G`{Ch{G`}}}}}}{{{f{AEl}}}{{Hb{G`{Ch{G`}}}}}}{{{f{{AEn{c}}}}}{{Hb{G`{Ch{G`}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAh}00<<<`````````````````````````{{fh}b}0000{{}Gj}{{}Jf}{{GjGj}Gj}{{JfJf}Jf}{{{f{DfGj}}Gj}b}{{{f{DfJf}}Jf}b}3210{{{f{Gj}}}Jd}0{{{f{Jf}}}Bd}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mh{c}}}}}{{Mh{c}}}Dl}{{{f{{K`{c}}}}}{{K`{c}}}Dl}{{{f{AF`}}}AF`}{{{f{Gj}}}Gj}{{{f{Jf}}}Jf}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFb}}}b}{GjGj}{JfJf}{{{f{Gj}}Gj}d}{{{f{Jf}}Jf}d}{{}{{Mh{c}}}Dl}{{}{{K`{c}}}Dl}{{}Gj}{{}Jf}{{{f{{Mf{c}}}}}fDl}{G`{{f{c}}}{}}000000{G`{{f{Dfc}}}{}}000000{{GjGj}Gj}{{JfJf}Jf}{{}d}{{{f{Ml}}}{{Ch{Jd}}}}{{{f{{K`{c}}}}}{{Ch{Jd}}}Dl}{{{K`{c}}Jd}{{K`{c}}}Dl}{{{K`{c}}{Ch{Jd}}}{{K`{c}}}Dl}{G`b}000000<;5{{{f{Gj}}{f{Gj}}}d}{{{f{Jf}}{f{Jf}}}d}7{{{f{DfGj}}c}b{{Hn{}{{Cj{Gj}}}}}}{{{f{DfJf}}c}b{{Hn{}{{Cj{Jf}}}}}}{{{K`{c}}d}{{K`{c}}}Dl}{{{K`{c}}{Ch{d}}}{{K`{c}}}Dl}{{{f{{K`{c}}}}Gj}{{K`{c}}}Dl}{{{f{{K`{c}}}}Gj}{{K`{e}}}DlDl}{{{K`{c}}Jf}{{K`{c}}}Dl}{{{K`{c}}{Ch{Jf}}}{{K`{c}}}Dl}{{{f{{K`{c}}}}{f{DfHh}}}{{A`{bHj}}}Dl}{{{f{AF`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Gj}}{f{DfHh}}}{{A`{bHj}}}}0000{{{f{Jf}}{f{DfHh}}}{{A`{bHj}}}}0000{cc{}}000000{Jd{{Ch{Gj}}}}{Bd{{Ch{Jf}}}}{JdGj}0{BdJf}010{cGj{{Hn{}{{Cj{Gj}}}}}}{cJf{{Hn{}{{Cj{Jf}}}}}}{{{f{Bl}}}{{Ch{Gj}}}}{{{f{Bl}}}{{Ch{Jf}}}}{{{f{{K`{c}}}}}{{Ch{Jd}}}Dl}{{{f{{K`{c}}}}}dDl}{{{f{Jf}}}d}{{{f{Ml}}}Jf}{{{f{{K`{c}}}}}JfDl}0{{{f{{K`{c}}}}}{{Ch{f}}}Dl}0{{{f{Df{Mh{c}}}}}{{f{Df{K`{c}}}}}Dl}{{{f{Jf}}}Ll}{{}G`}000000{{{f{DfGj}}Gj}b}{{{f{DfJf}}Jf}b}{{GjGj}Gj}{{JfJf}Jf}{{{f{Gj}}Gj}d}{{{f{Jf}}Jf}d}{{}c{}}000000{Gj}{Jf}{{{f{Gj}}}d}{{{f{Jf}}}d}{{{f{{K`{c}}}}}dDl}21{{{f{{K`{c}}}}}LlDl}111{{{f{Gj}}}{{AFd{Gj}}}}{{{f{Jf}}}{{AFd{Jf}}}}{{{f{Gj}}}{{AFf{Gj}}}}{{{f{Jf}}}{{AFf{Jf}}}}{{}d}{{}{{f{{AFj{AFh}}}}}}{{{f{Ml}}}{{Ch{Md}}}}{{{f{{K`{c}}}}}{{Ch{Md}}}Dl}{{{K`{c}}}{{K`{c}}}Dl}{{{K`{c}}Ch}{{K`{c}}}Dl}{{{f{{K`{c}}}}{K`{c}}}{{AFl{c}}}Dl}4321{{{K`{c}}}{{Mh{c}}}Dl}{GjGj}{JfJf}{{{f{{Mh{c}}}}}{{Mn{{K`{c}}}}}Dl}{{{f{DfGj}}Gj}b}{{{f{DfJf}}Jf}b}{{{f{DfGj}}Gjd}b}{{{f{DfJf}}Jfd}b}{{{f{Df{K`{c}}}}{Ch{Jd}}}bDl}{{{f{Df{K`{c}}}}d}bDl}{{{f{DfJf}}d}b}{{{f{Df{K`{c}}}}Jf}bDl}{{{f{Df{K`{c}}}}Ch}bDl}033{{{f{Df{K`{c}}}}Ll}bDl}{{{f{DfJf}}Ll}b}{{{K`{c}}Ll}{{K`{c}}}Dl}{{{K`{c}}{Ch{Ll}}}{{K`{c}}}Dl}{{GjGj}Gj}{{JfJf}Jf}>=10{{{Mh{c}}}{{K`{c}}}Dl}{fc{}}0000{{{f{DfGj}}Gj}b}{{{f{DfJf}}Jf}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mh{c}}}}}{{Ch{{Mn{{K`{c}}}}}}}Dl}{{{f{{Mh{c}}}}}{{Ch{{Kb{{K`{c}}}}}}}Dl}{fAAh}000000:9{{{f{{Mh{c}}}}}{{f{{AFn{Ml}}}}}Dl}{{}c{}}000000{AFbAFb}{{{f{{Mh{c}}}}}{{Kb{{K`{c}}}}}Dl}````{{fh}b}{{{f{{AG`{c}}}}G`}{{Hb{{AG`{c}}{AG`{c}}}}}Cd}{e{{AG`{c}}}Cd{{Hn{}{{Cj{{f{c}}}}}}}}{e{{AG`{c}}}Cd{{Hn{}{{Cj{{Ch{{f{c}}}}}}}}}}{{AGbe}g{}{{Hn{}{{Cj{c}}}}}{}}0{{{f{Jh}}}{{f{AGd}}}}{{{f{{AG`{c}}}}}{{f{AGd}}}Cd}{{{f{Df{AG`{c}}}}}{{f{DfAGd}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AG`{c}}}}G`}dCd}{{{f{{AG`{c}}}}}{{AG`{c}}}{ADdCd}}{{f{f{Dfc}}}b{}}{fb}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{{AG`{c}}}}}{{f{AGb}}}Cd}{{{f{{f{Jh}}}}{f{{f{Jh}}}}}d}{{{f{Jh}}{f{Jh}}}d}{{{f{{AG`{c}}}}{f{DfHh}}}{{A`{bHj}}}{AGfCd}}{{{Gf{c}}}{{AG`{c}}}Cd}{cc{}}{{G`AGb}{{AG`{c}}}Cd}{{{f{{AG`{c}}}}G`}{{Ch{{f{c}}}}}Cd}{{}AGb}{{{f{Ib}}{f{{AG`{c}}}}{f{{AG`{c}}}}}{{AG`{c}}}Cd}{{AGb{f{Ib}}}{{AG`{c}}}Cd}{{{f{Ib}}{f{{AG`{c}}}}}{{AG`{c}}}Cd}0{{}G`}{{}c{}}{{{f{{AG`{c}}}}}{}Cd}{{{f{{AG`{c}}}}G`}dCd}{{fG`}d}1{{{f{{AG`{c}}}}}{{AGj{AGh}}}Cd}{{{f{{AG`{c}}}}}{{AGj{{f{c}}{Fn{c}}AGh}}}Cd}{{{f{{AG`{c}}}}}G`Cd}0`{db}{{{f{Df{AG`{c}}}}{Ch{Ib}}}bCd}{{{f{Df{AG`{c}}}}G`G`}bCd}{{fG`G`}c{}}01{{{f{{AG`{c}}}}G`}{{Hb{{Cn{Cl}}{Cn{Cl}}}}}Cd}0{{{f{Jh}}}{{Cn{Jh}}}}{{{f{{AG`{c}}}}}{{Cn{Cl}}}Cd}{fc{}}{g{{A`{{AG`{c}}e}}}Cd{}{{Hn{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{g{{A`{{AG`{c}}e}}}Cd{}{{Hn{}{{Cj{{A`{{f{c}}e}}}}}}}}{{AGbg}{{A`{ie}}}{}{}{{Hn{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}{{{f{Jh}}}{{f{Bl}}}}{{}{{f{Bl}}}}{{{f{{AG`{c}}}}}{{Ch{{f{Ib}}}}}Cd}{{{f{{AG`{c}}}}G`}{{f{c}}}Cd}0{{{f{{AG`{c}}}}G`}{}Cd}{{{f{{AG`{c}}}}}{{Fn{c}}}Cd}{{{f{{AG`{c}}}}}{}Cd}{{}c{}}{{{AG`{c}}{Ch{Ib}}}{{AG`{c}}}Cd}{{{f{{AG`{c}}}}{Ch{Ib}}}{{Cn{Cl}}}Cd}1`{{{f{Df{AGl{c}}}}}bCd}0{{{f{Df{AGl{c}}}}{Ch{c}}}bCd}{{{f{Df{AGl{c}}}}{f{AGd}}}bCd}{{{f{Df{AGl{c}}}}c}bCd}{{{f{Df{AGl{c}}}}{f{AGd}}}{{A`{bn}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AGl{c}}}Cd}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{AGl{c}}}{{l{{Cb{c}}}}}Cd}{cc{}}{{}G`}{{}c{}}{{DdG`}{{AGl{c}}}Cd}{{{f{Df{AGl{c}}}}}AbCd}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}5````{{{f{DfAGn}}}b}{{{f{DfAGn}}{Ch{{f{AGd}}}}}b}{{{f{DfAGn}}{f{AGd}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{AH`}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{{DdG`}{{Cn{AGn}}}}{{}{{Mj{Dn}}}}{{}AGb}{{}G`}{{}c{}}{{}d}`{{{Cn{Dn}}{Mj{Dn}}AGb}b}{{{f{DfAGn}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}6``````````````````````````````````````````````{{fh}b}00{{{f{AHb}}}Aj}{{{f{{AHf{}{{AHd{c}}}}}}g}{{AHf{}{{AHd{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{AHh}}{f{Dn}}}AHh}{{{f{AHh}}{f{Dn}}}{{l{c}}}Dl}{{{f{{AHf{}{{AHd{c}}}}}}i{f{Df{Bf{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHf{}{{AHd{c}}}}}}g}{{AHf{}{{AHd{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{{f{AHj}}F`}{{l{Fb}}}}{{{f{AHj}}{f{{Bf{Ab}}}}{f{Ff}}}{{A`{{l{Fb}}n}}}}{{{f{AHl}}}{{A`{{l{Fb}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AHn}}{f{El}}}{{A`{Abn}}}}0{{{f{AHn}}{f{El}}Fj}{{A`{Abn}}}}{{{f{F`}}}F`}{{{f{Ff}}}Ff}{{{f{AI`}}}AI`}{{f{f{Dfc}}}b{}}00{fb}00{{}F`}{{}Ff}{G`{{f{c}}}{}}00{G`{{f{Dfc}}}{}}00``{G`b}00{{{f{F`}}{f{F`}}}d}{{{f{Ff}}{f{Ff}}}d}{{{f{AI`}}{f{AI`}}}d}{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AId}}}{{A`{Abn}}}}{{{f{AId}}}{{A`{{Hb{Ab{H`{Gn}}}}n}}}}`{{{f{AIf}}c}{{A`{AIfn}}}{}}{{{f{AIh}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}Dl}`{{{f{F`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Ff}}{f{DfHh}}}{{A`{bHj}}}}{{{f{AI`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Ff}}}F`}{cc{}}{{{f{F`}}}Ff}11`{{DdcG`}AIj{}}{{DdG`}AIl}`{{{f{AIn}}G`}{{A`{Jbn}}}}{{{f{AIn}}G`}Jb}??{{{f{F`}}{f{Dfc}}}bADj}{{{f{Ff}}{f{Dfc}}}bADj}{{{f{AI`}}{f{Dfc}}}bADj}{{}G`}00{{}c{}}00{{{f{AJ`}}}{{A`{{l{Bb}}n}}}}{{{f{AJb}}}{{A`{{l{Bb}}n}}}}{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AHb}}}{{Ch{c}}}{}}{{{f{AHb}}}{{Ch{Aj}}}}{{{f{AJd}}}{{Ch{c}}}{}}2{{{f{AHb}}}{{Ch{{Hb{cc}}}}}{}}``{{{f{AHl}}}{{A`{G`n}}}}{{}F`}{{}Ff}{{{f{AJf}}G`G`}{{l{c}}}Dl}88``{{{f{AId}}}{{A`{{H`{Gn}}n}}}}{{{f{AJd}}AjOl}{{A`{{Ch{c}}n}}}{}}{{{f{AJh}}}Ab}0{{{f{AJj}}}AJj}{{{f{AJl}}{f{Dn}}On}{{A`{Abn}}}}{{{f{AJn}}c{Ch{e}}}{{A`{AJnn}}}{{Hn{}{{Cj{Jd}}}}}{}}{{{f{AJn}}ci}{{A`{AJnn}}}{{Hn{}{{Cj{Jd}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{AJn}}{f{{l{Bb}}}}{Ch{c}}}{{A`{AJnn}}}{}}{{{f{AK`}}Gn}{{l{c}}}Dl}{{{f{AKb}}Gnc}{{l{e}}}{}Dl}{{{f{AKd}}G`G`}AKd}0`{{{f{AHj}}d}{{l{c}}}Dl}{{{f{AHj}}F`}{{l{c}}}Dl}{{{f{AKf}}Bd}{{Ch{Aj}}}}{{{f{AHb}}}{{Ch{c}}}{}}{{{f{AKh}}{f{c}}}{{A`{AKhn}}}A@b}{{{f{AKj}}{f{c}}}AKjA@b}{{{f{AKl}}}{{Gf{{f{{Bf{Bd}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAh}00{{{f{AHl}}}{{A`{AHln}}}}9{{}c{}}00{{F`d}F`}{{Ffd}Ff}1010{{Ffc}Ff{{Hn{}{{Cj{d}}}}}}210{F`F`}{FfFf}`{{{f{AKn}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{AL`{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{An}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALb}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hl{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{Hl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALd{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALf{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{Hl{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALf{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{Hl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALf{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALb}ALf{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{Hl{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALh{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALhDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{Hl{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{Hl{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALb}{{Af{f}{{Ad{e}}}}}{{Dl{}{{Hl{e}}}}}}0{{{f{{l{c}}}}}G`Al}0{{LlLl}Ll}{{{f{{l{Fb}}}}Jd}{{A`{bn}}}}{{{f{{ALj{Jd}}}}Jd}{{A`{bn}}}}````{{fh}b}{{{f{{l{c}}}}eALld}{{Gf{Jd}}}Dl{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{ALl}}}ALl}{{f{f{Dfc}}}b{}}{fb}{{}ALl}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{ALl}}{f{ALl}}}d}{{f{f{c}}}d{}}00{{{f{ALl}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{{{f{ALl}}{f{Dfc}}}bADj}{{}G`}{{}c{}}{{{f{{Bf{f}}}}cJde}{{Gf{Jd}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fG`f}{{Ad{d}}}}}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}5`{{G`{f{Df{Gf{d}}}}}b}```{{{f{AKd}}G`G`}AKd}0{{G`{f{{Bf{Ab}}}}{f{DfFf}}}{{A`{{ALn{{l{Fb}}}}n}}}}{{{f{{Bf{Ab}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{AM`n}}}}{{{f{{Bf{Ab}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{{Jj{Gn}}n}}}}{{Dd{f{{Bf{Ab}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bf{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bf{Ab}}}}}{{A`{AM`n}}}}{{{f{{Bf{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88`{AMbGn}00{{{f{Bl}}}{{A`{Ddn}}}}{{{f{Bl}}}{{A`{AMdn}}}}{{{f{AMf}}}Gn}{{{f{Bl}}}{{A`{bn}}}}444````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000{{{f{AMh}}}d}{{{f{Jb}}}{{`{{D`{}{{Cj{Jb}}}}}}}}{{{f{Jb}}{f{Df{Gf{Jb}}}}}b}{{AMhd}AMh}{{{f{{Kh{LbL`}}}}{f{{Kh{LbL`}}}}}}{{{f{Jb}}{f{Jb}}}Jb}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{B`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfAMj}}{Ch{{f{Bl}}}}}b}{{{f{DfAMh}}{f{AMh}}}{{A`{bn}}}}{{{f{DfAMj}}}b}{{{f{DfAMj}}{f{Bl}}}b}{{{f{AMh}}F`}{{l{Fb}}}}{eAMl{}{{Hn{}{{Cj{c}}}}}}0{{AGbe}AMn{}{{Hn{}{{Cj{c}}}}}}0{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{Jb}}}Jb}{{{f{{Kh{KfKd}}}}}{{`{J`}}}}{{{f{{Kh{KnKj}}}}}{{`{J`}}}}{{{f{Dd}}}{{f{{Bf{Bd}}}}}}{{{f{Dd}}}{{f{AN`}}}}{{{f{Dd}}}{{f{ANb}}}}{{{f{Dd}}}{{f{Bl}}}}{{{f{El}}}{{f{El}}}}{{{f{Of}}}{{f{El}}}}{{{f{ANd}}}{{f{El}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Ch{{f{{Bf{c}}}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}4{{{f{{Kh{LhKj}}}}}{{`{J`}}}}{f{{f{c}}}{}}60000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000000000000000000000000000000000000{El{{Cn{El}}}}{{{AO`{Bl}}}AOb}{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{{f{AOf}}{f{El}}}{{A`{Abn}}}}{{{f{Jb}}{f{El}}}Jb}{{{f{El}}El}El}{{{f{{Kh{KnKj}}}}Kl}{{Kh{KnKj}}}}{{{f{{Kh{LdKj}}}}Kl}{{Kh{LdKj}}}}{{{f{AOf}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{Kh{LhKj}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{Kh{LbL`}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{Kh{KnKj}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{Kh{LdKj}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{{Kh{KfKd}}}}{f{El}}Fj}{{A`{Abn}}}}{{{f{AMh}}{f{El}}Fj}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Ef}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{Kh{ce}}}}}{{Kh{ce}}}DlDl}{{{f{AOh}}}AOh}{{{f{AOb}}}AOb}{{{f{AMh}}}AMh}{{{f{AOj}}}AOj}{{{f{Jb}}}Jb}{{{f{AOl}}}AOl}{{{f{El}}}El}{{{f{AOn}}}AOn}{{{f{Of}}}Of}{{{f{Kl}}}Kl}{{{f{Ob}}}Ob}{{{f{Nj}}}Nj}{{{f{Fb}}}Fb}{{{f{Nd}}}Nd}{{{f{N`}}}N`}{{{f{Nn}}}Nn}{{{f{Kd}}}Kd}{{{f{Kj}}}Kj}{{{f{Ef}}}Ef}{{{f{Eh}}}Eh}{{{f{Kf}}}Kf}{{{f{Lh}}}Lh}{{{f{An}}}An}{{{f{B`}}}B`}{{{f{Fd}}}Fd}{{{f{Bb}}}Bb}{{{f{Lb}}}Lb}{{{f{Kn}}}Kn}{{{f{Ld}}}Ld}{{{f{B@`}}}B@`}{{{f{AGb}}}AGb}{{{f{B@b}}}B@b}{{f{f{Dfc}}}b{}}000000000000000000000000000000000{fb}000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}B@d}{{{f{DfOf}}El}b}{B@fe{}{{AMl{c}}ALb}}0{{B@fAGb}e{}{{AMn{c}}ALb}}0{{f{f{c}}}B@d{}}{{{f{El}}}d}00{{{AO`{Bl}}}El}{{{f{{Kh{LdKj}}}}}{{l{Kj}}}}{{}Dd}{{}B@h}{{}AOh}{{}AOb}{{}Jb}{{}AOl}{{}El}{{}AGb}{{{f{Dd}}}f}{G`{{f{c}}}{}}00{{{f{{Kh{ce}}}}}fDlDl}11111111111111111111111111111111111111111{G`{{f{Dfc}}}{}}000{{{f{Df{Kh{ce}}}}}{{f{Df}}}DlDl}1111111111111111111111111111111111111111{{{f{{Kh{LbL`}}}}{f{{Kh{LbL`}}}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMjc}AMh{{Hn{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{G`b}0000000000000000000000000000000000000000000{{{f{AOf}}}{{f{El}}}}{{{f{{Kh{KfKd}}}}}{{f{El}}}}{{{f{{Kh{LhKj}}}}}{{f{El}}}}{{{f{{Kh{LbL`}}}}}{{f{El}}}}{{{f{{Kh{KnKj}}}}}{{f{El}}}}{{{f{{Kh{LdKj}}}}}{{f{El}}}}{{{f{AMh}}}{{f{El}}}}{{{f{Jb}}}El}{{{f{Of}}}{{f{El}}}}`{fc{{B@l{B@j}}}}0{{{f{Dd}}{f{c}}}d{{If{Bl}}A@b}}{{{f{AOh}}{f{AOh}}}d}{{{f{Jb}}{f{Jb}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{El}}{f{El}}}d}{{{f{El}}{f{AGb}}}d}{{{f{AOn}}{f{AOn}}}d}{{{f{Of}}{f{Of}}}d}{{{f{Kl}}{f{Kl}}}d}{{{f{AGb}}{f{AGb}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{Jb}}{f{Jb}}d}d}{{{f{AMh}}{f{AMh}}}}{{{f{AMh}}{f{Bl}}}}{{{f{AMh}}{f{{l{An}}}}}}210{{f{f{c}}}d{}}00000000000000000000000000{{{f{{Kh{ce}}}}}OfDlDl}{{{f{AOb}}{f{Bl}}}{{Ch{Jd}}}}{{AOd{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{AMjAMh}{B@h{{Mj{AOb}}}}{{{f{Dd}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{AOh}}{f{DfHh}}}{{A`{bHj}}}}{{{f{AOb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{AOj}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Jb}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{AOl}}{f{DfHh}}}{{A`{bHj}}}}{{{f{El}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{AOn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Of}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Kl}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{AGb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{B@b}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{GhDd}{{{f{Ej}}}Dd}{EjDd}{{{f{Bl}}}Dd}44{{{l{Kj}}}{{Kh{LhKj}}}}{{{l{Kd}}}{{Kh{KfKd}}}}6666666666666{{{Ch{c}}}Jb{{B@n{Jb}}}}{cJbBA`}{{{f{{Bf{Bd}}}}}Jb}{{{f{Bl}}}Jb}{dJb};;;{{{f{AGb}}}El}{JbEl}{{{f{Jb}}}El}>{{{f{Jb}}}Of}{{{f{BAb}}}Of}{cc{}}0{{{f{B@b}}}Kl}111111111111111111111{BAdAGb}{BAfAGb}3{{{f{AGb}}d}El}{{{l{Fb}}{Mj{AOb}}dAOh}AMh}{{DdcKl}{{Kh{LdKj}}}{{Hn{}{{Cj{BAh}}}}}}{{DdcKl}{{Kh{LdKj}}}{{Hn{}{{Cj{{Ch{BAh}}}}}}}}{{{l{Fb}}AOh}AMh}{cDd{{Hn{}{{Cj{B@j}}}}}}{cDd{{Hn{}{{Cj{{Eb{Bl}}}}}}}}{cDd{{Hn{}{{Cj{{Cn{Bl}}}}}}}}{cDd{{Hn{}{{Cj{Ej}}}}}}{cDd{{Hn{}{{Cj{{f{Bl}}}}}}}}{cDd{{Hn{}{{Cj{{f{B@j}}}}}}}}{cDd{{Hn{}{{Cj{{f{Dd}}}}}}}}{cDd{{Hn{}{{Cj{Dd}}}}}}{{Ddc}{{Kh{KfKd}}}{{Hn{}{{Cj{BAj}}}}}}{{Ddc}{{Kh{KfKd}}}{{Hn{}{{Cj{{Ch{BAj}}}}}}}}{{DdcKl}{{Kh{KnKj}}}{{Hn{}{{Cj{AMb}}}}}}{{DdcKl}{{Kh{KnKj}}}{{Hn{}{{Cj{{Ch{AMb}}}}}}}}{{Ddc}{{Kh{LhKj}}}{{Hn{}{{Cj{AMf}}}}}}{{Ddc}{{Kh{LhKj}}}{{Hn{}{{Cj{{Ch{AMf}}}}}}}}{{{f{Bl}}}Dd}0{EjDd}{{{f{{l{An}}}}{f{{AO`{Bl}}}}AOh}{{A`{AMhn}}}}{{{Gf{c}}AGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{Gf{c}}AGb}{{ALb{}{{ANf{e}}{ANh{c}}{ANj{g}}}}}{ANl{ANn{e}}}ADd{{Gl{}{{Cj{e}}}}J`IjIl}}{{G`cAGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{G`AGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{DddG`AOh}AMh}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}G`}{{Ch{c}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{AOb}}Jd}{{f{Bl}}}}{{{f{{Kh{LhKj}}}}G`}{{A`{Jbn}}}}{{{f{{Kh{KfKd}}}}G`}{{A`{Jbn}}}}{{{f{{Kh{LbL`}}}}G`}{{A`{Jbn}}}}{{{f{{Kh{LdKj}}}}G`}{{A`{Jbn}}}}{{{f{{Kh{KnKj}}}}G`}{{A`{Jbn}}}}{{{f{AOf}}G`}{{A`{Jbn}}}}{{{f{AMh}}G`}{{A`{Jbn}}}}{{{f{{Kh{KfKd}}}}G`}Jb}{{{f{{Kh{LbL`}}}}G`}Jb}{{{f{{Kh{LhKj}}}}G`}Jb}{{{f{{Kh{KnKj}}}}G`}Jb}{{{f{{Kh{LdKj}}}}G`}Jb}{{{f{AOf}}G`}Jb}{{{f{AMh}}G`}Jb}{{{f{AOb}}}{{f{{AO`{Bl}}}}}}{{}El}0000000000000000000000000{{{f{AOb}}Jd}{{Ch{{f{Bl}}}}}}{{{f{AMh}}}{{f{{Mj{AOb}}}}}}{{{f{El}}}{{Ch{{Gf{G`}}}}}}{{{f{Jb}}}{{Ch{{f{Bl}}}}}}{{{f{BAl}}G`}Jb}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}G`}{{Ch{c}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{AMh}}{f{{l{An}}}}}}{{{f{AMh}}{f{AMh}}}}{{{f{AMh}}{f{Bl}}}}201{{{f{Dd}}{f{Dfc}}}bADj}{{{f{Jb}}{f{Dfc}}}bADj}{{{f{AOl}}{f{Dfc}}}bADj}{{{f{El}}{f{Dfc}}}bADj}{{{f{Of}}{f{Dfc}}}bADj}{{{f{Kl}}{f{Dfc}}}bADj}{{{f{AGb}}{f{Dfc}}}bADj}{{{f{B@b}}{f{Dfc}}}bADj}{{{f{Jb}}{f{Dfc}}d}bADj}{{{f{{Kh{LhKj}}}}}{{l{N`}}}}{{{f{{Kh{LdKj}}}}}{{l{Kj}}}}{ElEl}{{}G`}0000000000000000000000000000000000000000000{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{AGb}}}{{Ch{{f{AGb}}}}}}{{}c{}}00000000000000000000000000000000000000000000{{BAnEl}{{A`{Mdn}}}}{{{Kh{LbL`}}}Ab}{{{Kh{LhKj}}}Ab}{{{Kh{KnKj}}}Ab}{{{Kh{KfKd}}}Ab}{{{Kh{LdKj}}}Ab}{AMhAb}{Jb{{A`{Jbn}}}}{DdEj}{{{f{El}}}d}00{{{f{Jb}}}d}111{{{f{AMh}}}d}0212{{{f{AOb}}}d}23330323{{{f{AGb}}}d}34343444434444340{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{AGj{cgAGh}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{AMh}}}BB`}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Ch{c}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{El}}}{{f{El}}}}{{{f{AOb}}}G`}{{{f{AMh}}}G`}{DdBBb}{{{f{AMh}}{f{{l{An}}}}}}{{{f{AMh}}{f{AMh}}}}{{{f{AMh}}{f{Bl}}}}210{{{f{AMh}}{f{AMh}}}{{A`{{Hb{AMhAMh}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hb{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{dn}}}}{{{f{AOl}}}{{Ch{El}}}}{{{f{AMh}}}Md}{{{f{El}}{f{El}}}{{A`{Eln}}}}{{{f{DfB@h}}{f{{Mj{AOb}}}}}{{A`{bn}}}}{{{f{{Kh{LdKj}}}}}{{l{Kj}}}}03{{{f{{Kh{LhKj}}}}}{{l{N`}}}}1{{{f{{Kh{LbL`}}}}{f{{Kh{LbL`}}}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMh}}}{{A`{G`n}}}}{{{f{AMh}}}{{f{Dd}}}}{{{f{Of}}}{{f{Dd}}}}`{{{f{{Kh{LhKj}}}}}{{l{Kd}}}}8{{}c{}}0{{DdG`AOh}AMj}{{Ddc}{{Kh{LdKj}}}{{If{{Bf{{Ch{BAh}}}}}}}}{{Ddc}{{Kh{KfKd}}}{{If{{Bf{{Ch{BAj}}}}}}}}{{Ddc}{{Kh{KnKj}}}{{If{{Bf{AMb}}}}}}{{Ddc}{{Kh{LhKj}}}{{If{{Bf{{Ch{AMf}}}}}}}}{{Ddc}{{Kh{LhKj}}}{{If{{Bf{AMf}}}}}}{{Ddc}{{Kh{KnKj}}}{{If{{Bf{{Ch{AMb}}}}}}}}{{Ddc}{{Kh{LdKj}}}{{If{{Bf{BAh}}}}}}{{Ddc}{{Kh{KfKd}}}{{If{{Bf{BAj}}}}}}{{{Mj{AOb}}}B@h}{{DdEl}Of}{{{l{c}}}{{Kh{ec}}}DlDl}{{}AOn}{{{f{DfBB`}}}Ch}{{{f{AMh}}{f{Bl}}}}{{{f{AMh}}{f{{l{An}}}}}}{{{f{AMh}}{f{AMh}}}}021{{{f{AMh}}}G`}5{{Dd{f{{Bf{{f{Bl}}}}}}{f{Bl}}}{{Kh{LhKj}}}}{{Dd{f{{Bf{{f{Bl}}}}}}{f{Bl}}}{{Kh{KfKd}}}}{{{f{Dd}}{f{Dd}}}{{Ch{B@d}}}}{{{f{Jb}}{f{Jb}}}{{Ch{B@d}}}}{{{f{Kl}}{f{Kl}}}{{Ch{B@d}}}}{{{f{{Kh{ce}}}}}{{f{{l{e}}}}}DlDl}{{{f{AMh}}}{{f{{l{Fb}}}}}}{{{f{{Kh{LbL`}}}}}{{Ch{G`}}}}{{{f{DfAMj}}{f{Bl}}}{{Hb{Jdd}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kh{KnKj}}}}{f{{l{An}}}}{Ch{{f{AMd}}}}}{{A`{{Kh{KnKj}}n}}}}{{{f{{Kh{KfKd}}}}{f{{l{An}}}}{Ch{{f{AMd}}}}}{{A`{{Kh{KfKd}}n}}}}{{{f{AOb}}{f{AOb}}}d}{{{f{{Kh{LbL`}}}}}G`}{{{f{{Kh{LhKj}}}}}{{l{N`}}}}{{{f{{Kh{LdKj}}}}}{{l{Kj}}}}{{{f{DfOf}}Dd}b}{{{f{Df{Kh{KnKj}}}}Kl}b}{{{f{Df{Kh{LdKj}}}}Kl}b}{{{f{Df{Kh{KnKj}}}}KlDd}{{A`{bn}}}}{{{f{Df{Kh{KnKj}}}}Dd}{{A`{bn}}}}{{{f{BB`}}}{{Hb{G`{Ch{G`}}}}}}{{{f{AMh}}d}AMh}{{{f{AMh}}F`}AMh}{{{f{{Kh{KnKj}}}}{f{Bl}}}{{A`{{l{An}}n}}}}{{{f{{Kh{KfKd}}}}{f{Bl}}}{{A`{{l{An}}n}}}}{{{f{{Kh{LhKj}}}}{f{Bl}}}{{l{An}}}}{{{f{Jb}}{f{El}}}{{Ch{Jb}}}}{{{f{{Kh{LbL`}}}}{f{{Kh{LbL`}}}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kh{KnKj}}}}}Kl}{{{f{{Kh{LdKj}}}}}Kl}{{{f{{Kh{KnKj}}}}}{{f{{Ch{Dd}}}}}}{{{f{AMh}}AOnd}{{Cn{Cl}}}}{{{f{El}}AOn}AGb}{{{f{Of}}AOn}BAb}{KlB@b}{{{f{El}}DdAOn}BAb}{Kl{{f{Bl}}}}{{{f{AMh}}{f{{AO`{Bl}}}}BBd}AMh}{{{f{AMh}}}{{A`{AMhn}}}}{{{f{AMh}}}AMh}{{{f{AGb}}}{{f{AGb}}}}{fc{}}000000000000000000000000000000000{{{f{El}}}El}{{{f{AGb}}}BBf}{{{f{{Kh{LbL`}}}}G`}{{A`{{Eb{{Kh{LbL`}}}}n}}}}{fEj}{{{f{{Kh{LhKj}}}}{f{Bl}}}{{l{An}}}}{{{f{{Kh{KfKd}}}}{f{Bl}}}{{A`{{l{An}}n}}}}{{{f{{Kh{KnKj}}}}{f{Bl}}}{{A`{{l{An}}n}}}}333{{{f{Jb}}{f{Jb}}}d}{{{f{{Kh{KnKj}}}}{Ch{{f{AMd}}}}{f{{l{An}}}}}{{A`{{Kh{KnKj}}n}}}}{{{f{{Kh{KfKd}}}}{Ch{{f{AMd}}}}{f{{l{An}}}}}{{A`{{Kh{KfKd}}n}}}}{g{{A`{AMle}}}{}{}{{Hn{}{{Cj{{A`{ce}}}}}}}}0{{AGbg}{{A`{AMne}}}{}{}{{Hn{}{{Cj{{A`{ce}}}}}}}}0{B@f{{A`{eg}}}{}{{AMl{c}}ALb}{}}0{{B@fAGb}{{A`{eg}}}{}{{AMn{c}}ALb}{}}0{{{f{Jb}}}{{A`{cn}}}Mb}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000{{}{{A`{c}}}{}}0000000000000000000000000000000000000000000{{{f{Jb}}{f{El}}}{{A`{Jbn}}}}{{{f{El}}AOn}{{A`{AGbn}}}}{f{{A`{GhBBh}}}}000{fAAh}0000000000000000000000000000000000000000000{{{f{AGb}}}AGb}{{{f{AMh}}}{{A`{AMhn}}}}{{{f{AMh}}}d}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}G`}cADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{AMh}}}{{A`{AAjn}}}}1{{{f{El}}Jb}d}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}gADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{}c{}}0000000000000000000000000000000000000000000{G`c{}}0{{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}{Ch{Ib}}}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{DfDd}}B@j}{{A`{bHj}}}}{{{f{DfDd}}BBj}{{A`{bHj}}}}{{{f{DfDd}}{f{Bl}}}{{A`{bHj}}}}{{{f{El}}}Jb}```````````{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{AOd{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{f{AMh}}{f{AMh}}}{{A`{{Hb{AMhAMh}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hb{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BBl}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{{}b}{G`b}{{{f{DfBBl}}}b}2{cc{}}6{{}G`}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}{{}d}4``````````````````````````{{{f{BBn}}}{{f{Bl}}}}???>>>`{{nBBn}n}{nn}>>{{{f{BBn}}}f}?>>><<<`{{{f{BC`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BBn}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{n}}{f{DfHh}}}{{A`{bHj}}}}0={cBBn{{B@n{{Eb{Bl}}}}}}>{BCbn}{BCdn}{BCfn}{BChn}{cc{}}{BCjn}{BCln}{{}{{Gb{{f{Bl}}BC`}{{Ad{b}}}}}}{{}G`}00{{}c{}}00{cnALf}{{{f{Bl}}}BBn}````{{{Gb{{f{Bl}}BC`}{{Ad{b}}}}}b}{cnBCn}{fEj}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{GhBBh}}}}0{fAAh}00999{{{f{n}}c}n{{AAn{{f{Bl}}}{{Ad{Ej}}}}}}``````````````````{{fh}b}00{{{f{DfAAj}}{Gf{Ab}}{f{{BD`{El}}}}}{{A`{bn}}}}{{{f{AAj}}{f{Dn}}}{{Gf{Ab}}}}0{{{f{AAj}}{f{{l{Bb}}}}}{{A`{AAjn}}}}{{{f{AAj}}{f{{Bf{Dd}}}}}{{A`{AAjn}}}}0{{{f{AAj}}{f{{Bf{Dd}}}}{f{{BD`{El}}}}d}{{A`{AAjn}}}}{{{f{AAj}}GnG`}AAj}{{{f{DfAAj}}}{{f{DfAAj}}}}{{{f{DfAAj}}{f{Bl}}e}{{A`{{f{DfAAj}}n}}}BDb{{AAn{{f{Ab}}}{{Ad{c}}}}}}{{{f{DfAAj}}G`e}{{A`{{f{DfAAj}}n}}}BDb{{AAn{{f{Ab}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AAj}}}{{`{{D`{}{{Cj{G`}}}}}}}}{{{f{AAj}}}AAj}{{{f{BDd}}}BDd}{{{f{BDf}}}BDf}2{{f{f{Dfc}}}b{}}00{fb}00{{{f{AAj}}{f{Bl}}}{{A`{{f{Ab}}n}}}}{{{f{AAj}}e}{{A`{{Gf{{f{Ab}}}}n}}}{{If{Bl}}}{{Hn{}{{Cj{c}}}}}}{{}BDf}{{}AAj}{G`{{f{c}}}{}}0000{G`{{f{Dfc}}}{}}0000{G`b}0000{{{f{AAj}}{f{Bl}}}{{A`{AAjn}}}}{{{f{DfAAj}}{f{Bl}}}{{A`{Abn}}}}{{{f{AAj}}e}AAj{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{AAj}}{f{{BDh{DdA@h}}}}}AAj}{{{f{AAj}}{Ch{{f{{Bf{c}}}}}}}{{A`{AAjn}}}{}}{{{f{AAj}}}{{Gf{El}}}}9{{{f{{BD`{BAb}}}}}AAj}{{{f{{BD`{El}}}}}AAj}{{{f{BDf}}{f{BDf}}}d}{{{f{AAj}}{f{AAj}}}d}00{{f{f{c}}}d{}}00{{{f{AAj}}}G`}`{{{f{AAj}}e}{{A`{AAjn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{AAj}}{Gf{Ab}}}{{A`{AAjn}}}}{{{f{DfAAj}}{f{AAj}}}{{A`{bn}}}}{{{f{AAj}}}{{Gf{Of}}}}{{{f{AAj}}AI`}{{A`{AAjn}}}}{{{f{AAj}}{f{{l{Bb}}}}}{{A`{AAjn}}}}{{{f{BDd}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BDf}}{f{DfHh}}}{{A`{bHj}}}}{{{f{AAj}}{f{DfHh}}}{{A`{bHj}}}}0{cc{}}0000{cAAj{{Hn{}{{Cj{Ab}}}}}}{{{f{{Bf{BDj}}}}}{{A`{AAjn}}}}{{{f{{Bf{BDj}}}}{f{{BD`{El}}}}}{{A`{AAjn}}}}{{c{f{{BD`{El}}}}}{{A`{AAjn}}}{{D`{}{{Cj{{f{BDj}}}}}}}}{{{f{AAj}}G`}{{Ch{{Gf{Jb}}}}}}{{{f{AAj}}{f{Bl}}}{{Ch{G`}}}}{{{f{AAj}}}{{Gf{{f{Dd}}}}}}{{{f{AAj}}}{{Gf{Dd}}}}{{{f{AAj}}}{{Gf{{f{Bl}}}}}}{{{f{AAj}}}{{f{{Bf{Ab}}}}}}{{{f{DfAAj}}}{{f{Df{Gf{Ab}}}}}}{{{f{AAj}}G`}{{A`{BDjn}}}}{{{f{AAj}}G`{f{DfBDj}}}{{A`{bn}}}}{{{f{AAj}}G`{f{DfBDj}}}b}{{{f{AAj}}}{{Ch{{A`{Eln}}}}}}`{{{f{AAj}}e}{{A`{BDln}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{AAj}}{Gf{Ab}}{f{BDn}}}{{A`{{Hb{Ab{Gf{Ab}}C`}}n}}}}1{{{f{AAj}}{Gf{Ab}}dd}{{A`{BDln}}}}{{{f{BDf}}{f{Dfc}}}bADj}{{{f{AAj}}{Ch{G`}}}AAj}{{{f{AAj}}}G`}{{{f{AAj}}{f{{Bf{Ab}}}}}{{A`{AAjn}}}}{{{f{DfAAj}}{f{{Bf{Ab}}}}}{{A`{{f{DfAAj}}n}}}}{{{f{DfAAj}}{f{{Bf{Ab}}}}}{{f{DfAAj}}}}{{{f{AAj}}{BE`{G`}}}f}{{{f{AAj}}G`}f}{{{f{AAj}}{BEb{G`}}}f}{{{f{AAj}}{Nf{G`}}}f}{{{f{AAj}}{BEd{G`}}}f}{{{f{AAj}}BEf}f}{{{f{AAj}}{f{Bl}}}f}{{{f{AAj}}{BEh{G`}}}f}{{}G`}0000{{{f{DfAAj}}G`c}{{A`{{f{DfAAj}}n}}}BDb}{{}c{}}000000{{AAjDd}{{l{j}}}}{{{f{AAj}}}{{A`{{l{Bb}}n}}}}{{{f{AAj}}}d}1{{{f{AAj}}}{{Fn{Ab}}}}{{{f{AAj}}}{{`{{D`{}{{Cj{AAj}}}}}}}}{{{f{AAj}}AOnd}BEj}{{{f{AAj}}}BEl}{AAjBEn}{{{f{AAj}}}G`}{{{f{AAj}}}{{A`{{Ch{Ab}}n}}}}{{{f{AAj}}BDd}{{A`{{Ch{Ab}}n}}}}122{{{Gf{Ab}}}{{A`{AAjn}}}}{{{Gf{Ab}}}AAj}111{{{f{DfBEj}}}Ch}{{{f{DfBEl}}}Ch}{{{f{AAj}}}AAj}{{{f{AAj}}ed}{{A`{{Gf{AAj}}n}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}0{{AAje}{{A`{cn}}}{}{{Dn{AAj}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAj}}e}{{A`{cn}}}{}{{Dn{{f{DfAAj}}}{{Ad{{A`{cn}}}}}}}}{{AAjgc}{{A`{en}}}{}{}{{Dn{AAjc}{{Ad{{A`{en}}}}}}}}{{{f{DfAAj}}}{{Ch{Ab}}}}{{{f{AAj}}{f{AAj}}}d}{{{f{DfAAj}}{f{Bl}}Dd}{{A`{{f{DfAAj}}n}}}}{{{f{DfAAj}}{f{Bl}}c}{{A`{{f{DfAAj}}n}}}BDb}{{{f{DfAAj}}G`c}{{A`{{f{DfAAj}}n}}}BDb}{{{f{DfAAj}}Ddc}{{A`{{f{DfAAj}}n}}}BDb}:{{{f{AAj}}{Gf{Ab}}{f{BF`}}}{{A`{{Hb{Ab{Gf{Ab}}C`}}n}}}}`{{{f{AAj}}{f{Ab}}dd{Ch{Jn}}}{{A`{AAjn}}}}0{{{f{AAj}}G`dd{Ch{Jn}}}{{A`{AAjn}}}}{{{f{AAj}}}{{BD`{El}}}}{{{f{AAj}}{f{AAj}}}{{A`{bn}}}}{{{f{AAj}}e}{{A`{AAjn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{AAj}}G`}{{Ch{{f{Ab}}}}}}{{{f{AAj}}c}{{A`{AAjn}}}{{BFb{G`}}}}2{{{f{AAj}}c}{{A`{{Gf{Ab}}n}}}{{BFd{Dd}}}}{{{f{AAj}}e{f{{Mj{{BD`{El}}}}}}}{{A`{AAjn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{AAj}}e{f{{BD`{El}}}}}{{A`{AAjn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{DfAAj}}e}{{A`{bn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{AAj}}}{{Hb{G`G`}}}}{{{f{AAj}}Gn}AAj}{{{f{AAj}}}d}{{{f{DfAAj}}}b}{{{f{BEj}}}{{Hb{G`{Ch{G`}}}}}}{{{f{BEl}}}{{Hb{G`{Ch{G`}}}}}}{{{f{AAj}}GnG`}AAj}00{{{f{AAj}}cFf}{{A`{AAjn}}}{{BFd{Dd}}}}{{{f{DfAAj}}cFf}{{A`{{f{DfAAj}}n}}}{{BFd{Dd}}}}{{{f{AAj}}Gn}{{Hb{AAjAAj}}}}0{{{f{DfAAj}}}{{`{{D`{}{{Cj{AAj}}}}}}}}{{AAjG`d}{{Gf{AAj}}}}{{{f{AAj}}BDd}{{A`{{Ch{Ab}}n}}}}{{{f{AAj}}{Ch{G`}}}AAj}{{{f{AAj}}{f{{l{Fb}}}}}{{A`{AAjn}}}}{AAj{{Gf{Ab}}}}{{{f{AAj}}{f{{l{Fb}}}}}AAj}{{{f{AAj}}{f{{l{Fb}}}}d}AAj}{{{f{AAj}}}{{f{AAj}}}}{{{f{AAj}}BFf}{{A`{{AAb{AAd{AA`{{A@n{G`}}}}}}n}}}}{fc{}}00{fEj}{{{f{DfAAj}}{Ch{{f{Bl}}}}{Ch{{AAf{Ej{Gf{Ej}}}}}}}{{A`{AAjn}}}}{{{f{DfAAj}}{Ch{{f{Bl}}}}{Ch{{AAf{Dd{Gf{Dd}}}}}}}{{A`{AAjn}}}}{{{f{DfAAj}}{f{Bl}}e}{{A`{{f{DfAAj}}n}}}BDb{{AAn{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAj}}G`e}{{A`{{f{DfAAj}}n}}}BDb{{AAn{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{BFh{{A`{AAjn}}}}1{{{Hb{{BFj{{Cn{Cl}}}}{f{{BD`{BAb}}}}}}}{{A`{AAjn}}}}{{c{f{{BD`{El}}}}}{{A`{AAjn}}}{{D`{}{{Cj{{A`{{f{BDj}}n}}}}}}}}{{{f{AAj}}{f{Bl}}}{{A`{G`n}}}}{{}{{A`{c}}}{}}0000{f{{A`{GhBBh}}}}{fAAh}0000{{{f{AAj}}{Ch{{f{{Bf{Ej}}}}}}BDf{Ch{{Hb{GnG`}}}}}{{A`{AAjn}}}}{{{f{AAj}}d{Ch{{Gf{Dd}}}}BDf{Ch{{Hb{GnG`}}}}}{{A`{AAjn}}}}1{{{f{AAj}}c}{{A`{AAjn}}}{{BFd{Dd}}}}{{{f{AAj}}c{f{Bl}}BFl}{{A`{AAjn}}}{{BFd{Dd}}}}0{{{f{AAj}}{f{AAj}}}{{A`{AAjn}}}}{{{f{DfAAj}}{f{AAj}}}{{A`{{f{DfAAj}}n}}}}{{{f{DfAAj}}{f{AAj}}}b}{{}c{}}0000{{{f{AAj}}}G`}{{{f{DfAAj}}c}{{A`{{f{DfAAj}}n}}}BDb}{{{f{DfAAj}}c{f{{BD`{El}}}}}{{A`{{f{DfAAj}}n}}}BDb}{{{f{DfAAj}}Ab}{{f{DfAAj}}}}{{{f{AAj}}Dd{Ch{Jd}}}{{A`{AAjn}}}}{{{f{DfAAj}}Dd{Ch{Jd}}}{{f{DfAAj}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BFn}}}BFn}{{f{f{Dfc}}}b{}}{fb}{{}BFn}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{BFn}}{f{BFn}}}d}{{f{f{c}}}d{}}00{{{f{BFn}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{{{f{BFn}}{f{Dfc}}}bADj}`{{}G`}{{}c{}}`{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}``4````````````````````````````````{{fh}b}000{{{f{BDl}}}{{A`{AAjn}}}}`{{{f{BG`}}}{{f{{Bf{{BGb{Jd}}}}}}}}{{{f{BDl}}c}{{A`{AAjn}}}{{Af{AAj}{{Ad{{A`{AAjn}}}}}}IjIl}}{{{f{C`}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BG`}}}BG`}{{{f{C`}}}C`}{{{f{BDl}}}BDl}{{{f{BGd}}}BGd}{{f{f{Dfc}}}b{}}000{fb}000;{{}BG`}{{}C`}{G`{{f{c}}}{}}000{{{f{BGf}}}f}1111{G`{{f{Dfc}}}{}}0000000`{{BGhc}{}BGj}{G`b}000{{{f{DfBG`}}}b}1111{{{f{BG`}}{f{BG`}}}d}{{{f{C`}}{f{C`}}}d}{{f{f{c}}}d{}}00000`{{{f{BGl}}}Jd}{{{f{BG`}}}{{f{{Bf{Jd}}}}}}{{{f{BDl}}}{{A`{AAjn}}}}{{{f{DfBG`}}}{{f{Df{Gf{Jd}}}}}}{{{f{BG`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{C`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BDl}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BGd}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{Bl}}BGd}Dd}{cc{}}0000{{{Gf{{Hb{Jd{BGb{Jd}}}}}}}BG`}{{{Gf{{Hb{{Gf{Jd}}{Gf{{BGb{Jd}}}}}}}}}BG`}{{{Gf{{Gf{{Hb{Jd{BGb{Jd}}}}}}}}}BG`}3{BG`C`}4{BGnBGd}5{cBG`{{Hn{}{{Cj{{Hb{Jd{BGb{Jd}}}}}}}}}}{cBG`{{Ih{}{{Cj{{Hb{Jd{BGb{Jd}}}}}}}}}}{{{f{C`}}G`}BGl}{{{f{BDl}}}{{f{C`}}}}{{{f{DfBDl}}}{{f{DfC`}}}}{{{f{C`}}}{{l{Fb}}}}{{{f{BH`}}dd}{{A`{C`n}}}}{{{f{BDl}}}{{A`{AAjn}}}}{{{f{DfC`}}}{{f{DfBG`}}}}{{}G`}0000000{{}c{}}0000000{C`BG`}1{{{f{BG`}}}}{BG`}301{{{f{BGl}}}d}{{{f{C`}}}d}{{{f{BG`}}}d}{{{f{BG`}}}{{BHd{{BHb{{Fn{Jd}}}}{Fn{{BGb{Jd}}}}}}}}{{{f{C`}}}BHf}{{{f{BDl}}}{{Gf{Ab}}}}{{{f{BDl}}{Ch{{Hb{GnG`}}}}}{{Gf{Ab}}}}={{{f{BGl}}}G`}{{{f{C`}}}G`}?????{{{Gf{Jd}}{Gf{{BGb{Jd}}}}d}BG`}{{{f{AAj}}{Gf{Ab}}C`{Ch{{Gf{Dd}}}}}BDl}{{{f{DfBHf}}}Ch}{{{f{DfBHf}}G`}Ch}{{{f{BDl}}c}{{A`{AAjn}}}{{Dn{AAj}{{Ad{{A`{AAjn}}}}}}IjIl}}{f}{{{f{C`}}}BGh}{{{f{BDl}}AjOl}{{A`{AAjn}}}}{{BDle}BDl{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{C`}}GnG`}BGf}{{{f{DfBG`}}}b}{{{f{DfC`}}}b}{{{f{BDl}}Bd}{{A`{AAjn}}}}{{{f{BDl}}}{{A`{AAjn}}}}{C`{{Gf{Jd}}}}0{BDlC`}{{{f{DfBDl}}}C`}{fc{}}000{fEj}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{GhBBh}}}}{fAAh}0000000{C`C`}{{{f{C`}}}{{f{BG`}}}}{{{f{C`}}}{{f{{Gf{{A@n{Jd}}}}}}}}={{}c{}}0000000`````{{{f{BG`}}c}Ab{{Dn{{Hb{Jd{f{{BGb{Jd}}}}}}}{{Ad{Ch}}}}IjIl}}{{{f{BG`}}c}Ab{{Dn{{Hb{Jd{f{{BGb{Jd}}}}}}}{{Ad{}}}}IjIl}}{{{f{{Bf{{A@n{Jd}}}}}}c}Ab{{Dn{{A@n{Jd}}}{{Ad{Ch}}}}IjIl}}{{{f{{Bf{{A@n{Jd}}}}}}c}Ab{{Dn{{A@n{Jd}}}{{Ad{}}}}IjIl}}{{{f{{Bf{c}}}}e{Ch{{Mj{AGd}}}}}{{ALj{c}}}{BHhBHj}{{D`{}{{Cj{{Hb{JdJd}}}}}}J`}}{{{f{{Bf{c}}}}{f{Ib}}e{Ch{{Mj{AGd}}}}}{{ALj{c}}}{BHhBHj}{{D`{}{{Cj{{Hb{JdJd}}}}}}J`}}{{{f{{l{c}}}}JdJd}{{l{c}}}Dl}{{{f{{Gf{{A@n{Jd}}}}}}{f{{Bf{{Cn{Cl}}}}}}}d}{{{f{BHl}}{f{C`}}}Ab}{{BHnBHn}BHn}0`{{{f{BI`}}{f{AAj}}{f{C`}}}{{A`{Abn}}}}{{{f{BI`}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBIb}}Jb}{{Ch{b}}}}{{{f{DfBId}}{f{Jb}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BIb}}}BIb}{{{f{BId}}}BId}{{{f{BDj}}}BDj}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bf{c}}}}}El{{Id{El}}}}{{}BDj}{G`{{f{c}}}{}}00{G`{{f{Dfc}}}{}}00{G`b}00{{{f{BDj}}{f{BDj}}}d}{{f{f{c}}}d{}}00{{{f{BDj}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{{{Hb{{f{El}}G`}}}BIb}1{{{Hb{{f{El}}G`}}}BId}2{{gG`}{{BD`{El}}}{{B@n{Dd}}}{{B@n{El}}}{{D`{}{{Cj{{Gf{{Hb{ce}}}}}}}}}}{{}G`}00{{}c{}}00{BIbAb}{BIdAb}{{{f{El}}G`}BIb}{{{f{El}}G`}BId}{{{Gf{Jb}}}BDj}{{{f{DfBIb}}G`}Ab}{{{f{DfBId}}G`}Ab}{{{f{{Bf{BDj}}}}{Ch{G`}}}{{A`{{BD`{El}}n}}}}0{{{f{{Bf{BDj}}}}{Ch{G`}}}{{A`{{Gf{El}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAh}00==={{{f{{Bf{AAj}}}}}{{A`{AAjn}}}}{{{f{{Bf{AAj}}}}d}{{A`{AAjn}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAj{f{{Bf{Dd}}}}{f{{Bf{Dd}}}}{Ch{Dd}}{f{AAj}}}AAj}{{BEnc}{{A`{AAjn}}}{{Dn{BIf{f{Df{BIj{BIh}}}}{f{Df{BIj{BIl}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BIn}}{f{{Bf{Jd}}}}dd}AAj}{{{f{BIn}}{f{AAj}}{f{Ab}}{f{Ab}}BJ`}{{A`{AAjn}}}}`{{{f{Bl}}{f{Bl}}}Dd}{{BJb{Mj{{Bf{Dd}}}}}BBb}{{{f{BFh}}G`}{{Hb{BFhBFh}}}}{{{f{AHb}}}Aj}{{{f{BJd}}}Aj}{{{f{BJf}}{f{{Bf{A@d}}}}Ll}AAj}0{{{f{BJf}}{f{{Bf{A@d}}}}}AAj}0{{{f{BJh}}{Ch{{Gf{{f{Bl}}}}}}{Ch{{f{Bl}}}}d}{{A`{AAjn}}}}{{BEnd}BEn}{{{BJj{c}}{Ch{{Mj{BJl}}}}}{{BJj{c}}}BJn}{{{f{Ab}}}{{A`{Abn}}}}{BBbBBb}{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBbBBb}}{{BKbBKb}}{{{f{BFl}}Gn{Ch{{f{AMd}}}}}{{A`{Gnn}}}}0{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}1{{BKfc}BEn{{If{{Bf{BBb}}}}}}6`{{BBbc}BBb{{B@n{Dd}}}}{{}BBb}{{BBbd}BBb}{{}BKh}{c{{A`{BBbn}}}{{If{{Bf{BBb}}}}}}{{{f{{Mj{ce}}}}}{{f{e}}}A@bBKj}{{BKld}BKl}`{{{f{BKn}}}d}00`{{BBbc}BBb{{B@n{BBb}}}}{{{Mj{BKn}}BL`}{{A`{BEnn}}}}75{{BBbcd}BBb{{B@n{BBb}}}}{{{f{DfAC`}}}b}{{{f{DfACb}}}b}{{{f{DfAC`}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACb}}{Ch{c}}}b{}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACb}}c}b{}}{{{f{{AHf{}{{AHd{c}}}}}}g}{{AHf{}{{AHd{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{BKfc{Mj{{BD`{El}}}}}BEn{{Dn{AAj}{{Ad{{A`{AAjn}}}}}}IjIl}}{{BBbc{BLd{{Mj{BLb}}}}}BBb{{Dn{Ab}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIl}}{{BBbBBbc{BLd{{Mj{BLb}}}}}BBb{{Dn{AbAb}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIl}}{{{f{BBb}}{f{Dfc}}f}{{A`{BLfn}}}{{Af{{f{BBb}}f}{{Ad{{A`{BLfn}}}}}}}}{{{f{AHh}}{f{Dn}}}AHh}{{{f{AHh}}{f{Dn}}}{{l{c}}}Dl}{{BBbc{f{{Bf{BBb}}}}{BLd{{Mj{BLb}}}}}BBb{{Dn{{f{Df{Bf{Ab}}}}}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIl}}{{BBbBLh{f{{Bf{BBb}}}}dd}BBb}{{ce{BLd{{Mj{BLb}}}}d}BBb{{Dn{{f{Df{Bf{Ab}}}}}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIl}{{If{{Bf{BBb}}}}}}{{{f{{AHf{}{{AHd{c}}}}}}i{f{Df{Bf{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHf{}{{AHd{c}}}}}}g}{{AHf{}{{AHd{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{BBbBBbGnEl}BBb}{BFh{{Mj{Cl}}}}{{{f{BLj}}}{{Ch{G`}}}}{BLlBBb}{BLnBBb}{BBbBBb}3210{{{f{AHj}}F`}{{l{Fb}}}}{{BBbF`}BBb}{{{f{BJd}}F`}{{l{Fb}}}}{{cFf}BBb{{If{{Bf{BBb}}}}}}{{{f{AHj}}{f{{Bf{Ab}}}}{f{Ff}}}{{A`{{l{Fb}}n}}}}{{{f{AHl}}}{{A`{{l{Fb}}n}}}}6{{{f{BJd}}}{{A`{{l{Fb}}n}}}}{cBBb{{B@n{BBb}}}}{{{f{BM`}}}{{f{{Bf{Of}}}}}}``{BBbBLl}{eAMl{}{{Hn{}{{Cj{c}}}}}}{cBFh{{Hn{}{{Cj{{Ch{b}}}}}}}}{cBFh{{Hn{}{{Cj{b}}}}}}2{{AGbe}AMn{}{{Hn{}{{Cj{c}}}}}}0{{AGbc}BFh{{Hn{}{{Cj{{Ch{b}}}}}}}}{{AGbc}BFh{{Hn{}{{Cj{b}}}}}}`{{{f{Df{BMb{c}}}}}{{A`{{BD`{BAb}}n}}}BMd}{{{f{BKn}}}{{f{AGd}}}}{{{f{BJd}}}{{f{AGd}}}}{{{f{BMf}}}{{f{AGd}}}}{{{f{BFh}}}{{f{AGd}}}}{{{f{DfBJd}}}{{f{DfAGd}}}}{{{f{DfBFh}}}{{f{DfAGd}}}}{{{f{Md}}}Jb}{{{f{BMh}}}{{f{{l{B`}}}}}}{{{f{BMj}}{Ch{{f{Bl}}}}d}{{A`{{Kh{KfKd}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}}{{A`{{Kh{KfKd}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}Kldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{Kh{KnKj}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}Kld{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{Kh{KnKj}}n}}}}{{{f{{Mj{c}}}}}BMl{BMnA@b}}{{{f{BN`}}}{{f{{l{Ah}}}}}}{{{f{{Mj{ce}}}}}{}A@bBKj}{{{f{{Mj{c}}}}}NhBNb}{{{f{BNd}}}{{f{BBb}}}}{{{f{{Mj{ce}}}}}{{f{c}}}A@bBKj}{{{f{ANd}}}{{f{El}}}}{{{f{BNf}}}{{f{Ab}}}}{{{f{DfBJd}}}{{A`{G`n}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Ch{{f{{Bf{c}}}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{BNh}}}{{f{{l{An}}}}}}{{{Gf{BBb}}}BBb}{{{f{BMj}}{Ch{{f{Bl}}}}d}{{A`{{Kh{LhKj}}n}}}}{{{Mj{{BNj{c}}e}}}{{Mj{ce}}}{}BKj}{{{Mj{{Bf{{BNj{c}}}}e}}}{{Mj{{Bf{c}}e}}}{}BKj}{{{f{Bl}}}BBb}{{BBb{Ch{Jd}}}BBb}{{{f{BNl}}}{{A`{{l{An}}n}}}}{{{f{BNl}}}{{l{An}}}}{{{f{{Kh{KnKj}}}}{f{Kl}}{f{AMd}}}{{Kh{LdKj}}}}`{{{BJj{{Cn{BJn}}}}{Ch{{Mj{{BD`{El}}}}}}}{{A`{BNnn}}}}{{{BO`{c}}{f{{BD`{El}}}}}{{A`{{BOb{c}}n}}}BOd}{{{BOf{c}}{f{{BD`{El}}}}}{{A`{{BOh{c}}n}}}BOd}{{{BOj{c}}G`}{{A`{BOln}}}BJn}{{{BOn{c}}{f{{BD`{El}}}}}{{A`{{C@`{c}}n}}}BOd}{{{f{Df{BJj{c}}}}}{{A`{C@bn}}}BJn}`{BBbC@d}{{BBbC@fBBb}BBb}{{BKbBKb}}{{BKhBKh}BKh}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBKh}}BKh}b}210{{{f{BKh}}}Jd}04321{f{{f{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mj{ce}}}}}{{f{c}}}A@bBKj}111111111111{{{f{Df}}}{{f{Dfc}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BEnJdcFf}BEn{{If{{Bf{BBb}}}}}}{BFh{{Cn{Cl}}}}``{BEnBEn}```{{{f{C@h}}{f{Dd}}}{{A`{Ddn}}}}{{C@j{Gf{BBb}}}{{A`{BBbn}}}}{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{{f{BMf}}{f{Df{Bf{Ab}}}}}{{A`{{Ch{Ab}}n}}}}{{{f{C@l}}AbAb}{{A`{Abn}}}}{{C@j{Gf{BBb}}}BBb}{{{f{C@n}}}b}{{BBbEl}BBb}{{{f{BJd}}{f{El}}Fj}{{A`{Abn}}}}{{BEn{CA`{{f{Bl}}ElA@h}}d}BEn}{{{f{AHn}}{f{El}}}{{A`{Abn}}}}3{{{f{AOf}}{f{El}}}{{A`{Abn}}}}{{BEnEld}BEn}2{{{f{AHn}}{f{El}}Fj}{{A`{Abn}}}}{{{f{AOf}}{f{El}}Fj}{{A`{Abn}}}}{{BBbElFj}BBb}`{BBbCAb}{{{f{{Mj{c}}}}}{{Ch{{f{ALf}}}}}{ALfA@b}}{BBbBBb}{{{f{CAd}}}{{A`{Abn}}}}1`{{{f{CAf}}}{{A`{{l{Kd}}n}}}}{{{f{BFh}}G`}d}{{{BOj{c}}{f{{BD`{BAb}}}}}{{A`{{BOj{c}}n}}}BJn}{{{f{CAh}}{f{Ab}}}{{A`{Abn}}}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{{f{CAh}}c}{{A`{Abn}}}Bj}{{{f{BJd}}}{{Gd{{Fn{{Cn{Cl}}}}{Gb{{f{{Cn{Cl}}}}}{{Ad{G`}}}}}}}}``{{{f{BJd}}}{{f{{Gf{{Cn{Cl}}}}}}}}{{{f{DfBJd}}}{{f{Df{Gf{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBbBBbBBb}BBb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBbBBb}BBb}10{{{f{C@n}}}C@n}{{{f{BEn}}}BEn}{{{f{BKf}}}BKf}{{{f{BL`}}}BL`}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{BDn}}}BDn}{{{f{BF`}}}BF`}{{{f{CBd}}}CBd}{{{f{BFl}}}BFl}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{AAl}}}AAl}{{{f{A@d}}}A@d}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{BJ`}}}BJ`}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{BNd}}}BNd}{{{f{BBb}}}BBb}{{{f{CG`}}}CG`}{{{f{C@f}}}C@f}{{{f{{BLd{c}}}}}{{BLd{c}}}ADd}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{BLh}}}BLh}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{BKb}}}BKb}{{{f{C@j}}}C@j}{{{f{BKh}}}BKh}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{{Mj{ce}}}}}{{Mj{ce}}}A@b{BKjADd}}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{On}}}On}{{{f{BFf}}}BFf}{{{f{BFh}}}BFh}{{{f{Md}}}Md}{{{f{BAb}}}BAb}{{{f{Ol}}}Ol}{{{f{CIj}}}CIj}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{BJd}}}{{Mj{BJd}}}}{{f{f{Dfc}}}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{fb}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CJ`}}}{{Ch{{f{CJb}}}}}}{{{f{CAj}}}{{Ch{{f{CJb}}}}}}{{{f{CAn}}}{{Ch{{f{CJb}}}}}}``{{{f{BFl}}{f{BFl}}}B@d}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}B@d{CJdA@b}BKj}{{{f{{Bf{BBb}}}}}BBb}{{BKlCCj}BKl}{{{f{CCj}}{f{CCn}}}d}`{{{f{{Bf{Ab}}}}}{{A`{Abn}}}}{cBBb{{B@n{Dd}}}}{BEn{{A`{AAjn}}}}{c{{A`{{Gf{AAj}}n}}}{{Ih{}{{Cj{BEn}}}}}}{B@fe{}{{AMl{c}}ALb}}0{{B@fAGb}e{}{{AMn{c}}ALb}}0{{ADlDd}{{l{c}}}Dl}{{ADn{f{{l{c}}}}}{{l{c}}}Dl}10{{ADnDdEl}{{l{c}}}Dl}0{BEn{{A`{C@nn}}}}{{{f{DfBEn}}}{{A`{{Mj{{BD`{El}}}}n}}}}{eBBb{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{CIb}}G`}CJf}``{{{f{BJh}}{Gf{{f{Bl}}}}{Ch{{f{Bl}}}}d}{{A`{AAjn}}}}`{{f{f{c}}}B@d{}}0{BKhBKh}```{{{f{CFf}}}{{A`{{Mj{{BD`{El}}}}n}}}}{{cCIh}{{A`{BEnn}}}{{If{{Bf{BEn}}}}}}{{{f{BNl}}{f{{l{An}}}}}{{l{An}}}}{{ed}{{A`{BBbn}}}{{B@n{BBb}}ADd}{{If{{Bf{c}}}}}}{{{f{CJ`}}{Gf{BEn}}}{{A`{BEnn}}}}{{{f{CAj}}{Gf{BEn}}}{{A`{BEnn}}}}44{e{{A`{BBbn}}}{{B@n{BBb}}ADd}{{If{{Bf{c}}}}}}{{c{f{Bl}}d}BBb{{If{{Bf{BBb}}}}}}{{BLlc}BBb{{B@n{BBb}}}}{{{f{CJh}}{f{{Bf{Bd}}}}}{{l{Bb}}}}{{{f{BNl}}{f{Bl}}d}{{A`{{l{Bb}}n}}}}{{BLnc}BBb{{B@n{BBb}}}}{{{f{BKh}}BKh}d}{{{f{CJh}}{f{{l{B`}}}}}{{l{Bb}}}}{{{f{BNl}}{f{{l{An}}}}dd}{{A`{{l{Bb}}n}}}}{{{f{BNl}}{f{Bl}}}{{A`{{l{Bb}}n}}}}{{{f{Cl}}{f{AGb}}}{{Cn{Cl}}}}{{{f{Ab}}G`}{{A`{{l{Fb}}n}}}}{BEnBEn}{{{CJj{c}}}{{A`{G`n}}}BJn}{BBbBBb}{{{f{BNl}}{f{Bl}}d}{{A`{{l{Fb}}n}}}}{{{f{BNl}}{f{{l{An}}}}d}{{A`{{l{Fb}}n}}}}{{{f{ANb}}Bd{Ch{Bd}}{Ch{{f{CCd}}}}Bdd}{{A`{G`n}}}}{{{f{{Bf{Bd}}}}Bd{Ch{Bd}}{Ch{{f{CCd}}}}Bdd}{{A`{G`n}}}}{{{AO`{Bl}}}El}{{{f{BIn}}{f{{Bf{A@d}}}}d}AAj}`{{BEnBEn{Ch{Dd}}}BEn}{{{f{CJl}}{f{AAj}}{Ch{Dd}}{Ch{{Hb{GnG`}}}}}{{A`{AAjn}}}}{{{f{CJl}}{f{AAj}}{Ch{{Hb{GnG`}}}}d}{{A`{{Hb{AAjAAj}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BBbd}BBb}{{BBbced}BBb{{Dn{AbAb}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIlADd}{{If{{Bf{BBb}}}}}}212121{{ce}BBb{{Dn{AbAb}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIlADd}{{If{{Bf{BBb}}}}}}32{{CJnBBbG`d}BBb}```{{BBbBBbBFlCBf}BBb}`{CH`BBb}`{{BBbBBbBFlCBf{Ch{Kl}}{Ch{Dd}}}BBb}0{AMbGn}00{{{f{CK`}}}{{l{N`}}}}{{{f{CKb}}}{{l{N`}}}}{{{f{CAf}}}{{A`{{l{N`}}n}}}}`{{{f{CKd}}}{{l{Kj}}}}{{{f{BFl}}}Gn}`{{{f{BFl}}}d}```{{}b}{cbBKj}{{}BEn}{{}BL`}{{}CAl}{{}CB`}{{}CKf}{{}BDn}{{}BF`}{{}CBj}{{}CBn}{{}CC`}{{}CCb}{{}BJ`}{{}CCh}{{}CCj}{{}CCl}{{}CD`}{{}CDb}{{}CDf}{{}CDh}{{}CDj}{{}CDl}{{}CDn}{{}CEb}{{}CEh}{{}CEj}{{}CEl}{{}CEn}{{}CFf}{{}BBb}{{}{{BLd{{Mj{C@l}}}}}}{{}{{BLd{{Mj{BLb}}}}}}{{}{{BLd{{Mj{CKh}}}}}}{{}CGn}{{}CH`}{{}CHb}{{}CHf}{{}CHh}{{}CHj}{{}CHl}{{}CI`}{{}BKh}{{}{{Mj{CKj}}}}{{}{{Mj{Bl}}}}{{}{{Mj{c}}}CKl}{{}{{Mj{{Bf{c}}}}}{}}{{}CIf}{{}CIh}{{}On}{{}BFf}{{}BAb}{{}Ol}`{{}{{AAf{{Gf{AAl}}{Gf{A@d}}}}}}{G`{{f{c}}}{}}00{{{f{{ALn{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BLd{c}}}}}f{}}22222222222222222222222{{{f{{Mj{ce}}}}}{{f{c}}}A@bBKj}3333333333333{G`{{f{Dfc}}}{}}0{{{f{Df{ALn{c}}}}}{{f{Df}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CFf}}}{{A`{Ejn}}}}{{{f{BEn}}}{{A`{Ejn}}}}0001{{{f{{Mj{c}}}}}{{f{Bl}}}{ALfA@b}}{{{f{BAb}}c}{{A`{CKnn}}}{{Lf{}{{Cj{{f{CL`}}}}}}}}```{{{f{Ab}}GnCLb}{{A`{Abn}}}}{{BLnGnCLb}BBb}{{BBbGnCLb}BBb}{{BKhBKh}BKh}{{{f{CFf}}}{{A`{{`{BCn}}n}}}}``{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBbBBb}}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}{{BBbc}BBb{{B@n{BBb}}}}{{{Mj{AGdc}}}{{A`{{Mj{ec}}{Mj{AGdc}}}}}BKj{AGdIjIl}}{{{Mj{AGdc}}}{{Mj{ec}}}BKj{AGdIjIl}}{{{f{{Mj{ce}}}}}{{CLd{ce}}}A@b{ADdBKj}}{G`b}0000000{{{f{DfC@n}}}b}{{BEne}BEn{{B@n{BKb}}}{{Hn{}{{Cj{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{Mj{ce}}}}}bA@bBKj}3333333333333{BBbBBb}2{{BEn{Ch{{Gf{BBb}}}}}BEn}1{{{f{BJd}}}Ab}{{{f{{Kh{KnKj}}}}{f{Kl}}{f{AMd}}}{{Kh{LdKj}}}}`{BBbCLf}{{{f{AOf}}}{{f{El}}}}{{{f{BJd}}}{{f{El}}}}{{{f{BFh}}}{{f{AGb}}}}{{{f{Md}}}{{f{El}}}}{{{f{BAb}}}{{f{AGb}}}}``{{{f{El}}}BBb}{cBBb{{If{{Bf{El}}}}}}`{CHbBBb}{{}CGn}{{}BKh}{fc{{B@l{B@j}}}}0`{{{f{CJh}}{f{{Bf{Bd}}}}}{{l{Bb}}}}{{{f{CJh}}{f{{l{B`}}}}}{{l{Bb}}}}{{BFl{f{El}}{f{Bl}}}{{A`{bn}}}}{{BFl{Ch{{f{Bl}}}}{f{Bl}}}{{A`{bn}}}}{{{f{{BD`{c}}}}{f{{BD`{c}}}}}{{A`{bn}}}{}}{{{f{CLh}}{f{Bl}}}{{A`{bn}}}}`{{{f{CBb}}{f{CBb}}}d}{{{f{BDn}}{f{BDn}}}d}{{{f{BF`}}{f{BF`}}}d}{{{f{BFl}}{f{BFl}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{AAl}}{f{AAl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{BJ`}}{f{BJ`}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{BNd}}{f{BNd}}}d}{{BBbc}BBb{{B@n{BBb}}}}{{{f{BBb}}{f{BBb}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{{BLd{Ab}}}}{f{{BLd{Ab}}}}}d}{{{f{{BLd{{Mj{c}}}}}}{f{{BLd{{Mj{c}}}}}}}dA@b}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{BLh}}{f{BLh}}}d}{{{f{CKn}}{f{CKn}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{CHj}}{f{CHj}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{BKb}}{f{BKb}}}d}{{{f{CId}}{f{CId}}}d}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{CLjA@b}BKj}{{{f{{Mj{CLl}}}}{f{CLl}}}d}{{{f{{Mj{Cl}}}}{f{Cl}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{On}}{f{On}}}d}{{{f{BFf}}{f{BFf}}}d}{{{f{BFh}}{f{BFh}}}d}{{{f{BFh}}{f{{f{Cl}}}}}d}{{{f{Md}}{f{Md}}}d}{{{f{BAb}}{f{BAb}}}d}{{{f{Ol}}{f{Ol}}}d}{{{f{CIn}}{f{CIn}}}d}{{BBbc}BBb{{B@n{BBb}}}}{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CLnBBbd}BBb}``{{BBbc}BBb{{BFd{Dd}}}}{{BBbc}BBb{{If{{Bf{El}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BCh}}}CM`{}}{{{f{{Bf{CMb}}}}d{Ch{{f{CJb}}}}}{{A`{{Mj{{Bf{CMb}}}}n}}}}{{{f{{Bf{CMb}}}}d{Ch{{f{CJb}}}}d}{{A`{{Hb{{Mj{{Bf{CMb}}}}G`}}n}}}}{{{f{{Bf{c}}}}{f{{Bf{c}}}}}d{{If{ANb}}}}{{{f{BEn}}d}{{A`{Ejn}}}}{{BEne}BEn{{B@n{BKb}}ADd}{{If{{Bf{c}}}}}}{{{f{AId}}}{{A`{Abn}}}}{BBbBBb}{{{f{AId}}}{{A`{{Hb{Ab{H`{Gn}}}}n}}}}`{{{f{DfBKh}}c}b{{Hn{}{{Cj{BKh}}}}}}{{BBbBBbBBb}BBb}{{{f{BNl}}{f{{l{An}}}}G`}{{A`{{l{An}}n}}}}{A@d{{Hb{JdJd}}}}{{{f{BNl}}{f{Bl}}}{{A`{{l{Ah}}n}}}}{{{f{BNl}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{BNl}}{f{Bl}}{f{El}}}{{A`{Abn}}}}{{{f{AC`}}}d}{{{f{C@n}}}{{Ch{{A`{AAjn}}}}}}{{BEnG`}{{A`{AAjn}}}}{{{f{C@n}}}{{A`{AAjn}}}}{{{f{AC`}}}{{f{Of}}}}{{{f{BJd}}}{{Eb{Of}}}}{{BJbGn}BBb}{{BJb{f{Bl}}}BBb}{{BJbe}BBb{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{{f{BFh}}}{{f{{Bf{BAb}}}}}}`{{BEnc}BEn{{B@n{BBb}}}}{{BBbc}BBb{{B@n{BBb}}}}`10{{BBbAI`}BBb}{{{f{AIf}}c}{{A`{AIfn}}}{}}{{{f{AIh}}{f{{l{Bb}}}}}{{A`{{l{c}}n}}}Dl}{{{f{BJd}}{f{{l{Bb}}}}}{{A`{Abn}}}}{{BEnBBb}BEn}5{{{f{BNl}}{f{Bl}}d}{{A`{{l{Fb}}n}}}}{{{f{BNl}}{f{{l{An}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BNl}}{f{Bl}}}{{A`{{l{Fb}}n}}}}{CMd{{A`{AAjn}}}}{{{f{DfCMf}}{f{DfAAj}}}{{A`{bn}}}}{ACb{{l{c}}}Dl}{{AOd{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{BKlBEn}{{{BJj{c}}}{{A`{AAjn}}}BJn}{CJ`{{A`{BEnn}}}}{CAj{{A`{BEnn}}}}{CAn{{A`{BEnn}}}}{{{f{Df{BO`{c}}}}{f{DfAAj}}}{{A`{bn}}}BOd}{{{CMh{c}}}{{A`{AAjn}}}BJn}{{{BMb{c}}}{{A`{AAjn}}}BMd}{{{f{Df{CMj{c}}}}{f{DfAAj}}}{{A`{bn}}}BOd}{{{f{Df{BOf{c}}}}{f{DfAAj}}}{{A`{bn}}}BOd}{{{f{Df{CMl{c}}}}{f{DfAAj}}}{{A`{bn}}}BOd}{{{CMn{c}}}{{A`{AAjn}}}BJn}{{{CJj{c}}}{{A`{AAjn}}}BJn}{{{BOj{c}}}{{A`{AAjn}}}BJn}{{{BOn{c}}{f{DfAAj}}}{{A`{Jnn}}}BOd}{{{f{DfAC`}}}{{l{Ah}}}}=<;{{{CMh{c}}{Ch{{Mj{BJl}}}}d}{{A`{AAjn}}}BJn}{{{f{BOl}}G`}d}{{}BBb}{BEnBEn}{BLnBBb}{BBbBBb}`0```{{}{{BLd{{Mj{BLb}}}}}}{{{f{CAd}}}{{A`{Abn}}}}2{{BBbBBb}BBb}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df{Mj{AFh}}}}}{{A`{bBCh}}}}{{{f{BMf}}{f{DfHh}}}{{A`{bHj}}}}{{{f{C@l}}{f{DfHh}}}{{A`{bHj}}}}{{{f{C@h}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CBb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BDn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BF`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CBd}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BFl}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CBf}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CBh}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CBj}}{f{DfHh}}}{{A`{bHj}}}}{{{f{AAl}}{f{DfHh}}}{{A`{bHj}}}}{{{f{A@d}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BKn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CBn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CC`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CCb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CCd}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CCf}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BJ`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CCh}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CCj}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CN`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CCl}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CCn}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CD`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CDb}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CDd}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CDf}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CDh}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CDj}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CDl}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CDn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CE`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CEb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CEd}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CEf}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CEh}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CEj}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CEl}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CEn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CF`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CFb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CFd}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BBb}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CG`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{C@f}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{{BLd{c}}}}{f{DfHh}}}{{A`{bHj}}}{}}{{{f{CGb}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CGd}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CGf}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CGh}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CGj}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CGl}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{BLh}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{CKn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CGn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CH`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CHb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CHd}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CHf}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CHh}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CHj}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CHl}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CHn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CI`}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BKb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{C@j}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BKh}}{f{DfHh}}}{{A`{bHj}}}}0000{{{f{CIb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CId}}{f{DfHh}}}{{A`{bHj}}}}{{{f{{Mj{ce}}}}{f{DfHh}}}{{A`{bHj}}}{AGfA@b}BKj}{{{f{{Mj{ce}}}}{f{DfHh}}}{{A`{bHj}}}{BCnA@b}BKj}{{{f{{Mj{ce}}}}{f{DfHh}}}{{A`{bHj}}}A@bBKj}{{{f{CIf}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CIh}}{f{DfHh}}}{{A`{bHj}}}}{{{f{On}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BFf}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BFh}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Md}}{f{DfHh}}}{{A`{bHj}}}}{{{f{BAb}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Ol}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CIj}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CIl}}{f{DfHh}}}{{A`{bHj}}}}{{{f{CIn}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Bl}}BGd}Dd}```{{BBbce}BBb{{Dn{AbAb}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIlADd}{{If{{Bf{BBb}}}}}}{{BKld}BKl}``{{{f{Bl}}c}{{A`{BBbn}}}{{If{{Bf{BBb}}}}}}{{BBb{Ch{Jd}}}BBb}{cc{}}00000000{CFfBEn}{BKfBEn}222222222222222222222222222222222{JdAAl}33333333{{{f{Bl}}}CCd}4{CCnBJ`}5555555555555555555555555555555{BNdBBb}{O`BBb}{dBBb}{{{f{Bl}}}BBb}{NlBBb}{JlBBb}{AjBBb}{JdBBb}={BdBBb}{GnBBb}{NhBBb}{NbBBb}{JnBBb}{cc{}}0{CGb{{BLd{{Mj{BMf}}}}}}{CNb{{BLd{{Mj{BMf}}}}}}{BLh{{BLd{{Mj{BMf}}}}}}{CGl{{BLd{{Mj{BMf}}}}}}{CGf{{BLd{{Mj{BMf}}}}}}{CGd{{BLd{{Mj{BMf}}}}}}{CGj{{BLd{{Mj{BMf}}}}}}{CNd{{BLd{{Mj{BMf}}}}}}{CNf{{BLd{{Mj{BMf}}}}}}{CNh{{BLd{{Mj{BMf}}}}}}:::::::{CGjBLh};{CNbBLh}{CGbBLh}{CGdBLh}{CNjCKn}???????{CHlCHj}{cc{}}000{BBbBKb}{EjBKb}{{{f{Bl}}}BKb}{DdBKb}44444{CNl{{Mj{CKj}}}}{{{Mj{Bl}}}{{Mj{{Bf{Bd}}}}}}{Gh{{Mj{Bl}}}}{c{{Mj{c}}}{}}{{{A@n{c}}}{{Mj{{Bf{c}}}}}{}}9{{{f{{Bf{c}}}}}{{Mj{{Bf{c}}}}}ADd}{{{f{Bl}}}{{Mj{Bl}}}}{CNn{{Mj{AN`}}}}{{{f{AN`}}}{{Mj{AN`}}}}{Ej{{Mj{Bl}}}}{CO`c{}}{CMb{{Mj{ANb}}}}{{{f{CKj}}}{{Mj{CKj}}}}{{{Cn{ce}}}{{Mj{ce}}}A@bBKj}{{{Gf{ce}}}{{Mj{{Bf{c}}e}}}{}{BKjADd}}{{{Eb{c}}}{{Mj{c}}}{CObA@b}}{{{f{ANb}}}{{Mj{ANb}}}}{cc{}}00000{COdBFh}{COfBFh}222222{{{f{{BD`{BAb}}}}}COh}{Jd{{Ch{BKh}}}}{JdBKh}00{{c{Ch{Ib}}}COj{}}{{{COl{Gn}}{COl{Bd}}{Ch{Ib}}}COn}{{{COl{Gn}}{COl{Bd}}{Ch{Ib}}}D@`}{c{{ALn{{l{e}}}}}{{Hn{}{{Cj{}}}}}Al}{c{{ALn{{l{Bb}}}}}{{Hn{}{{Cj{d}}}}}}{cBKh{{Hn{}{{Cj{BKh}}}}}}{e{{Mj{{Bf{c}}}}}{}{{Hn{}{{Cj{c}}}}}}{{gG`}{{D@b{Gn}}}If{{Hn{}{{Cj{{Ch{c}}}}}}}{{Hn{}{{Cj{{Ch{e}}}}}}}}0{e{{D@b{Gn}}}{{Hn{}{{Cj{{Ch{d}}}}}}}{{Hn{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADh{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGb}{{D@b{Gn}}}BHj{{Hn{}{{Cj{{Ch{c}}}}}}}{{Hn{}{{Cj{{Ch{e}}}}}}}}763{{Dde}ADh{}{{D`{}{{Cj{c}}}}}}{{{f{Bl}}}{{Ch{BKh}}}}{c{{ALn{{l{e}}}}}{{Ih{}{{Cj{}}}}}Al}{e{{Mj{{Bf{c}}}}}Ij{{Ih{}{{Cj{c}}}}}}`{c{{A`{{CJj{AFh}}n}}}{{B@n{CMb}}}}{{}{{Mj{c}}}A@b}{c{{Mj{ec}}}BKjA@b}{{Dd{f{{Bf{c}}}}}ADh{}}{{Dd{f{{Bf{{Ch{c}}}}}}}ADh{}}{{{f{Bl}}}{{A`{D@d}}}}{c{{ALn{{l{Bb}}}}}{{J`{}{{Cj{d}}}}}}{c{{ALn{{l{e}}}}}{{J`{}{{Cj{}}}}}Al}{El{{BLd{{Mj{BLb}}}}}}{{Ddc}D@f{}}{{{Gf{c}}AGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{Gf{c}}AGb}{{ALb{}{{ANf{e}}{ANh{c}}{ANj{g}}}}}{ANl{ANn{e}}}ADd{{Gl{}{{Cj{e}}}}J`IjIl}}`{{DdcG`}AIj{}}{{G`cAGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{}CGn}{{BEnBEncc}BEn{{B@n{BBb}}}}{{{f{D@h}}{f{AAj}}ei}{{A`{AAjn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}{{B@n{Dd}}}{{Hn{}{{Cj{g}}}}}}{{DdG`}AIl}{{G`AGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{G`AGb}BFh}``{{BBbc{BLd{{Mj{BLb}}}}D@j}BBb{{Dn{Ab}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIl}}`{{BBbc}BBb{{B@n{BBb}}}}{{BBbG`G`}BBb}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{D@lA@b}BKj}{{{f{BJd}}G`}{{A`{Jbn}}}}{{BLlBBbd}BBb}{{BLnBBbd}BBb}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}G`}{{Ch{c}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}6{{{f{AIn}}G`}{{A`{Jbn}}}}{{{f{AOf}}G`}{{A`{Jbn}}}}{{{f{AIn}}G`}Jb}{{{f{AOf}}G`}Jb}{CAbBBb}{{{f{BEn}}}BKh}{{{f{CId}}}El}{{}El}{{{f{CBl}}GnCBf{Ch{{f{AMd}}}}}{{A`{CBdn}}}}00{{{f{CKh}}{f{{BD`{El}}}}D@n{f{Of}}{f{Of}}}{{Ch{Of}}}}{{{f{BLb}}{f{{BD`{El}}}}D@n{f{{Bf{Of}}}}}{{A`{Ofn}}}}{{{f{COh}}{f{Bl}}}{{Ch{Of}}}}{{{f{AGb}}}{{f{{Bf{BAb}}}}}}{{{f{BM`}}}G`}{{{f{{Bf{Bd}}}}}{{Ch{G`}}}}{{{f{Df{BOj{c}}}}}{{A`{{f{{Mj{CIb}}}}n}}}BJn}{{{f{BJd}}}{{Ch{{Mn{Ml}}}}}}{{{f{Df{Mj{ce}}}}}{{Ch{{f{Dfc}}}}}A@bBKj}{{{f{Df{Mj{ce}}}}}{{f{Dfc}}}A@bBKj}{{{f{BJd}}G`}{{Ch{{f{Jh}}}}}}{{{f{BJd}}G`G`}{{Ch{{f{Jh}}}}}}{{{f{BMf}}}{{Ch{{BLd{{Mj{BLb}}}}}}}}{{{f{CBl}}CBdCBfKl{Ch{{f{AMd}}}}CBj}{{A`{DA`n}}}}{{{f{CBn}}}{{Mj{CC`}}}}{{{f{Dfc}}}{{A`{DAbn}}}{BMdBJnA@b}}{{{f{CN`}}{f{{BD`{El}}}}}{{A`{{Mj{{BD`{El}}}}n}}}}{{{f{BAl}}G`}Jb}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}G`}{{Ch{c}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{BJd}}G`}Jb}{{{f{CJ`}}}d}{{{f{CAj}}}d}`{{BEne}BKf{{B@n{BBb}}ADd}{{If{{Bf{c}}}}}}{{{f{DAd}}{Gf{Ab}}{f{BDn}}}{{A`{{Hb{Ab{Gf{Ab}}C`}}n}}}}{{BEnBBbcBDn}BKf{{If{{Bf{BBb}}}}}}2{{BFlBFl{f{{Bf{Gn}}}}CBfKl{Ch{AMd}}}{{A`{{Gf{{A@n{Jd}}}}n}}}}{{CBl{f{{Bf{Gn}}}}CBfKl{f{{Ch{Dd}}}}ddCBj}{{Hb{{Gf{{A@n{Jd}}}}{Gf{Gn}}{Gf{Gn}}}}}}{{{f{BH`}}dd}{{A`{C`n}}}}{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}{{BBbc}BBb{{B@n{BBb}}}}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{D@lA@b}BKj}21`{{{f{BJd}}}d}{{{f{BDn}}{f{Dfc}}}bADj}{{{f{BF`}}{f{Dfc}}}bADj}{{{f{BFl}}{f{Dfc}}}bADj}{{{f{CBf}}{f{Dfc}}}bADj}{{{f{CBh}}{f{Dfc}}}bADj}{{{f{CBj}}{f{Dfc}}}bADj}{{{f{CBn}}{f{Dfc}}}bADj}{{{f{CC`}}{f{Dfc}}}bADj}{{{f{CCb}}{f{Dfc}}}bADj}{{{f{CCd}}{f{Dfc}}}bADj}{{{f{CCf}}{f{Dfc}}}bADj}{{{f{BJ`}}{f{Dfc}}}bADj}{{{f{CCh}}{f{Dfc}}}bADj}{{{f{CCj}}{f{Dfc}}}bADj}{{{f{CCl}}{f{Dfc}}}bADj}{{{f{CCn}}{f{Dfc}}}bADj}{{{f{CD`}}{f{Dfc}}}bADj}{{{f{CDb}}{f{Dfc}}}bADj}{{{f{CDd}}{f{Dfc}}}bADj}{{{f{CDf}}{f{Dfc}}}bADj}{{{f{CDh}}{f{Dfc}}}bADj}{{{f{CDj}}{f{Dfc}}}bADj}{{{f{CDl}}{f{Dfc}}}bADj}{{{f{CDn}}{f{Dfc}}}bADj}{{{f{CE`}}{f{Dfc}}}bADj}{{{f{CEb}}{f{Dfc}}}bADj}{{{f{CEd}}{f{Dfc}}}bADj}{{{f{CEf}}{f{Dfc}}}bADj}{{{f{CEh}}{f{Dfc}}}bADj}{{{f{CEj}}{f{Dfc}}}bADj}{{{f{CEl}}{f{Dfc}}}bADj}{{{f{CEn}}{f{Dfc}}}bADj}{{{f{CF`}}{f{Dfc}}}bADj}{{{f{CFb}}{f{Dfc}}}bADj}{{{f{CFd}}{f{Dfc}}}bADj}{{{f{BNd}}{f{Dfc}}}bADj}{{{f{BBb}}{f{Dfc}}}bADj}{{{f{CG`}}{f{Dfc}}}bADj}{{{f{C@f}}{f{Dfc}}}bADj}{{{f{CGb}}{f{Dfc}}}bADj}{{{f{CGd}}{f{Dfc}}}bADj}{{{f{CGf}}{f{Dfc}}}bADj}{{{f{CGh}}{f{Dfc}}}bADj}{{{f{CGj}}{f{Dfc}}}bADj}{{{f{CGl}}{f{Dfc}}}bADj}{{{f{BLh}}{f{Dfc}}}bADj}{{{f{CGn}}{f{Dfc}}}bADj}{{{f{CHd}}{f{Dfc}}}bADj}{{{f{CHf}}{f{Dfc}}}bADj}{{{f{CHh}}{f{Dfc}}}bADj}{{{f{CHj}}{f{Dfc}}}bADj}{{{f{CHl}}{f{Dfc}}}bADj}{{{f{CHn}}{f{Dfc}}}bADj}{{{f{CI`}}{f{Dfc}}}bADj}{{{f{BKb}}{f{Dfc}}}bADj}{{{f{CId}}{f{Dfc}}}bADj}{{{f{{Mj{ce}}}}{f{Dfg}}}b{DAfA@b}BKjADj}{{{f{CIf}}{f{Dfc}}}bADj}{{{f{CIh}}{f{Dfc}}}bADj}{{{f{BFf}}{f{Dfc}}}bADj}{{{f{BAb}}{f{Dfc}}}bADj}{{{f{Ol}}{f{Dfc}}}bADj}{{{f{CIn}}{f{Dfc}}}bADj}{{{f{DAh}}{f{Ab}}CDbd}{{A`{{Hb{{Hb{{Gf{Jd}}{Gf{Jd}}}}d}}n}}}}{{{f{DAh}}{f{Ab}}CDbd}{{A`{{Hb{{ALj{Jd}}{ALj{Jd}}}}n}}}}{{BKf{Ch{G`}}}BEn}{{BLnBBb}BBb}{{BBb{Ch{G`}}}BBb}{{{f{BNl}}}{{A`{{l{An}}n}}}}{{{f{BNl}}}{{l{An}}}}``{{{f{{Bf{{f{{l{An}}}}}}}}{f{Bl}}d}{{A`{{l{An}}n}}}}{{{f{DAj}}}{{l{N`}}}}{{{f{CKb}}}{{l{N`}}}}{{{f{CAf}}}{{A`{{l{N`}}n}}}}`{{{f{CKd}}}{{l{Kj}}}}`{{BKlCCn}BKl}`{{{f{AAl}}}Jd}`{{{f{{Bf{Ab}}}}Kl}{{A`{Abn}}}}{{{f{{Kh{KnKj}}}}{f{{l{An}}}}CIn{Gb{Gn}{{Ad{AMb}}}}{Gb{AMb}{{Ad{Gn}}}}{f{AMd}}{f{AMd}}}{{A`{{l{Kj}}n}}}}{{{f{{Kh{KnKj}}}}{Ch{{f{Bl}}}}{Gb{Gn}{{Ad{AMb}}}}{Gb{AMb}{{Ad{Gn}}}}{f{AMd}}{f{AMd}}}{{A`{{l{Kj}}n}}}}{BBbBBb}{{{f{AMb}}}d}{{{BO`{c}}d}{{BO`{c}}}BOd}````0`{{}b}{cb{ADdBKj}}``{cBBb{{If{{Bf{Gn}}}}}}``{{{f{{Bf{Jd}}}}}{{`{{D`{}{{Cj{G`}}}}}}}}{{{f{DAb}}Bd{Ch{G`}}d{Ch{{f{{BD`{El}}}}}}G`G`{Ch{{f{CCd}}}}{Ch{Bd}}Bd{Ch{{f{CCf}}}}dd{f{Df{Ch{G`}}}}d}{{A`{{Hb{{BD`{El}}G`G`}}n}}}}{{{CMn{c}}{Ch{{DAl{G`}}}}}{{CMn{c}}}BJn}{{{CJj{c}}{Ch{{DAl{G`}}}}}{{CJj{c}}}BJn}``{{}G`}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfAC`}}}{{Cn{Cl}}}}{{BEnBEncc}BEn{{B@n{BBb}}}}{{{f{D@h}}{f{AAj}}ei}{{A`{AAjn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}{{B@n{Dd}}}{{Hn{}{{Cj{g}}}}}}{{{f{DfA@d}}}{{f{DfJn}}}}`{{{f{DfBKh}}BKh}b}{{BBbBBbGnEl}BBb}{{BBbBBbBBb}BBb}``{{{f{Ab}}CE`}Ab}{{BBbCE`}BBb}`{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{BBbBBb}BBb}{{BKhBKh}BKh}{{{f{BKh}}BKh}d}{{}c{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BFh{{Hb{{Gf{BAb}}{Gf{{Cn{Cl}}}}{Ch{Ib}}}}}}{{{ALn{c}}}c{}}{{{Mj{ce}}}{{Ch{c}}}{}BKj}33{{{f{BBb}}}}{BKh}{{{f{BFh}}}}{DAnBLn}{BLnBLn}{{{Mj{ce}}}{}A@bBKj}{{{Mj{ce}}}{{Hb{e}}}A@bBKj}{{CBnc}{{BJj{c}}}BJn}{{BAnEl}{{A`{Mdn}}}}{BDbAb}{{{Mj{BJd}}}Ab}{{MdDd}Ab}{BFd{{Gf{c}}}{}}{{}{{Gf{Dd}}}}{{{f{BKh}}}d}{{{f{C@f}}}d}{{{f{CCn}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CEb}{{A`{{l{Bb}}n}}}}{{BBbccCEb}BBb{{B@n{BBb}}}}{cd{{If{ANb}}}}4{{{f{BFl}}{Ch{{f{Bl}}}}}d}{{{f{CGn}}}d}7{{{f{BJd}}}d}{{{f{BOl}}}d}{BBbBBb}{{{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{AJ`}}}{{A`{{l{Bb}}n}}}}25{{{f{BFl}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{BBbc}BBb{{B@n{BBb}}}}54{{{f{AJb}}}{{A`{{l{Bb}}n}}}}6{{{f{CK`}}}{{l{Bb}}}}{{{f{CKb}}}{{l{Bb}}}}{{{f{CAf}}}{{A`{{l{Bb}}n}}}}9{{{f{Md}}}d}::{{{f{BJd}}}{{l{Bb}}}};;0{{{f{A@d}}}d}<2{{{f{AAl}}}d}`{{{f{Ab}}}d}{{{f{{Mj{AFh}}}}}d}{{{f{CId}}}d}{{}d}{{{f{CLh}}F`}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CDb}}{f{CCn}}}{{A`{bn}}}}6{{{f{BFl}}}d}{{{f{CK`}}}{{l{Kd}}}}{{{f{CKb}}}{{l{Kd}}}}{{{f{CAf}}}{{A`{{l{Kd}}n}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{AGj{cgAGh}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{BKh}}}{{AFd{BKh}}}}{{{f{BFh}}}{{AGj{{Gf{{Cn{CLl}}}}DB`AGh}}}}{{{f{COh}}}{{`{Lf}}}}{{{f{BKh}}}{{AFf{BKh}}}}{{{f{{DBd{}{{DBb{c}}}}}}}{{`{Lf}}}{AGfADdCKlCLj}}{{BLlBBbd}BBb}{{BEnBEnccBJ`}BEn{{If{{Bf{BBb}}}}}}{{BLnBBbd}BBb}{{{f{D@h}}{f{AAj}}eiBJ`}{{A`{AAjn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}{{B@n{Dd}}}{{Hn{}{{Cj{g}}}}}}{{{f{DBf}}{f{AAj}}{f{Bl}}{f{Bl}}eeCDl{Ch{Jb}}}{{A`{AAjn}}}{{If{Bl}}}{{Hn{}{{Cj{c}}}}}}{BEnBKl}{{{f{DBh}}{f{Bl}}d}{{A`{{l{An}}n}}}}{{{f{DBh}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{BKld}BKl}`{{BKl{Gf{BBb}}}BEn}{BJbBBb}{DBjBBb}{{{f{CIb}}}{{f{{Ch{{Gf{DBl}}}}}}}}``{{}BBb}{BEnBEn}{BLnBBb}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Ch{c}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{BBbBBb}{DBnBEn}4{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{D@lA@b}BKj}`{{BEnBEncc}BEn{{B@n{BBb}}}}{{{f{D@h}}{f{AAj}}ei}{{A`{AAjn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}{{B@n{Dd}}}{{Hn{}{{Cj{g}}}}}}{{BKlc}BKl{{If{{Bf{BBb}}}}}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}e{}{}{}}{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}<{{{f{BJd}}}G`};9{{{f{BFh}}}G`}{{BEnJd}BEn}{{{f{BJd}}G`}Ab}`{BBbBLn}{cBBbDC`}{DC`BBb}{BFlBBb}{DCbBBb}{CIdBBb}{MdBBb}{{BBbc}BBb{{B@n{BBb}}}}0``{{CAnd}CAn}{{{CJj{c}}d}{{CJj{c}}}BJn}```{BBbBBb}{{{f{DBh}}}{{l{Fb}}}}0{{{f{DBh}}{f{{Bf{Ab}}}}}{{A`{{l{Ah}}n}}}}{{{f{DBh}}GnCLb}{{A`{{l{Ah}}n}}}}{{{f{DBh}}Gnd}{{A`{Abn}}}}{{{f{DBh}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}4{{{f{DBh}}}{{A`{Abn}}}}{{{f{DBh}}}Ab}01{{{f{DBh}}}{{A`{{l{Fb}}n}}}}{{{f{DBh}}}{{l{Ah}}}}{{{f{DBh}}{f{Ab}}}{{A`{{l{Ah}}n}}}}{{{f{DBh}}GnG`}{{l{Ah}}}}{{{f{DBh}}F`}{{A`{{l{Ah}}n}}}}{{{f{DBh}}Bd}Ab}7{{{f{DBh}}}{{A`{{l{Ah}}n}}}}01{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}{{BBbc}BBb{{B@n{BBb}}}}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{D@lA@b}BKj}21``````{{{f{AMh}}{f{AMh}}}{{A`{{Hb{AMhAMh}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hb{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{Mj{ce}}}}}{{f{Dfc}}}{DCdA@b}{BKjADd}}{{BEncBKh{Ch{{Mj{CN`}}}}{Ch{{f{Bl}}}}}BEn{{Dn{AAj}{{Ad{{A`{AAjn}}}}}}IjIl}}{{DBjc}BBb{{Dn{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}IjIl}}{{BBbc{BLd{{Mj{BLb}}}}}BBb{{Dn{Ab}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIl}}{{BBbBBbc{BLd{{Mj{BLb}}}}}BBb{{Dn{AbAb}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIl}}{{BBb{f{Dfc}}{f{Df}}}{{A`{BBbn}}}{{Af{BBb{f{Df}}}{{Ad{{A`{BBbn}}}}}}}}{{{f{BM`}}{Ch{{f{Dd}}}}}{{A`{Ofn}}}}{{{f{BM`}}c}{{A`{Ofn}}}{{AAn{{f{El}}}{{Ad{El}}}}}}{c{{BLd{{Mj{BLb}}}}}{{Dn{{f{El}}}{{Ad{{A`{Eln}}}}}}IjIl}}{c{{BLd{{Mj{BLb}}}}}{{Dn{{f{{Bf{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}IjIl}}{{BBbc}BBb{{Af{BBb}{{Ad{BBb}}}}}}{c{{BLd{{Mj{BLb}}}}}{{Dn{{f{Of}}}{{Ad{{A`{Ofn}}}}}}IjIl}}{{DBj{Mj{Dn}}}BBb}{c{{BLd{{Mj{BLb}}}}}{{Dn{{f{{Bf{Of}}}}}{{Ad{{A`{Ofn}}}}}}IjIl}}:{{ce{BLd{{Mj{BLb}}}}}BBb{{Dn{{f{Df{Bf{Ab}}}}}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIl}{{If{{Bf{BBb}}}}}}{{BBbc{f{{Bf{BBb}}}}{BLd{{Mj{BLb}}}}}BBb{{Dn{{f{Df{Bf{Ab}}}}}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIl}}{{BBbBLh{f{{Bf{BBb}}}}d{Ch{DCf}}}BBb}2{{{f{BM`}}}{{A`{Ofn}}}}{{CBnc}CBn{{Dn{CC`}{{Ad{CC`}}}}}}1111{CIdCId}{{{Ch{{f{{Bf{G`}}}}}}{f{{BD`{BAb}}}}{Ch{{f{{Bf{Ab}}}}}}{Ch{{f{DCh}}}}}AAj}{{{Ch{{f{{Bf{Dd}}}}}}{f{{BD`{El}}}}{Ch{{f{{Bf{Ab}}}}}}d}{{Ch{{Gf{G`}}}}}}{{{f{Bl}}}BBb}{BLlBBb}{BEnBEn}{BLnBBb}{{{f{AHb}}}{{Ch{c}}}{}}{BBbBBb}{{{f{DCj}}}Md}{{{f{BJd}}}{{A`{Mdn}}}}```754{{{f{AHb}}}{{Ch{Aj}}}}3{{{f{BJd}}}{{Ch{Aj}}}}9876{{{f{AJd}}}{{Ch{c}}}{}}51{{{f{DCl}}}Md}4{{{CMh{c}}{Ch{CMb}}}{{CMh{c}}}BJn}{{{f{El}}{f{El}}}{{A`{Eln}}}}```{{{f{CKd}}}{{l{Kj}}}}`{{{f{CAf}}}{{A`{{l{Kd}}n}}}}1`?>=<;:{{{f{AHb}}}{{Ch{{Hb{cc}}}}}{}}```:9``{{{f{DAj}}}{{l{N`}}}}{{{f{CKb}}}{{l{N`}}}}{{{f{CAf}}}{{A`{{l{N`}}n}}}}`5```>{{{f{CK`}}}{{l{N`}}}}21`{{{f{BFl}}}Gn}{{{f{BFl}}}d}{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BFlGn}BFl}{{BBbBBb}}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BJd}}}G`}{{{f{CJ`}}}{{Ch{G`}}}}{{{f{CAj}}}{{Ch{G`}}}}{{{f{CAn}}}{{Ch{G`}}}}`````{{{BO`{c}}G`}{{BO`{c}}}BOd}`{BLlBBb}{BLnBBb}{{{f{AHl}}}{{A`{G`n}}}}{BBbBBb}{{{f{BJd}}}{{A`{G`n}}}}{{{f{BJd}}}{{f{Dd}}}}{BBbDBj}````33`{{{f{DAj}}}{{l{Kd}}}}{{{f{CKb}}}{{l{Kd}}}}{{{f{CAf}}}{{A`{{l{Kd}}n}}}}{{{f{CKd}}}{{l{Kj}}}}{{{f{BFl}}}Gn}`{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}d{CLjA@b}BKj}{{{f{CDb}}}d}{BFl}{BBb}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BFl}}}d}{{DCnG`}{{Ch{G`}}}}{{BBbc}BBb{{B@n{BBb}}}}0{{{f{BM`}}}{{A`{Ofn}}}}{{}c{}}{cCMdBMd}{cCMfBOd}2{{Ddc}DD`{}}{c{{ALn{c}}}{}}{BEnBKl}{c{{BJj{c}}}BJn}{cCAj{{If{ANb}}}}{cCAn{{If{ANb}}}}{c{{BO`{c}}}BOd}{{{f{{Bf{Of}}}}}BM`}{c{{CMh{c}}}BJn}{c{{BMb{c}}}BMd}{c{{CMj{c}}}BOd}{{}CKf}{c{{BOf{c}}}BOd}{GnBFl}{c{{CMl{c}}}BOd}{c{{CMn{c}}}BJn}{{BFlBFlBFl}CBl}{c{{CJj{c}}}BJn}{{DDb{Mj{CIb}}{Mj{{BD`{BAb}}}}{Hb{G`G`}}{Ch{{Gf{G`}}}}{Ch{{Mj{BJl}}}}{Ch{DCh}}G`d{Ch{{Gf{Ab}}}}{Ch{{Hb{Dd{Mj{Bl}}}}}}CEh}{{A`{BOln}}}}{c{{BOj{c}}}BJn}{c{{BOn{c}}}{BOdBOd}}{CCnBJ`}{c{{BLd{c}}}{}}{{BBbBBbBBb}CH`}{{}CHb}{BBbBKb}{{Dd{Gf{Of}}{BLd{{Mj{BLb}}}}c}C@jBMf}{c{{Mj{c}}}{}}{{AGb{Gf{{Cn{Cl}}}}{Ch{Ib}}}BFh}{{ElJb}Md}{{DdAGbd}BAb}{e{{Mj{c}}}{}{{AAn{{f{{CLd{c}}}}}{{Ad{c}}}}}}{AGbBFh}{{{f{AJf}}G`G`}{{l{c}}}Dl}{{{f{BJd}}G`G`}Ab}{{{f{Bl}}}CCd}{{ce}{{Mj{ce}}}{}BKj}{{GnDd}{{A`{Abn}}}}{DdCCd}{{AGbG`}BFh}{{{Mj{{Bf{CMb}}}}}CAj}{{{Mj{{Bf{CMb}}}}}CAn}{BdCCd}{{}{{Mj{{BNj{c}}}}}{}}{c{{Mj{{BNj{e}}c}}}BKj{}}{G`{{Mj{{Bf{{BNj{c}}}}}}}{}}{{G`c}{{Mj{{Bf{{BNj{e}}}}c}}}BKj{}}{DDdCAj}{DDdCAn}5432{{{f{DfDDf}}}Ch}{{{f{DfDA`}}}Ch}{{{f{BKn}}DDh}{{A`{{Ch{AAj}}n}}}}{{{f{DfC@b}}G`}{{A`{{Ch{{Gf{AAj}}}}n}}}}{{{f{DfBNn}}G`}{{A`{{Ch{{Gf{AAj}}}}n}}}}{{{f{DfBOl}}G`}{{A`{{Ch{{Gf{AAj}}}}n}}}}{{{f{BBb}}{f{Df{BGb{{f{BBb}}}}}}}b}{{BBb{f{Df{BGb{BBb}}}}}b}{BBbBBb}0{BKhBKh}{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}0{GnBBb}`{{}AAl}{{}A@d}`{{{f{BJd}}}G`}{BEnBEn}7`````{{{f{Df{BOj{c}}}}}{{A`{G`n}}}BJn}````{{{f{AId}}}{{A`{{H`{Gn}}n}}}}{{BKlc}BKl{{If{{Bf{BBb}}}}}}``{{BEn{f{Df{BIj{BIh}}}}{f{Df{BIj{BIl}}}}}{{A`{BIfn}}}}`{{BBbc}BBb{{B@n{BBb}}}}{{{f{CK`}}}{{l{Nn}}}}{{{f{CKb}}}{{l{Nn}}}}{{{f{CAf}}}{{A`{{l{Nn}}n}}}}{{{f{CAf}}}{{A`{{l{Kd}}n}}}}{{CFjc}BBb{{B@n{BBb}}}}{{CFnc}BBb{{B@n{BBb}}}}`{{BBbe}BBb{{B@n{BBb}}ADd}{{If{{Bf{c}}}}}}{{BBbe{Ch{{Hb{eF`}}}}CHl}BBb{{B@n{BBb}}ADd}{{If{{Bf{c}}}}}}{{{f{Df{BD`{El}}}}{f{{BD`{El}}}}}{{A`{bn}}}}```{{{f{Bl}}}BFl}{{Dd{f{{Bf{{f{Bl}}}}}}{f{Bl}}}{{Kh{KfKd}}}}{{Dd{f{{Bf{{f{Bl}}}}}}{f{Bl}}}{{Kh{LhKj}}}}{{Dd{f{{Bf{{f{Bl}}}}}}{f{Bl}}Kl}{{Kh{KnKj}}}}``{{{f{BFl}}{f{BFl}}}{{Ch{B@d}}}}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}{{Ch{B@d}}}{D@lA@b}BKj}```{{}BBb}{c{{DDj{{Mj{c}}}}}{}}{{ce}{{DDj{{Mj{ce}}}}}{}BKj}````{{BBbc}BBb{{B@n{BBb}}}}`{{DBj{f{Bl}}}BBb}0{{{f{AAj}}{f{AAj}}d}{{A`{{Hb{{AAf{{Gf{Jd}}{Gf{A@d}}}}{AAf{{Gf{AAl}}{Gf{A@d}}}}}}n}}}}`{{{f{DCj}}}Md}{BBbBBb}{BEn{{A`{{Hb{AAjAAj}}n}}}}`{{{f{BFh}}}BFh}{{{f{{Mj{c}}}}{f{DfDDl}}}b{ALfA@b}}{{{f{{Mj{ce}}}}{f{{Mj{ce}}}}}dA@bBKj}{{{f{Bl}}BBbOl}BBb}{{BEnBBbOl}BEn}{{{f{AJd}}AjOl}{{A`{{Ch{c}}n}}}{}}{{BBbBBbOl}BBb}{{{f{DCl}}AjOl}{{A`{Mdn}}}}{{{f{BJd}}AjOl}{{A`{Mdn}}}}{{{f{CK`}}}{{l{N`}}}}{{{f{CKb}}}{{l{N`}}}}{{{f{CAf}}}{{A`{{l{N`}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BCh}}}CM`{}}````{{{f{DDn}}CEj{Ch{Jn}}}Ab}{{BBbCEj{Ch{Jn}}}BBb}{{{f{Df{Mj{AFh}}}}{f{Df{Bf{Bd}}}}}{{A`{G`BCh}}}}{{{f{Df{Mj{AFh}}}}DE`}{{A`{bBCh}}}}{{{BOj{c}}CEh}{{BOj{c}}}BJn}{{{f{Df{Mj{AFh}}}}{f{Df{Gf{Bd}}}}}{{A`{G`BCh}}}}{{{f{Df{Mj{AFh}}}}{f{DfEj}}}{{A`{G`BCh}}}}{{{f{Df}}}{{A`{cBCh}}}DEb}{{{f{Df{Mj{AFh}}}}{f{Df{Bf{DEd}}}}}{{A`{G`BCh}}}}{{{f{CJ`}}}d}{{{f{BJd}}}Ab}{{{f{CAj}}}d}{{{f{CAn}}}d}````{{ce}BBb{{Dn{AbAb}{{Ad{{A`{{Ch{Ab}}n}}}}}}IjIlADd}{{If{{Bf{BBb}}}}}}{{{f{AJh}}}Ab}0{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBbBBb}}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBKh}}BKh}b}{{{f{{Bf{Bd}}}}}{{A`{{f{{Bf{Bd}}}}n}}}}{{{f{DfBJd}}Dd}b}{{BEnei}BEn{{If{Bl}}}{{Hn{}{{Cj{c}}}}}{{If{Bl}}}{{Hn{}{{Cj{g}}}}}}{{BJbe}BBb{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}}{{cBBb}BBb{{B@n{BBb}}}}{{{f{Ab}}{f{{l{Fb}}}}}{{A`{{l{Ah}}n}}}}{{BBbc}BBb{{B@n{BBb}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BNl}}{f{Bl}}{f{Bl}}}{{A`{{l{An}}n}}}}{{BBbcc}BBb{{B@n{BBb}}}}1{{{f{BM`}}{Ch{El}}}{{A`{Ofn}}}}{{{f{BNl}}{f{Bl}}{f{Bl}}G`}{{A`{{l{An}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{BBbcc{Ch{c}}{Ch{El}}}BBb{{B@n{BBb}}}}{{{f{{Kh{KnKj}}}}{Ch{{f{Bl}}}}{f{{l{An}}}}CIn}{{A`{{Kh{KnKj}}n}}}}{{BBb{f{{Bf{Gn}}}}CHn}BBb}{{{f{ANb}}}CMb}`{{{f{AJj}}}AJj}{{{f{BJd}}}Ab}{BLlBBb}{BEnBEn}{BLnBBb}{BBbBBb}`{{BKlc}BKl{{If{{Bf{BBb}}}}}}{{{f{DAd}}{Gf{Ab}}{f{BF`}}}{{A`{{Hb{Ab{Gf{Ab}}C`}}n}}}}{{BEnBBbcBF`}BKf{{If{{Bf{BBb}}}}}}{{BBbBF`}BBb}{{{f{AJl}}{f{Dn}}On}{{A`{Abn}}}}{{BBb{Mj{Dn}}{BLd{{Mj{BLb}}}}On}BBb}{{{f{BJd}}{f{Dn}}On}{{A`{Abn}}}}{{BBbG`c}BBb{{Af{{f{Df{l{Eh}}}}}{{Ad{{Ch{Aj}}}}}}IjIlE`}}{{{f{DEf}}On}{{A`{Abn}}}}{{BBbOn}BBb}{{{f{DEf}}{f{Ab}}CBb}{{A`{Abn}}}}{{BBbBBbCBb}BBb}32102032103{{BBbOlAjOn}BBb}2{{BBbBBbOlAjCBb}BBb}543254325432{{{f{DEh}}{f{{l{An}}}}{Ch{{f{AMd}}}}}{{A`{DEhn}}}}{{{f{CAd}}Jd}{{A`{Abn}}}}{{BBbJd}BBb}{{{f{CBl}}Gn{Ch{{f{AMd}}}}}{{A`{Gnn}}}}0{{{f{CAd}}Nh}{{A`{Abn}}}}{{BBbNh}BBb}2``{{{f{CJ`}}}{{Ch{{f{DCh}}}}}}{{{f{CAj}}}{{Ch{{f{DCh}}}}}}{{{f{CAn}}}{{Ch{{f{DCh}}}}}}``````{{{f{DBh}}{l{Ah}}}{{l{Ah}}}}{{}{{BLd{{Mj{BLb}}}}}}{{BBbBBbdd{Ch{Jn}}}BBb}0`{{{f{BKn}}DDh}{{A`{AAjn}}}}{{cCAl}{{A`{BEnn}}}{{If{ANb}}}}{{{Mj{{Bf{CMb}}}}CAl}{{A`{BEnn}}}}{{DDdCAl}{{A`{BEnn}}}}{{cCB`}{{A`{BEnn}}}{{If{ANb}}}}{{{Mj{{Bf{CMb}}}}CB`}{{A`{BEnn}}}}{{DDdCB`}{{A`{BEnn}}}}{{DEj{f{{Bf{Jd}}}}e}{{A`{Abn}}}E`{{Hn{}{{Cj{{Ch{c}}}}}}}}{{{f{AJn}}c{Ch{e}}}{{A`{AJnn}}}{{Hn{}{{Cj{Jd}}}}}{}}{{{f{AJn}}ci}{{A`{AJnn}}}{{Hn{}{{Cj{Jd}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{CMh{c}}}}}{{A`{{Mj{{BD`{BAb}}}}n}}}BJn}{{{f{Df{BMb{c}}}}}{{A`{{BD`{El}}n}}}BMd}{{{f{BOl}}}{{f{{Mj{{BD`{BAb}}}}}}}}{{{f{Df{BOj{c}}}}}{{A`{{Mj{{BD`{BAb}}}}n}}}BJn}{{{f{BKn}}{Ch{G`}}}{{A`{{Mj{{BD`{El}}}}n}}}}{{{f{CIb}}}{{f{DEl}}}}`````{{}BKh}`{{{f{DfBEn}}{f{Df{BIj{BIh}}}}{f{Df{BIj{BIl}}}}}{{A`{{Mj{{BD`{El}}}}n}}}}`{{{f{DAj}}}{{l{N`}}}}{{{f{CKb}}}{{l{N`}}}}{{{f{CAf}}}{{A`{{l{N`}}n}}}}`{{{f{CKd}}}{{l{Kj}}}}`{{{f{Df{Mj{AFh}}}}DEn}{{A`{JnBCh}}}}{{BEnc}BEn{{If{{Bf{BBb}}}}}}0````{{{f{AJn}}{f{{l{Bb}}}}{Ch{c}}}{{A`{AJnn}}}{}}{{{f{DfBKh}}BKhd}b}{{{f{BEn}}{BIj{BIh}}{BIj{BIl}}}b}{{{BOj{c}}d}{{BOj{c}}}BJn}{{{BOn{c}}d}{{BOn{c}}}BOd}{{{CMh{c}}d}{{CMh{c}}}BJn}{{{BMb{c}}d}{{BMb{c}}}BMd}{{{CMn{c}}d}{{CMn{c}}}BJn}4{{CMdd}CMd}{{BBbLl}BBb}{{{f{DfBFh}}{Ch{Ib}}}b}{{{f{AK`}}Gn}{{l{c}}}Dl}{{{f{BJd}}Gn}Ab}{{BLlBBb}BBb}{{BEnc}BEn{{B@n{BBb}}}}{{BLnBBb}BBb}{{BBbBBb}BBb}{{{f{AKb}}Gnc}{{l{e}}}{}Dl}{{BEnce}BEn{{B@n{BBb}}}{{B@n{BBb}}}}{{BBbce}BBb{{B@n{BBb}}}{{B@n{BBb}}}}{{{f{BJ`}}}d}{BBbBBb}{{{f{DfACb}}}b}{{{f{DfBJd}}}b}{{BBb{Ch{Jn}}}BBb}{{BEncCCh}{{A`{bn}}}{{If{ANb}}}}{{BEncCDf}{{A`{bn}}}{{If{ANb}}}}{{BEncCDn}{{A`{bn}}}{{If{ANb}}}}{{BEncCEl}{{A`{bn}}}{{If{ANb}}}}{{{f{CJh}}}{{l{Fb}}}}````{{{f{BJd}}GnG`}Ab}{{BEnGnJd}BEn}{{BLnBBbBBb}BBb}={{{f{DfBFh}}G`G`}b}0`{{{f{AKd}}G`G`}AKd}{{fG`G`}c{}}1022{{BFhG`G`}BFh}0`{{{f{AHj}}d}{{l{c}}}Dl}{{BLlF`}BBb}{{BEncFf}BEn{{BFd{Dd}}}}{{BLnF`}BBb}{{BBbF`}BBb}{{BBbeFf}BBb{{B@n{BBb}}ADd}{{If{{Bf{c}}}}}}{{BEncFf}BEn{{If{{Bf{BBb}}}}}}{{{f{AHj}}F`}{{l{c}}}Dl}{{{f{BJd}}F`}{{A`{Abn}}}}{{{f{{Mj{c}}}}}{{Ch{{f{ALf}}}}}{ALfA@b}}{{{f{CJ`}}}{{f{DDd}}}}{{{f{CAj}}}{{f{DDd}}}}{{{f{CAn}}}{{f{DDd}}}}{{{f{BNl}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{BJd}}Gn}{{Hb{AbAb}}}}{{{f{BFh}}G`}{{Hb{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{BNl}}{f{{l{An}}}}G`}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Dn{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}4{{{f{{l{An}}}}{f{{l{An}}}}G`ed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Dn{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{BBbBBb}`{{{f{CJh}}{f{{Bf{Bd}}}}}{{l{Bb}}}}{{{f{CJh}}{f{{l{B`}}}}}{{l{Bb}}}}`{{BLlBd}BBb}{{BEnBd}BEn}{{BLnBd}BBb}{{{f{AKf}}Bd}{{Ch{Aj}}}}{{BBbBd}BBb}{{{f{BJd}}Bd}{{Ch{Aj}}}}{{{f{DF`}}Bd}Md}{{{f{BJd}}Bd}{{A`{Mdn}}}}{{JdJd}A@d}{BBbDFb}{{{f{BNl}}{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{Bl}}d}{{l{An}}}}{{{f{BNl}}}{{l{Fb}}}}0{{{f{BNl}}}{{l{An}}}}{{{f{BNl}}{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}4`{{{f{CAf}}{f{Bl}}}{{A`{Abn}}}}`{{BBbEl}BBb}`{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}707070{{{f{BNl}}{f{{l{An}}}}}{{l{An}}}}10{{{f{{Mj{ce}}}}}G`A@bBKj}{BBbBJb}{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBbBBb}}{{BKbBKb}}{{BKhBKh}BKh}{{{f{DfBKh}}BKh}b}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}{{BKlc}BKl{{B@n{Dd}}}}{{DBj{f{Bl}}}BBb}{{{f{BJ`}}}{{f{Dd}}}}`1{{{f{Bl}}}BBb}{BLlBBb}{BEnBEn}{BLnBBb}{{{f{AHb}}}{{Ch{c}}}{}}{BBbBBb}{{{f{DCj}}}Md}{{{f{BJd}}}{{A`{Mdn}}}}{{}{{BLd{{Mj{BLb}}}}}}{C@fC@f}?{{{f{Df}}g}{{A`{eBCh}}}{}{}{{AAn{{f{Dfc}}}{{Ad{e}}}}}}{{BEnJd}BEn}{{BKf{Ch{G`}}}BEn}{{BLnBBb}BBb}{{BBb{Ch{G`}}}BBb}{{{f{AKh}}{f{c}}}{{A`{AKhn}}}A@b}{{{f{BJd}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{DFd}}{f{{Bf{A@d}}}}Ll}DFd}{{{f{DFd}}{f{{Bf{A@d}}}}}DFd}{{{f{BJd}}{f{{Bf{Jd}}}}}{{A`{Abn}}}}{{{f{BJd}}{f{{Bf{Jd}}}}}Ab}{{{f{AKj}}{f{c}}}AKjA@b}{{{f{BJd}}{f{{l{Fb}}}}}Ab}{{{f{DfBFh}}}{{Ch{Ib}}}}{{BBbBBbBBb}BBb}{{CFhc}CFj{{B@n{BBb}}}}{{CFlc}CFn{{B@n{BBb}}}}`{{BBbBBbBFlCBf}BBb}```{{{f{CAf}}Kl}{{A`{{l{Kj}}n}}}}{BEn{{A`{DFfn}}}}{CFf{{A`{DFfn}}}}1{{{f{CId}}}{{Ch{Jb}}}}{{BLnG`}BBb}{{{f{COh}}AOn}{{BD`{BAb}}}}{{{f{BFh}}}{{Cn{Cl}}}}{{{f{AKl}}}{{Gf{{f{{Bf{Bd}}}}}}}}{{{f{BEn}}d}{{A`{Ejn}}}}{{{f{DFh}}{Ch{{f{Bl}}}}d}{{A`{AAjn}}}}{{{f{BJh}}{Ch{{f{Bl}}}}d}{{A`{AAjn}}}}{{{f{BBb}}{f{{BD`{El}}}}D@n}{{A`{Ofn}}}}{{{f{BNl}}{f{{l{Fb}}}}d}{{A`{{l{Kj}}n}}}}{BLlBBb}{{{f{BNl}}}{{l{An}}}}{DBjBBb}{{{f{AAl}}}{{Ch{Jd}}}}{fc{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBbBBb}{{{f{BM`}}}{{A`{Ofn}}}}{{{f{CAf}}{f{Bl}}}{{A`{Abn}}}}{fEj}000000000000{{{f{DfCOh}}{f{{BD`{El}}}}}{{A`{dn}}}}`887{{{f{CDf}}c}{{BOf{c}}}BOd}{{{f{CEl}}c}{{BOn{c}}}BOd}{{{f{DfBKh}}BKh}b}``{{BEnJdcFf}BEn{{If{{Bf{BBb}}}}}}{{{f{BFh}}{f{BFh}}}Ib}{{{f{BFh}}f}Ib}10{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}g{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}g{}{}{}}{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}g{}{}{}}{{{f{DFj}}{Ch{{f{AMd}}}}{f{{l{An}}}}}{{A`{DFjn}}}}{{{f{BFl}}Gn{Ch{{f{AMd}}}}ceg}{{A`{Gnn}}}{{Dn{Gn}{{Ad{Gn}}}}}{{Dn{Gn}{{Ad{AMb}}}}}{{Dn{AMb}{{Ad{Gn}}}}}}{{{f{BFl}}Gn{Ch{{f{AMd}}}}}{{A`{Gnn}}}}{{{f{CBl}}Gn{Ch{{f{AMd}}}}}{{A`{Gnn}}}}10`10{g{{A`{AMle}}}{}{}{{Hn{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BFhc}}}{}{{Hn{}{{Cj{{A`{bc}}}}}}}}{e{{A`{BFhc}}}{}{{Hn{}{{Cj{{A`{{Ch{b}}c}}}}}}}}2{{AGbg}{{A`{AMne}}}{}{}{{Hn{}{{Cj{{A`{ce}}}}}}}}0{{AGbe}{{A`{BFhc}}}{}{{Hn{}{{Cj{{A`{bc}}}}}}}}{{AGbe}{{A`{BFhc}}}{}{{Hn{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{B@f{{A`{eg}}}{}{{AMl{c}}ALb}{}}0{{B@fAGb}{{A`{eg}}}{}{{AMn{c}}ALb}{}}0{{ADlDd}{{A`{{l{c}}e}}}Dl{}}{{ADn{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{ADnDdEl}{{A`{{l{c}}e}}}Dl{}}0{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Jb{{A`{CIdn}}}}{{{Mj{{Bf{c}}e}}}{{A`{{Mj{{A@n{c}}e}}}}}{}BKj}2222222222222{DFl{{A`{CIbBCl}}}}{{{f{COh}}{f{Bl}}}{{A`{Ofn}}}}{{}{{A`{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CBn{Ch{CMb}}}{{A`{{BJj{AFh}}n}}}}{{{f{BM`}}c}{{A`{Ofn}}}{{AAn{{f{El}}}{{Ad{{A`{Eln}}}}}}}}{{{f{BM`}}c}{{A`{Ofn}}}{{AAn{{f{{Bf{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}}}{{BBbc}{{A`{BBbn}}}{{Af{BBb}{{Ad{{A`{BBbn}}}}}}}}{{{f{BM`}}c}{{A`{Ofn}}}{{AAn{{f{Of}}}{{Ad{{A`{Ofn}}}}}}}}{{DCnG`}{{A`{G`n}}}}{Bd{{A`{CF`n}}}}{Jd{{A`{CFbn}}}}{Nh{{A`{CFdn}}}}{c{{A`{{Mj{c}}DFn}}}{}}{{AGb{Gf{{Cn{Cl}}}}{Ch{Ib}}}{{A`{BFhn}}}}{{ce}{{A`{{Mj{ce}}DFn}}}{}BKj}{{}{{A`{{Mj{{BNj{c}}}}DFn}}}{}}{c{{A`{{Mj{{BNj{e}}c}}DFn}}}BKj{}}10`{c{{A`{{DDj{{Mj{c}}}}DFn}}}{}}{{ce}{{A`{{DDj{{Mj{ce}}}}DFn}}}{}BKj}{{{f{BMf}}{f{Df{Gf{Bd}}}}}{{A`{bn}}}}{{{f{C@h}}{f{Df{Gf{Bd}}}}}{{A`{bn}}}}{{{f{BLb}}{f{Df{Gf{Bd}}}}}{{A`{bn}}}}{f{{A`{GhBBh}}}}000000000000{{{Mj{ce}}}{{A`{c{Mj{ce}}}}}{}BKj}{fAAh}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bl}}}}`{{BKhBKh}BKh}{{{f{AHl}}}{{A`{AHln}}}}{BLlBBb}{{BEn{Ch{{Gf{Ej}}}}BDf}BEn}{BLnBBb}{BBbBBb}{{{f{BJd}}}{{A`{Abn}}}}{{BEn{Ch{e}}BDf}BEn{{B@n{BKb}}ADd}{{If{{Bf{c}}}}}}5{{BEn{Ch{{Gf{Dd}}}}BDf}BEn}431{{BEne}BEn{{B@n{BKb}}ADd}{{If{{Bf{c}}}}}}{{{Mj{{AFn{c}}}}}{{A`{cb}}}Ij}{{{Mj{ce}}}cADdBKj}{{{f{DfMd}}Jb}b}{{{f{DfCBn}}{f{DG`}}}b}8{{{f{DGb}}c{f{Bl}}BFl}{{A`{AAjn}}}{{BFd{Dd}}}}0{{{BOj{c}}d}{{BOj{c}}}BJn}```{{BKlCDb}BKl}`{{{f{BFh}}}{{Ch{{f{Ib}}}}}}0{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}G`}cADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{Md}}}{{f{Jb}}}}{{{f{CLh}}ddDdd}{{A`{AAjn}}}}{{BBbdd{f{Bl}}d}BBb}``3{{{f{BFh}}}{{f{{Bf{{Cn{Cl}}}}}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}gADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{BFh}}}DB`}{{BLlBd}BBb}{{BEnBd}BEn}{{BLnBd}BBb}{{{f{AKf}}Bd}{{Ch{Aj}}}}{{BBbBd}BBb}{{{f{BJd}}Bd}{{Ch{Aj}}}}{{{f{DF`}}Bd}Md}{{{f{BJd}}Bd}{{A`{Mdn}}}}``{{{f{DGd}}A@h{f{Df{Gf{Jn}}}}}{{A`{bn}}}}{{{f{DGd}}A@h{f{Df{Bf{Jn}}}}}{{A`{bn}}}}`{{{f{{Mj{{AFn{c}}}}}}g}{{A`{eb}}}Ij{}{{AAn{{f{c}}}{{Ad{e}}}}}}{{}c{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mj{ce}}}}}G`A@bBKj}{{{f{CK`}}}{{l{N`}}}}{{{f{CKb}}}{{l{N`}}}}{{{f{CAf}}}{{A`{{l{N`}}n}}}}10{{{f{CBj}}}{{Ch{Jd}}}}{{{f{BFl}}}Gn}`{{{f{BFl}}}d}`{cCFh{{B@n{BBb}}}}{{CFjc}CFl{{B@n{BBb}}}}{{CFnc}CFl{{B@n{BBb}}}}```{{BKlBEn}BKl}{{CH`BBb}CH`}{{CAn{Ch{{DAl{G`}}}}}CAn}{{{BO`{c}}{DAl{G`}}}{{BO`{c}}}BOd}{{{CMn{c}}{DAl{G`}}}{{CMn{c}}}BJn}{{CAjd}CAj}{G`c{}}0{{{CJj{c}}{Ch{{DAl{G`}}}}}{{CJj{c}}}BJn}{{CBnG`}CBn}{{CAj{Ch{CJb}}}CAj}{{CAn{Ch{CJb}}}CAn}{{BEnd}BEn}{{BJ`CCj}BJ`}{{BEnBBb}BEn}{{BEnc}BEn{{If{{Bf{BBb}}}}}}{{{CMh{c}}{Ch{{Gf{Ej}}}}}{{CMh{c}}}BJn}{{{BMb{c}}{Ch{{Gf{Ej}}}}}{{BMb{c}}}BMd}{{{BOj{c}}{Ch{{Gf{Ej}}}}}{{BOj{c}}}BJn}{{CBn{Ch{{Mj{{Bf{Dd}}}}}}}CBn}`4{{CAj{Ch{Dd}}}CAj}{{CC`{Ch{c}}}CC`{{B@n{CCd}}}}{{{CMj{c}}AOn}{{CMj{c}}}{}}{{{BOf{c}}AOn}{{BOf{c}}}BOd}{{{CMj{c}}{Ch{CDj}}}{{CMj{c}}}{}}{{CKf{Ch{CDj}}}CKf}{{{BOf{c}}{Ch{CDj}}}{{BOf{c}}}BOd}{{{BOn{c}}CEn}{{BOn{c}}}BOd}{{BEnc}BEn{{If{{Bf{BEn}}}}}}{{{BOn{c}}{Ch{G`}}}{{BOn{c}}}BOd}{{{BO`{c}}{Ch{Ej}}}{{BO`{c}}}BOd}0{{CH`BBb}CH`}{{CHbBBb}CHb}{{CAjd}CAj}{{CC`d}CC`}{{{f{BM`}}El}{{A`{Ofn}}}}{{CAj{Ch{{Mj{{BD`{El}}}}}}}CAj}{{CBn{Ch{{Mj{{Gf{El}}}}}}}CBn}{{CAjCCb}CAj}{{CC`CCb}CC`}{{CAjBd}CAj}{{CC`Bd}CC`}{{CKfCMb}CKf}{{BJb{Gf{BBb}}}{{A`{BBbn}}}}{{{BO`{c}}{Ch{G`}}}{{BO`{c}}}BOd}{{{BO`{c}}{Ch{d}}}{{BO`{c}}}BOd}{{CHbBBbBBbBBb}CHb}=={{CBnd}CBn}{{{CMh{c}}{Ch{{Gf{Ab}}}}}{{CMh{c}}}BJn}{{{BOj{c}}{Ch{{Gf{Ab}}}}}{{BOj{c}}}BJn}{{CH`BBbBBbBBb}CH`}4{{CH`BBb}CH`}{{CHbBBb}CHb}{{CAjd}CAj}{{CAnd}CAn}{{{CMn{c}}d}{{CMn{c}}}BJn}{{{CJj{c}}d}{{CJj{c}}}BJn}9{{{CMh{c}}{Ch{{Hb{Dd{Mj{Bl}}}}}}}{{CMh{c}}}BJn}{{{BOj{c}}{Ch{{Hb{Dd{Mj{Bl}}}}}}}{{BOj{c}}}BJn}{{CAj{Ch{Dd}}}CAj}{{CAn{Ch{Dd}}}CAn}{{CAj{Ch{G`}}}CAj}{{CAn{Ch{{DAl{G`}}}}}CAn}{{CBn{Ch{G`}}}CBn}{{{CMl{c}}DGf}{{CMl{c}}}BOd}{{{CMn{c}}DGf}{{CMn{c}}}BJn}{{{BO`{c}}Ej}{{BO`{c}}}BOd}={{CBnd}CBn}{{BAb{DGh{DdDd}}}BAb}{{CH`BBb}CH`}{{CHbBBb}CHb}010{{CAjd}CAj}{{CC`d}CC`}3{{CJ`c}CJ`{{B@n{{Ch{G`}}}}}}<{{CAjc}CAj{{B@n{{Ch{G`}}}}}}{{CAnc}CAn{{B@n{{Ch{G`}}}}}}{{CAn{Ch{G`}}}CAn}{{{CMh{c}}{Ch{G`}}}{{CMh{c}}}BJn}{{{BMb{c}}{Ch{G`}}}{{BMb{c}}}BMd}{{{CJj{c}}{Ch{G`}}}{{CJj{c}}}BJn}{{CBn{Ch{G`}}}CBn}10:>{{CAj{Ch{CCf}}}CAj}{{CC`{Ch{CCf}}}CC`}{{BEnBKh}BEn}{{CBnCC`}CBn}{{{CJj{c}}{Ch{e}}}{{CJj{c}}}BJn{{B@n{CMb}}}}{{CBn{Ch{c}}}CBn{{B@n{CMb}}}}{{CJ`{Mj{{Bf{CMb}}}}}CJ`}{{{CJj{c}}{Ch{{Mj{BJl}}}}}{{CJj{c}}}BJn}{{{BOj{c}}{Ch{{Mj{BJl}}}}}{{BOj{c}}}BJn}{{BEnd}BEn}{{{CMh{c}}{Ch{{Gf{G`}}}}}{{CMh{c}}}BJn}{{{BMb{c}}{Ch{{Gf{G`}}}}}{{BMb{c}}}BMd}{{{CMn{c}}{Ch{{Gf{Dd}}}}}{{CMn{c}}}BJn}{{{CJj{c}}{Ch{{Mj{{Bf{Dd}}}}}}}{{CJj{c}}}BJn}{{{BOj{c}}{Ch{{Gf{G`}}}}}{{BOj{c}}}BJn}{{CBn{Ch{{Mj{{Gf{G`}}}}}}}CBn}6{{CAj{Ch{Bd}}}CAj}{{{BO`{c}}Bd}{{BO`{c}}}BOd}{{CC`{Ch{Bd}}}CC`}{{{BO`{c}}CD`}{{BO`{c}}}BOd}{{CAjd}CAj}{{CBnd}CBn}{{CJ`d}CJ`}2{{CAnd}CAn}{{{CJj{c}}d}{{CJj{c}}}BJn}3?{{{BOn{c}}{Ch{G`}}}{{BOn{c}}}BOd}{{CJ`c}CJ`{{B@n{{Ch{DCh}}}}}}{{BEnc{Ch{Jd}}}BEn{{B@n{Dd}}}}{{CAj{Ch{DCh}}}CAj}{{CAjc}CAj{{B@n{{Ch{DCh}}}}}}{{CAn{Ch{DCh}}}CAn}{{CAnc}CAn{{B@n{{Ch{DCh}}}}}}{{{CMh{c}}{Ch{DCh}}}{{CMh{c}}}BJn}{{{BMb{c}}{Ch{DCh}}}{{BMb{c}}}BMd}{{{CJj{c}}{Ch{{f{DfDCh}}}}}{{CJj{c}}}BJn}{{{BOj{c}}{Ch{DCh}}}{{BOj{c}}}BJn}{{CBn{Ch{DCh}}}CBn}{{{f{BM`}}}{{A`{Ofn}}}}{{CBnG`}CBn}{{CAj{Ch{{Mj{{BD`{El}}}}}}}CAj}{{CAn{Ch{{Mj{{BD`{El}}}}}}}CAn}{{{CMn{c}}{Mj{{BD`{El}}}}}{{CMn{c}}}BJn}{{{CJj{c}}{Mj{{BD`{El}}}}}{{CJj{c}}}BJn}{{CBn{Ch{{Mj{{BD`{El}}}}}}}CBn}{{CAjc}{{A`{CAjn}}}{{Dn{{BD`{El}}}{{Ad{{A`{{BD`{El}}n}}}}}}}}4{{{CMn{c}}{f{{BD`{El}}}}}{{CMn{c}}}BJn}{{{CJj{c}}{f{{BD`{El}}}}}{{CJj{c}}}BJn}3{{CH`BBb}CH`}{{CHbBBb}CHb}{{CAjBd}CAj}{{{BO`{c}}Bd}{{BO`{c}}}BOd}{{CC`Bd}CC`}{{BEnd}BEn}{{CAjG`}CAj}?0?{{{BOj{c}}{Ch{{Hb{G`G`}}}}}{{BOj{c}}}BJn}2{{CJ`DDd}CJ`}{{CAjDDd}CAj}{{CAnDDd}CAn}{{{BOn{c}}CGn}{{BOn{c}}}BOd}{{BJ`{Ch{Dd}}}BJ`}{{{BO`{c}}{Ch{Ej}}}{{BO`{c}}}BOd}{{CH`Kl}CH`}{{CH`{Ch{Dd}}}CH`}{{CAjd}CAj}{{CC`d}CC`}10<{{BFh{Ch{Ib}}}BFh}{{{f{BFh}}{Ch{Ib}}}{{Cn{Cl}}}}{{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}{Ch{Ib}}}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}2{{CHbBBb}CHb}{{CH`BBb}CH`}{BEnBEn}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}{{{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}c}e{}{}{}}10{{c{ABf{}{{AB`{c}}{ABb{e}}{ABd{g}}}}}e{}{}{}}210213210210{{{f{Df{Mj{AFh}}}}{f{{Bf{Bd}}}}}{{A`{G`BCh}}}}{{{f{CDf}}AAjc}{{A`{bn}}}BOd}{{{f{CEl}}AAjc}{{A`{bn}}}BOd}{{{f{DfAAj}}{f{ANb}}e{f{g}}G`}{{A`{bn}}}{{B@n{Dd}}}{{Hn{}{{Cj{c}}}}}{DGjIjIl}}{{{f{Df}}c}{{A`{G`BCh}}}DEb}{{{f{Df{Mj{AFh}}}}{f{{Bf{DGl}}}}}{{A`{G`BCh}}}}{{BBbc}BBb{{B@n{BBb}}}}{{{f{CK`}}}{{l{Kd}}}}{{{f{CKb}}}{{l{Kd}}}}{{{f{CAf}}}{{A`{{l{Kd}}n}}}}``{{{f{AKn}}{f{{l{Bb}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{Ch{{f{BJl}}}}{f{DGn}}{f{{BD`{BAb}}}}}{{A`{dn}}}}{{{Gf{{Hb{{f{CL`}}DH`}}}}BAb{Ch{DHb}}}{{A`{{Cn{Cl}}n}}}}``{{{f{BG`}}c}Ab{{Dn{{Hb{Jd{f{{BGb{Jd}}}}}}}{{Ad{Ch}}}}IjIl}}{{{f{BG`}}c}Ab{{Dn{{Hb{Jd{f{{BGb{Jd}}}}}}}{{Ad{}}}}IjIl}}{{{f{{Bf{{A@n{Jd}}}}}}c}Ab{{Dn{{A@n{Jd}}}{{Ad{Ch}}}}IjIl}}{{{f{{Bf{{A@n{Jd}}}}}}c}Ab{{Dn{{A@n{Jd}}}{{Ad{}}}}IjIl}}{{{f{{Bf{c}}}}e{Ch{{Mj{AGd}}}}}{{ALj{c}}}{BHhBHj}{{D`{}{{Cj{{Hb{JdJd}}}}}}J`}}{{{f{{Bf{c}}}}{f{Ib}}e{Ch{{Mj{AGd}}}}}{{ALj{c}}}{BHhBHj}{{D`{}{{Cj{{Hb{JdJd}}}}}}J`}}{{{f{{l{c}}}}JdJd}{{l{c}}}Dl}{{{f{{Gf{{A@n{Jd}}}}}}{f{{Bf{{Cn{Cl}}}}}}}d}{{{f{BHl}}{f{C`}}}Ab}{{BHnBHn}BHn}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{AL`{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{An}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALb}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hl{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{Hl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALd{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALf{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{Hl{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALf{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{Hl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALf{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALb}ALf{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{Hl{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALh{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALhDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{Hl{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{Hl{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALb}{{Af{f}{{Ad{e}}}}}{{Dl{}{{Hl{e}}}}}}0``{{{f{DHd}}}{{l{Fb}}}}0{{{f{DHd}}{f{{l{Kj}}}}d}{{A`{Abn}}}}{{{f{DHd}}{f{{l{An}}}}d}{{A`{Abn}}}}{{{f{DHd}}}Ab}{{{f{DHd}}}{{A`{Abn}}}}1{{{f{DHd}}}{{A`{{l{Fb}}n}}}}{{{f{DHd}}}{{l{Cf}}}}{{{f{DHd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DHd}}F`}{{A`{{l{Cf}}n}}}}{{{f{DHd}}Bd}{{A`{Abn}}}}5{{{f{DHd}}}{{A`{{l{Ah}}n}}}}01{{{f{DHf}}}{{f{{l{Cf}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{C@dBBb}BBb}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}3{cc{}}{{}G`}{{}c{}}{C@dBBb}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}4`````````````````````{{{f{DfDHh}}{f{{Bf{Bd}}}}ddd}{{A`{bn}}}}{{{f{DfDHh}}d}b}>>>>====;;;;::::9999{{{f{DHh}}}El}99998888{{{f{{Bf{G`}}}}G`{f{{BD`{El}}}}{Ch{Bd}}CCbd}{{A`{{Gf{DHh}}n}}}}8888{DHh{{A`{Abn}}}}7777666655559999```````````{{{f{BMj}}{Ch{{f{Bl}}}}d}{{A`{{Kh{KfKd}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}}{{A`{{Kh{KfKd}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}Kldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{Kh{KnKj}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}Kld{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{Kh{KnKj}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}d}{{A`{{Kh{LhKj}}n}}}}`{{{f{CK`}}}{{l{N`}}}}{{{f{CKb}}}{{l{N`}}}}{{{f{CKd}}}{{l{Kj}}}}`{{{f{DAj}}}{{l{N`}}}}21{{{f{CK`}}}{{l{Bb}}}}{{{f{CKb}}}{{l{Bb}}}}{{{f{CK`}}}{{l{Kd}}}}{{{f{CKb}}}{{l{Kd}}}}55`46576{{{f{DAj}}}{{l{Kd}}}}16{{{f{CK`}}}{{l{Nn}}}}{{{f{CKb}}}{{l{Nn}}}}{{Dd{f{{Bf{{f{Bl}}}}}}{f{Bl}}}{{Kh{KfKd}}}}{{Dd{f{{Bf{{f{Bl}}}}}}{f{Bl}}}{{Kh{LhKj}}}}{{Dd{f{{Bf{{f{Bl}}}}}}{f{Bl}}Kl}{{Kh{KnKj}}}}=<{{{f{DEf}}On}{{A`{Abn}}}}{{{f{DEf}}{f{Ab}}CBb}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{fh}b}{{{f{BMj}}{Ch{{f{Bl}}}}d}{{A`{{Kh{KfKd}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}}{{A`{{Kh{KfKd}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}Kldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{Kh{KnKj}}n}}}}{{{f{BMj}}{Ch{{f{Bl}}}}Kld{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{Kh{KnKj}}n}}}}{{{f{DHj}}}{{f{{l{An}}}}}}{{{f{BMj}}{Ch{{f{Bl}}}}d}{{A`{{Kh{LhKj}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DHl}}}DHl}{{f{f{Dfc}}}b{}}{fb}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{DHl}}{f{DHl}}}d}{{f{f{c}}}d{}}00{{{f{DHl}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{{{f{DHl}}{f{Dfc}}}bADj}`{{}G`}{{}c{}}{{{f{DHl}}{f{Bl}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{DHn{c}}}}}{{DHn{c}}}{ADdAl}}{{f{f{Dfc}}}b{}}{fb}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{cc{}}{{{f{Bl}}}{{Ch{DHl}}}}{{}G`}{{}c{}}`{{{f{Df{DHn{c}}}}{f{Bl}}}ChAl}{{{f{DfDI`}}{f{{Bf{Bd}}}}{Ch{Kl}}}{{Ch{c}}}{}}{{{f{Df{DHn{Kd}}}}{f{{Bf{Bd}}}}{Ch{Kl}}}{{Ch{Nh}}}}{{{f{Df{DHn{Kj}}}}{f{{Bf{Bd}}}}{Ch{Kl}}}{{Ch{Gn}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Kl}}}{{A`{{DId{}{{DIb{e}}}}n}}}{}{}}{{DHl{Ch{Kl}}}{{A`{{DHn{Kj}}n}}}}{{DHl{Ch{Kl}}}{{A`{{DHn{Kd}}n}}}}{{}{{A`{c}}}{}}{fAAh};````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{CJb}}}CJb}{{f{f{Dfc}}}b{}}{fb}{{}CJb}{G`{{f{c}}}{}}0{G`{{f{Dfc}}}{}}0{G`b}0{{{f{CJb}}{f{CJb}}}d}{{{f{DIf}}{f{DIf}}}d}{{f{f{c}}}d{}}00{{{f{CJb}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}0{{{f{Bl}}}{{A`{DIf}}}}{{{f{Bl}}g}{{A`{CJbn}}}{{If{Bl}}}{{B@n{Ej}}}{{Hn{}{{Cj{{Hb{ce}}}}}}}}{{{f{CJb}}{f{Dfc}}}bADj}{{}G`}0{{}c{}}0``{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAh}044{{CJbG`}CJb}`````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bf{Bd}}}}}{{Ch{DIh}}}}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{cc{}}=<{{{f{{Bf{Bd}}}}{f{Df{Gf{Bd}}}}}{{A`{{f{{Bf{Bd}}}}n}}}};:9=``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMl{}{{Hn{}{{Cj{c}}}}}}0{{AGbe}AMn{}{{Hn{}{{Cj{c}}}}}}0{{{f{ANd}}}{{f{El}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Ch{{f{{Bf{c}}}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{{f{AOf}}{f{El}}}{{A`{Abn}}}}{{{f{AOf}}{f{El}}Fj}{{A`{Abn}}}}`{B@fe{}{{AMl{c}}ALb}}0{{B@fAGb}e{}{{AMn{c}}ALb}}0{{{AO`{Bl}}}El}{{{f{AOf}}}{{f{El}}}}`{{AOd{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{Gf{c}}AGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{Gf{c}}AGb}{{ALb{}{{ANf{e}}{ANh{c}}{ANj{g}}}}}{ANl{ANn{e}}}ADd{{Gl{}{{Cj{e}}}}J`IjIl}}{{G`cAGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{G`AGb}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}G`}{{Ch{c}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{AOf}}G`}{{A`{Jbn}}}}{{{f{AOf}}G`}Jb}{{}El}{{{f{BAl}}G`}Jb}4{{BAnEl}{{A`{Mdn}}}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{AGj{cgAGh}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}{{Ch{c}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{{{f{AMh}}{f{AMh}}}{{A`{{Hb{AMhAMh}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hb{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{Eln}}}}`{{}c{}}0{g{{A`{AMle}}}{}{}{{Hn{}{{Cj{{A`{ce}}}}}}}}0{{AGbg}{{A`{AMne}}}{}{}{{Hn{}{{Cj{{A`{ce}}}}}}}}0{B@f{{A`{eg}}}{}{{AMl{c}}ALb}{}}0{{B@fAGb}{{A`{eg}}}{}{{AMn{c}}ALb}{}}0{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}G`}cADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}0{{{f{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}}}gADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}{G`c{}}0{{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}{Ch{Ib}}}{{ALb{}{{ANf{c}}{ANh{e}}{ANj{g}}}}}ADd{ANl{ANn{c}}}{{Gl{}{{Cj{c}}}}J`IjIl}}```````````{{{f{AMh}}{f{AMh}}c}{{A`{AMhn}}}AOd}{{AOd{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}=<`````````{{}b}0{{}d}{{{f{{Kh{KnKj}}}}{f{{l{An}}}}CIn{Gb{Gn}{{Ad{AMb}}}}{Gb{AMb}{{Ad{Gn}}}}{f{AMd}}{f{AMd}}}{{A`{{l{Kj}}n}}}}{{{f{{Kh{KnKj}}}}{Ch{{f{Bl}}}}{Gb{Gn}{{Ad{AMb}}}}{Gb{AMb}{{Ad{Gn}}}}{f{AMd}}{f{AMd}}}{{A`{{l{Kj}}n}}}}{{{f{{Kh{KnKj}}}}{Ch{{f{Bl}}}}{f{{l{An}}}}CIn}{{A`{{Kh{KnKj}}n}}}}```{{c{Ch{Ib}}}COj{}}{{{COl{Gn}}{COl{Bd}}{Ch{Ib}}}COn}{{{COl{Gn}}{COl{Bd}}{Ch{Ib}}}D@`}`{CLfBBb}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CLfKl}BBb}3{{CLfBBbKl}BBb}{{CLfDd}BBb}555{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}8{cc{}}9{{}G`}{{}c{}};;;;;;;;;;{{CLf{Ch{Dd}}BBbCIn}BBb}{{CLfBBb}BBb}={{CLf{f{Bl}}}BBb}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}6{CLfBBb}0?0`{{{f{BI`}}{f{AAj}}{f{C`}}}{{A`{Abn}}}}{{{f{BI`}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}DIj}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{DIj{Ch{{f{AGb}}}}}{{A`{AEjn}}}}{cc{}}{{}G`}{{}c{}}{{{f{DIj}}}d}{{G`G`}DIj}{{{f{DfDIj}}{Cn{Cl}}}b}{{{f{DfDIj}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}7`{{{f{{l{c}}}}}G`Al}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DIl}}}DIl}{{f{f{Dfc}}}b{}}{fb}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{DIl}}{f{DIl}}}d}{{{f{DIl}}{f{DfHh}}}{{A`{bHj}}}}0{cc{}}{{{f{DIl}}{f{Dfc}}}bADj}{{}G`}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GhBBh}}}}{fAAh}6````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DIn}}}DIn}{{f{f{Dfc}}}b{}}{fb}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{DIn}}{f{DIn}}}d}{{{f{DIn}}{f{DfHh}}}{{A`{bHj}}}}0{cc{}}{{{f{DIn}}{f{Dfc}}}bADj}{{}G`}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GhBBh}}}}{fAAh}6{{LlLl}Ll}{{{f{{l{Fb}}}}Jd}{{A`{bn}}}}{{{f{{ALj{Jd}}}}Jd}{{A`{bn}}}}```{{{f{Ab}}CE`}Ab}{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChLj{{Dn{}{{Ad{}}}}E`}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{DJ`}}}{{f{AGd}}}}{{{f{DfDJ`}}}{{Cn{Cl}}}}{{{f{DfDJ`}}}{{f{DfAGd}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJ`}}}DJ`}{{f{f{Dfc}}}b{}}{fb}{{}DJ`}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{DJ`}}}{{f{AGb}}}}{{{f{DfDJ`}}G`}b}{{{f{DJ`}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{{}G`}{{}c{}}{{{f{DJ`}}}G`}{G`DJ`}{{{f{DfDJ`}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}{{{f{DJ`}}}{{Ch{{f{DJb}}}}}}8`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DG`}}}DG`}{{f{f{Dfc}}}b{}}{fb}{{}DG`}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{{BDh{ElA@h}}}}}El}{{{f{DG`}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{{{f{DG`}}}G`}{{{f{DG`}}}{{Mj{{BD`{El}}}}}}{{{f{Bl}}dd}El}{{{f{DAb}}Bd{Ch{G`}}d{Ch{{f{{BD`{El}}}}}}G`G`{Ch{{f{CCd}}}}{Ch{Bd}}Bd{Ch{{f{CCf}}}}dd{f{Df{Ch{G`}}}}d}{{A`{{Hb{{BD`{El}}G`G`}}n}}}}{{}G`}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DAb}}{f{CBn}}}{{A`{DG`n}}}}{{}{{A`{c}}}{}}{fAAh}5{{DG`{Mj{{BD`{El}}}}}DG`}````{{{f{{l{c}}}}eALld}{{Gf{Jd}}}Dl{{D`{}{{Cj{Ch}}}}}}{{{f{{Bf{f}}}}cJde}{{Gf{Jd}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fG`f}{{Ad{d}}}}}}``{{{f{DJd}}}{{f{Ab}}}}{{{f{CAf}}}{{A`{{l{Kd}}n}}}}{{{f{CAf}}}{{A`{{l{N`}}n}}}}0{{{f{CAf}}}{{A`{{l{Bb}}n}}}}22112{{{f{CAf}}}{{A`{{l{Nn}}n}}}}322{{{f{CAf}}{f{Bl}}}{{A`{Abn}}}}{{{f{CAf}}Kl}{{A`{{l{Kj}}n}}}}1445`{{G`{f{Df{Gf{d}}}}}b}```{{{f{AKd}}G`G`}AKd}0{{G`{f{{Bf{Ab}}}}{f{DfFf}}}{{A`{{ALn{{l{Fb}}}}n}}}}{{{f{{Bf{Ab}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{AM`n}}}}{{{f{{Bf{Ab}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{{Jj{Gn}}n}}}}{{Dd{f{{Bf{Ab}}}}{f{{Bf{d}}}}{f{{Bf{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bf{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bf{Ab}}}}}{{A`{AM`n}}}}{{{f{{Bf{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88```{{{f{BNh}}}{{f{{l{An}}}}}}{{{f{BNl}}}{{A`{{l{An}}n}}}}{{{f{BNl}}}{{l{An}}}}{{{f{BNl}}{f{{l{An}}}}}{{l{An}}}}{{{f{BNl}}{f{Bl}}d}{{A`{{l{Bb}}n}}}}{{{f{BNl}}{f{{l{An}}}}dd}{{A`{{l{Bb}}n}}}}{{{f{BNl}}{f{Bl}}}{{A`{{l{Bb}}n}}}}{{{f{BNl}}{f{Bl}}d}{{A`{{l{Fb}}n}}}}{{{f{BNl}}{f{{l{An}}}}d}{{A`{{l{Fb}}n}}}}{{{f{BNl}}{f{{l{An}}}}G`}{{A`{{l{An}}n}}}}{{{f{BNl}}{f{Bl}}}{{A`{{l{Ah}}n}}}}{{{f{BNl}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{BNl}}{f{Bl}}{f{El}}}{{A`{Abn}}}}5{{{f{BNl}}{f{{l{An}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BNl}}{f{Bl}}}{{A`{{l{Fb}}n}}}}=<{{{f{{Bf{{f{{l{An}}}}}}}}{f{Bl}}d}{{A`{{l{An}}n}}}}{{{f{BNl}}{f{Bl}}{f{Bl}}}{{A`{{l{An}}n}}}}0{{{f{BNl}}{f{Bl}}{f{Bl}}G`}{{A`{{l{An}}n}}}}1{{{f{BNl}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{BNl}}{f{{l{An}}}}G`}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Dn{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{{{f{{l{An}}}}{f{{l{An}}}}G`ed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Dn{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{{{f{BNl}}{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{Bl}}d}{{l{An}}}}{{{f{BNl}}}{{l{Fb}}}}0{{{f{BNl}}}{{l{An}}}}{{{f{BNl}}{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}4{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}505050{{{f{BNl}}{f{{l{An}}}}}{{l{An}}}}10{{{f{BNl}}{f{{l{Fb}}}}d}{{A`{{l{Kj}}n}}}}444````````{{eG`G`}{{DJf{Gn}}}{{If{Bl}}}{{D`{}{{Cj{c}}}}}}{{eG`G`}{{Jj{Gn}}}{{If{{Bf{Bd}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BJd}}}Aj}{{Dd{Gf{{Cn{Cl}}}}{f{AGb}}}{{A`{Abn}}}}{{Dd{Gf{{Cn{Cl}}}}{f{AGb}}{Ch{{f{{DGh{DdDd}}}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{BhMb}}{{{f{Ab}}c}{}{BhMb}}{{AbAb}}`{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}}{{Ch{G`}}}}0{{{f{BJd}}F`}{{l{Fb}}}}{{{f{BJd}}}{{A`{{l{Fb}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{Ab}}G`}{{f{{Cn{Cl}}}}}}{{{f{BJd}}}{{f{AGd}}}}{{{f{DfBJd}}}{{f{DfAGd}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBJd}}}{{f{Df{l{c}}}}}Dl}{{{f{BJd}}}{{f{{l{c}}}}}Dl}{{{f{Ab}}}{{f{BJd}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBJd}}}{{A`{G`n}}}}{{{f{DfAb}}}{{A`{G`n}}}}{{{f{Ab}}}{{A`{{f{{l{B`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Bb}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BJd}}{f{El}}Fj}{{A`{Abn}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}0{{{f{Ab}}{f{El}}Fj}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMh}}n}}}}7{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bj}{{{f{BJd}}}{{Gd{{Fn{{Cn{Cl}}}}{Gb{{f{{Cn{Cl}}}}}{{Ad{G`}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{G`}}}}}}}}{{{f{BJd}}}{{f{{Gf{{Cn{Cl}}}}}}}}{{{f{DfBJd}}}{{f{Df{Gf{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gf{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Ll}}}Ll}1{{{f{BJd}}}{{Mj{BJd}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{Kh{KfKd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kh{KnKj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kh{LbL`}}}}n}}}}{{}Ab}{G`{{f{c}}}{}}000{{{f{Ab}}}f}{G`{{f{Dfc}}}{}}000{{Abc}{}{BhMb}}{{{f{Ab}}c}{}{BhMb}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{G`b}000{{{f{BJd}}}Ab}{{{f{BJd}}}{{f{El}}}}{{{f{Ab}}}{{A`{{f{{Kh{LdKj}}}}n}}}}{{{f{Ll}}{f{Ll}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bl}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}c}{{A`{{l{Bb}}n}}}BA`}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}30{{{f{Ab}}c}{}BA`}{{{f{Ab}}{f{Bl}}}}66{{f{f{c}}}d{}}00{{{f{Ab}}}G`}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JbG`}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{BJd}}}{{Eb{Of}}}}{{{f{Ab}}AI`}{{A`{Abn}}}}{{{f{BJd}}{f{{l{Bb}}}}}{{A`{Abn}}}}{{{f{Ll}}{f{DfHh}}}{{A`{bHj}}}}{{{f{Ab}}{f{DfHh}}}{{A`{bHj}}}}0{{{f{Ab}}}Ej}{cc{}}00{{{l{c}}}AbDl}{{{Kh{LhKj}}}Ab}2{{{Kh{LdKj}}}Ab}{{{Kh{KnKj}}}Ab}{{{Kh{KfKd}}}Ab}{{Dd{f{{Bf{Jb}}}}d}{{A`{Abn}}}}{{Dd{f{{Bf{Jb}}}}{f{El}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gf{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gf{{Cn{Cl}}}}{f{El}}}Ab}{cAb{{Hn{}{{Cj{{f{Aj}}}}}}}}{cAb{{Hn{}{{Cj{Jd}}}}}}{cAb{{Hn{}{{Cj{{Ch{Gn}}}}}}}}{cAb{{Hn{}{{Cj{{f{Nh}}}}}}}}{cAb{{Hn{}{{Cj{Gn}}}}}}{cAb{{Hn{}{{Cj{Nh}}}}}}{cAb{{Hn{}{{Cj{{Ch{Nh}}}}}}}}{cAb{{Hn{}{{Cj{{f{Gn}}}}}}}}{cAb{{Hn{}{{Cj{{Ch{d}}}}}}}}{cAb{{Hn{}{{Cj{{f{O`}}}}}}}}{cAb{{Hn{}{{Cj{O`}}}}}}{cAb{{Hn{}{{Cj{{Ch{O`}}}}}}}}{cAb{{Hn{}{{Cj{d}}}}}}{cAb{{Hn{}{{Cj{{f{d}}}}}}}}{cAb{{Hn{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{cAb{{Hn{}{{Cj{{f{Nb}}}}}}}}{cAb{{Hn{}{{Cj{{Ch{Jl}}}}}}}}{cAb{{Hn{}{{Cj{{f{Jd}}}}}}}}{cAb{{Hn{}{{Cj{{f{Jl}}}}}}}}{cAb{{Hn{}{{Cj{{f{Bl}}}}}}}}{cAb{{Hn{}{{Cj{{Ch{Ej}}}}}}}}{cAb{{Hn{}{{Cj{Nb}}}}}}{cAb{{Hn{}{{Cj{Ej}}}}}}{cAb{{Hn{}{{Cj{{Ch{Nb}}}}}}}}{cAb{{Hn{}{{Cj{{f{Jn}}}}}}}}{cAb{{Hn{}{{Cj{{Ch{Bd}}}}}}}}{cAb{{Hn{}{{Cj{Bd}}}}}}{cAb{{Hn{}{{Cj{{f{Bd}}}}}}}}{cAb{{Hn{}{{Cj{Jn}}}}}}{cAb{{Hn{}{{Cj{{Ch{Nl}}}}}}}}{cAb{{Hn{}{{Cj{Nl}}}}}}{cAb{{Hn{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Hn{}{{Cj{Aj}}}}}}{cAb{{Hn{}{{Cj{{f{Nl}}}}}}}}{cAb{{Hn{}{{Cj{{Ch{Jd}}}}}}}}{cAb{{Hn{}{{Cj{{Ch{Jn}}}}}}}}{cAb{{Hn{}{{Cj{Jl}}}}}}{{Dd{Gf{Jl}}}Ab}{{Dd{Gf{Nl}}}Ab}{{Dd{Gf{Nh}}}Ab}{{Dd{Gf{Aj}}}Ab}{{Dd{Gf{O`}}}Ab}{{Dd{Gf{Nb}}}Ab}{{Dd{Gf{Od}}}Ab}{{Dd{Gf{Jn}}}Ab}{{Dd{Gf{Bd}}}Ab}{{Dd{Gf{Gn}}}Ab}{{Dd{Gf{Jd}}}Ab}{{DdG`{f{El}}}Ab}{{{f{Ab}}G`G`}Ab}{{{f{BJd}}G`}{{A`{Jbn}}}}{{{f{Ab}}}G`}{{{f{Ab}}}Jf}{{{f{Ab}}}Ab}{{{f{BJd}}}{{Ch{{Mn{Ml}}}}}}{{{f{BJd}}G`}{{Ch{{f{Jh}}}}}}{{{f{BJd}}G`G`}{{Ch{{f{Jh}}}}}}{{{f{BJd}}G`}Jb}{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{{A`{{l{Bb}}n}}}BA`}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}{f{Bl}}}{{A`{{l{Bb}}n}}}}321{{{f{Ab}}{f{Bl}}}}{{{f{BJd}}}d}{{{f{Ll}}{f{Dfc}}}bADj}{{{f{Ab}}{Ch{G`}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{N`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}G`}000{{}c{}}000{AbAAj}1{BDbAb}{AbAb}={{{f{Ab}}}{{A`{{l{Bb}}n}}}}000{{{f{BJd}}}{{l{Bb}}}}0{{}d}0{{{f{Ab}}}Ll}{{{f{Ab}}}DJh}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BJd}}}G`}{{{f{Ab}}}G`}{{{f{BJd}}G`}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBBb}{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{{A`{{l{Bb}}n}}}BA`}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}{f{Bl}}}}3021{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mb}{{{f{BJd}}}{{A`{Mdn}}}}{{{f{BJd}}}{{Ch{Aj}}}}{{{f{Ab}}}Md}1232{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{Abc}{}{BhMb}}{{{f{Ab}}c}{}{BhMb}}{{{f{BJd}}}G`}{{{f{Ab}}}G`}{{{f{BJd}}}{{A`{G`n}}}}{{{f{BJd}}}{{f{Dd}}}}{{Ddc}Ab{{If{{Bf{Ab}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{AMb}}}}}}}}{{Ddc}Ab{{If{{Bf{Nl}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Aj}}}}}}}}{{Dd{Nf{Gn}}}Ab}{{Ddc}Ab{{If{{Bf{Bd}}}}}}{{Dd{Nf{Nh}}}Ab}{{Dd{Nf{Jn}}}Ab}{{Ddc}Ab{{If{{Bf{{Ch{Jl}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Od}}}}}}}}{{Dd{Nf{Jd}}}Ab}{{Ddc}Ab{{If{{Bf{Aj}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Ab}}}}}}}}{{Ddc}Ab{{If{{Bf{{f{Bl}}}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{If{{Bf{{Ch{{f{Bl}}}}}}}}}}{{Ddc}Ab{{If{{Bf{{Eb{Bl}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Gn}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{{Eb{Bl}}}}}}}}}}{{Ddc}Ab{{If{{Bf{{f{{Bf{Bd}}}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{{f{{Bf{Bd}}}}}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Nh}}}}}}}}{{Ddc}Ab{{If{{Bf{d}}}}}}{{Ddc}Ab{{If{{Bf{AMf}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{AMf}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Ej}}}}}}}}{{Ddc}AbBDb}{{Ddc}Ab{{If{{Bf{{Ch{Nb}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Jn}}}}}}}}{{Ddc}Ab{{If{{Bf{Jd}}}}}}{{Ddc}Ab{{If{{Bf{Jb}}}}}}{{Ddc}Ab{{If{{Bf{Jn}}}}}}{{Ddc}Ab{{If{{Bf{Nb}}}}}}{{Ddc}Ab{{If{{Bf{O`}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{BAh}}}}}}}}{{Ddc}Ab{{If{{Bf{Nh}}}}}}{{Ddc}Ab{{If{{Bf{{Gf{Bd}}}}}}}}{{Ddc}Ab{{If{{Bf{Ej}}}}}}{{Ddc}Ab{{If{{Bf{Gn}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Jd}}}}}}}}{{Ddc}Ab{{If{{Bf{Od}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Nl}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{Bd}}}}}}}}{{Ddc}Ab{{If{{Bf{BAh}}}}}}{{Ddc}Ab{{If{{Bf{{Eb{{Bf{Bd}}}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{{Eb{{Bf{Bd}}}}}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{d}}}}}}}}{{Ddc}Ab{{If{{Bf{BAj}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{BAj}}}}}}}}{{Ddc}Ab{{If{{Bf{AMb}}}}}}{{Ddc}Ab{{If{{Bf{Jl}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{{Gf{Bd}}}}}}}}}}{{Ddc}Ab{{If{{Bf{{Ch{O`}}}}}}}}{{Dd{f{El}}}Ab}{{{f{BJd}}G`G`}Ab}{{DdG`}Ab}{{{f{DfDJh}}}Ch}{{{f{{AIb{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}{f{Bl}}}{{A`{{l{Bb}}n}}}}{{{f{Ab}}c}{{A`{{l{Bb}}n}}}BA`}32{{{f{Ab}}c}{}BA`}{{{f{Ab}}{f{Bl}}}}{{{f{Ab}}}{{A`{{f{ADf}}n}}}}{{{f{BJd}}}G`}`{{{f{Ab}}}{{Cn{Lf}}}}{{{f{Ab}}}{{A`{Mdn}}}}{{{f{BJd}}AjOl}{{A`{Mdn}}}}{{{f{BJd}}}Ab}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{BhMb}}{{{f{Ab}}c}{}{BhMb}}{{{f{DfBJd}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bf{Gn}}}}}{{A`{Abn}}}}06{LlLl}{{{f{BJd}}{f{Dn}}On}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Jn}}}{{A`{Abn}}}}{{{f{Ab}}G`dd{Ch{Jn}}}{{A`{Abn}}}}{{{f{Ab}}G`}Ab}{{{f{DfAb}}Ll}b}{{{f{BJd}}Gn}Ab}{{{f{DfBJd}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Jn}}}Ab}{{{f{DJh}}}{{Hb{G`{Ch{G`}}}}}}{{{f{BJd}}GnG`}Ab}{{{f{Ab}}GnG`}Ab}{{{f{Ab}}F`}{{A`{Abn}}}}{{{f{BJd}}F`}{{A`{Abn}}}}{{{f{BJd}}Gn}{{Hb{AbAb}}}}{{{f{Ab}}Gn}{{Hb{AbAb}}}}{{{f{BJd}}Bd}{{Ch{Aj}}}}{{{f{BJd}}Bd}{{A`{Mdn}}}}{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{{{f{Ab}}G`}{{A`{{Eb{Bl}}n}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{BhMb}}{{AbAb}}{{{f{Ab}}c}{}{BhMb}}{{{f{Ab}}}{{A`{cn}}}Mb}{{{f{BJd}}}{{A`{Mdn}}}}{{{f{Ab}}}{{A`{Mdn}}}}{{{f{Ab}}{Ch{G`}}}Ab}{{{f{BJd}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bf{A@d}}}}Ll}Ab}{{{f{Ab}}{f{{Bf{A@d}}}}}Ab}{{{f{BJd}}{f{{Bf{Jd}}}}}{{A`{Abn}}}}{{{f{BJd}}{f{{Bf{Jd}}}}}Ab}{{{f{BJd}}{f{{l{Fb}}}}}Ab}{{{f{Ab}}{f{{Bf{Jd}}}}}Ab}{{{f{Ab}}}{{A`{{f{{Kh{LhKj}}}}n}}}}{{{f{Ab}}G`AOn}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bl}}}}d}{{A`{AAjn}}}}{{{f{Ab}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{Eb{Ab}}}}{fEj}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}00{{{Hb{{f{BAb}}{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hb{Dd{Gf{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hb{Dd{Cn{Cl}}}}}{{A`{Abn}}}}3{{{Hb{{f{BAb}}{Gf{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{}{{A`{c}}}{}}0006{{Ddc}{{A`{Ab}}}{}}{{{f{DfAb}}{K`{c}}}dDl}8{f{{A`{GhBBh}}}}{fAAh}000{{{f{Ab}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ob}}}}n}}}}{{{f{BJd}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BJd}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{BJd}}Bd}{{Ch{Aj}}}}{{{f{BJd}}Bd}{{A`{Mdn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{BhMb}}{{{f{Ab}}{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ed}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ed}}}Ed}{{f{f{Dfc}}}b{}}{fb}{{{f{Ed}}}Ab}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{cc{}}{{}G`}{{}c{}}{{{DJj{Ab}}}Ed}{{{f{DfEd}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}6{{{f{DfEd}}{f{Df{Cn{Cl}}}}e}c{}{{Dn{{f{Ed}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BK`{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BKd}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{CAh}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Fl}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CAh}}c}{{A`{Abn}}}Bj}{{{f{{l{Fl}}}}c}{{A`{Abn}}}Bj}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{CLb}}}CLb}{{f{f{Dfc}}}b{}}{fb}{{}CLb}{G`{{f{c}}}{}}{G`{{f{Dfc}}}{}}{G`b}{{{f{CLb}}{f{CLb}}}d}{{f{f{c}}}d{}}00{{{f{CLb}}{f{DfHh}}}{{A`{bHj}}}}{cc{}}{{{f{CLb}}{f{Dfc}}}bADj}{{}G`}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAh}4","D":"AEJnAK`","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11382],[5,"StructType",1996,11383],[5,"ChunkedArray",17,11384],[6,"PolarsError",3490,11385],[6,"Result",11386],[5,"Series",10867,11387],[17,"Output"],[10,"FnMut",11388],[5,"ListType",1996,11383],[1,"f64"],[10,"PolarsNumericType",1996,11383],[5,"StringType",1996,11383],[5,"BinaryType",1996,11383],[5,"BooleanType",1996,11383],[1,"u8"],[1,"slice"],[10,"Num",11389],[10,"ToPrimitive",11390],[1,"str"],[10,"NumOpsDispatchInner",11328,11391],[6,"GroupsProxy",3886,11392],[5,"ObjectType",1996,11383],[10,"PolarsObject",1551,11393],[5,"FixedSizeListType",1996,11383],[6,"Option",11394],[17,"Item"],[10,"Array",11395],[5,"Box",11396],[10,"Iterator",11397],[5,"AmortizedListIter",11398],[5,"PlSmallStr",1996,11399],[0,"mut"],[17,"IsNested"],[5,"FalseT",1996,11383],[10,"PolarsDataType",1996,11383],[10,"Fn",11388],[10,"Copy",11400],[6,"Cow",11401],[5,"AmortSeries",11304,11402],[5,"Float32Type",1996,11383],[5,"Float64Type",1996,11383],[5,"String",11403],[6,"DataType",1996,11404],[5,"View",11405],[5,"SortOptions",1679,11406],[5,"UInt32Type",1996,11383],[5,"BinaryOffsetType",1996,11383],[5,"SortMultipleOptions",1679,11406],[10,"PolarsIntegerType",1996,11383],[6,"CastOptions",1162,11407],[10,"NumOpsDispatchCheckedInner",11349,11408],[5,"Iter",11409],[1,"usize"],[1,"fn"],[5,"Map",11410],[5,"Vec",11411],[5,"CompactString",11412],[5,"MetadataProperties",1268,11413],[10,"DoubleEndedIterator",11414],[1,"i64"],[5,"OffsetsBuffer",11415],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11416],[5,"Error",11416],[17,"Array"],[10,"IntoIterator",11417],[10,"PolarsAsRef",11418],[5,"Bitmap",11419],[10,"Borrow",11420],[10,"AsRef",11421],[10,"IntoParallelIterator",11422],[10,"Send",11400],[10,"Sync",11400],[10,"NoOption",11423],[10,"TrustedLen",11424],[6,"AnyValue",1996,11425],[1,"u32"],[5,"MetadataFlags",1268,11413],[10,"PolarsObjectSafe",1551,11393],[5,"BinaryArray",11426],[1,"f32"],[1,"u64"],[5,"Metadata",1268,11413],[5,"RwLockWriteGuard",11427],[5,"Int32Type",1996,11383],[5,"DateType",1996,11383],[5,"Logical",1996,11428],[5,"Int64Type",1996,11383],[6,"TimeUnit",1996,11429],[5,"DatetimeType",1996,11383],[5,"Int128Type",1996,11383],[5,"DecimalType",1996,11383],[5,"DurationType",1996,11383],[10,"ExactSizeIterator",11430],[5,"TimeType",1996,11383],[10,"PolarsFloatType",1996,11383],[6,"IsSorted",10867,11431],[10,"PolarsIterator",1211,11432],[6,"ChunkedArrayLayout",17,11384],[10,"NumCast",11390],[5,"Scalar",4256,11433],[6,"MetadataReadGuard",1268,11434],[5,"IMMetadata",1268,11435],[5,"Arc",4256,11436],[10,"MetadataTrait",1268,11437],[5,"RwLockReadGuard",11427],[5,"Int8Type",1996,11383],[1,"i8"],[5,"UInt64Type",1996,11383],[5,"Range",11438],[1,"i32"],[5,"UInt16Type",1996,11383],[1,"u16"],[5,"Int16Type",1996,11383],[1,"i16"],[5,"UInt8Type",1996,11383],[1,"i128"],[5,"Field",1996,11439],[10,"ParallelIterator",11422],[10,"IndexedParallelIterator",11422],[6,"QuantileInterpolOptions",4256,11440],[5,"RollingOptionsFixedWindow",4256,11441],[10,"PolarsOpsNumericType",11442],[10,"Sized",11400],[5,"ChunkId",4256,11443],[17,"IsStruct"],[5,"RandomState",11444],[5,"BytesHash",11445],[5,"ViewRepr",11446],[1,"array"],[5,"Dim",11447],[5,"ArrayBase",11446],[5,"OwnedRepr",11448],[6,"Either",11449],[5,"TypeId",11450],[5,"DataFrame",3589,11451],[5,"NullableIdxSize",4256,11443],[10,"FnOnce",11388],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",856,11452],[5,"AnonymousListBuilder",884,11453],[5,"AnonymousOwnedListBuilder",884,11453],[5,"ListBooleanChunkedBuilder",884,11454],[5,"ListPrimitiveChunkedBuilder",884,11455],[10,"ListBuilderTrait",884,11456],[10,"ChunkedBuilder",884,11457],[5,"ListStringChunkedBuilder",884,11458],[5,"ListBinaryChunkedBuilder",884,11458],[5,"ListNullChunkedBuilder",884,11459],[5,"BinViewChunkedBuilder",884,11460],[10,"ViewType",11461],[5,"BooleanChunkedBuilder",884,11462],[5,"NullChunkedBuilder",884,11463],[5,"PrimitiveChunkedBuilder",884,11464],[10,"Clone",11465],[5,"NullChunked",11466],[10,"NewChunkedArray",884,11457],[10,"Hasher",11467],[10,"ChunkedCollectInferIterExt",1191,11468],[10,"ChunkedCollectIterExt",1191,11468],[10,"Canonical",1205,11469],[10,"ChunkedCollectParIterExt",1207,11470],[10,"FromParIterWithDtype",1207,11470],[5,"BooleanArray",11471],[5,"BoolIterNoNull",1211,11432],[5,"FixedSizeListArray",11472],[5,"FixedSizeListIterNoNull",1211,11432],[5,"SomeIterator",1211,11432],[5,"MetadataEnv",1268,11473],[10,"MetadataCollectable",1268,11474],[5,"Iter",11475],[5,"IterNames",11475],[5,"File",11476],[5,"Mutex",11477],[6,"MetadataMerge",1268,11413],[5,"RwLock",11427],[5,"ObjectArray",1551,11393],[6,"ArrowDataType",1996,11478],[10,"Any",11450],[10,"Debug",11416],[5,"BitmapIter",11479],[6,"ZipValidity",11480],[5,"ObjectChunkedBuilder",1628,11481],[10,"AnonymousObjectBuilder",1651,11482],[5,"ObjectRegistry",1651,11482],[10,"ChunkAgg",1679,11483],[17,"FuncRet"],[10,"ChunkApply",1679,11483],[10,"ChunkApplyKernel",1679,11483],[10,"ChunkSort",1679,11483],[10,"ChunkUnique",1679,11483],[10,"ChunkCast",1679,11483],[6,"FillNullStrategy",1679,11483],[10,"ChunkCompare",10867,11483],[10,"ChunkExplode",1679,11483],[10,"ChunkFillNullValue",1679,11483],[10,"ChunkFilter",1679,11483],[10,"ChunkFull",1679,11483],[10,"ChunkFullNull",1679,11483],[10,"ChunkAnyValue",1679,11483],[10,"IsFirstDistinct",1679,11483],[10,"IsLastDistinct",1679,11483],[10,"ChunkQuantile",1679,11483],[10,"ChunkExpandAtIndex",1679,11483],[10,"Reinterpret",1679,11483],[10,"ChunkReverse",1679,11483],[10,"ChunkRollApply",1679,11483],[10,"ChunkSet",1679,11483],[10,"ChunkShift",1679,11483],[10,"ChunkShiftFill",1679,11483],[10,"SlicedArray",1679,11484],[10,"ChunkVar",1679,11483],[10,"ChunkTake",1679,11483],[10,"ChunkTakeUnchecked",1679,11483],[10,"ChunkBytes",1679,11483],[10,"ChunkZip",1679,11483],[10,"BinaryFnMut",1885,11485],[10,"StaticArray",1996,11486],[10,"TernaryFnMut",1885,11485],[10,"Error",11487],[10,"UnaryFnMut",1885,11485],[5,"PrimitiveArray",11488],[6,"SearchSortedSide",1926,11489],[5,"NoNull",4256,11490],[5,"RowsEncoded",11491],[5,"NaiveDateTime",11492],[6,"Tz",11493],[5,"NaiveTime",11494],[5,"CategoricalChunked",1996,11495],[5,"CategoricalChunkedBuilder",1996,11496],[10,"ArrayFromIter",1996,11497],[10,"ArrayFromIterDtype",1996,11497],[5,"OsStr",11498],[5,"Path",11499],[10,"AsRefDataType",1996,11404],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11500],[10,"From",11421],[5,"BinaryViewArrayGeneric",11461],[6,"RevMapping",1996,11501],[10,"CategoricalMergeOperation",1996,11502],[10,"LogicalType",1996,11428],[6,"CategoricalOrdering",1996,11501],[5,"OwnedObject",1996,11425],[6,"UnknownKind",1996,11404],[5,"CompatLevel",1996,11404],[5,"CategoricalType",1996,11383],[6,"ArrowTimeUnit",1996],[6,"Ordering",11503],[10,"ArrayCollectIterExt",1996,11497],[5,"GlobalRevMapMerger",1996,11502],[1,"char"],[10,"FromIterator",11417],[10,"Into",11421],[10,"NumericNative",1996,11383],[5,"ArrowField",4256],[6,"IntegerType",11504],[6,"PrimitiveType",11505],[5,"TimeDelta",11506],[5,"NaiveDate",11507],[10,"GetAnyValue",1996,11425],[10,"IntoScalar",1996,11508],[5,"CatIter",1996,11495],[6,"Expr",4256,11509],[1,"u128"],[6,"PhysicalType",11504],[6,"ToCompactStringError",11412],[5,"Arguments",11416],[5,"StringCacheHolder",3469,11510],[5,"ErrString",3490,11385],[6,"PolarsWarning",3490,11511],[5,"TryReserveError",11512],[5,"Utf8Error",11513],[6,"Error",11514],[5,"Error",11515],[5,"Error",11516],[6,"ParquetError",11517],[10,"Display",11416],[5,"Schema",11518],[10,"IntoSeries",10867,11519],[6,"NullStrategy",3589,11451],[6,"UniqueKeepStrategy",3589,11451],[5,"HashSet",11520],[5,"Row",4144,11521],[5,"GroupBy",3886,11522],[5,"DynamicGroupOptions",4256,11523],[5,"RangeTo",11438],[5,"RangeFrom",11438],[5,"RangeToInclusive",11438],[5,"RangeFull",11438],[5,"RangeInclusive",11438],[5,"RecordBatchIter",3589,11451],[5,"PhysRecordBatchIter",3589,11451],[5,"LazyFrame",4256,11524],[5,"RollingGroupOptions",4256,11523],[10,"RangeBounds",11438],[10,"IntoVec",4256,11490],[6,"IndexOrder",4256,11525],[5,"StructArray",4256,11526],[5,"RecordBatchT",11527],[5,"Duration",4256,11528],[5,"UnpivotArgsIR",3857,11529],[5,"GroupsIdx",3886,11392],[5,"UnitVec",11530],[6,"GroupByMethod",3886,11522],[5,"SlicedGroups",3886,11392],[5,"GroupsProxyParIter",3886,11392],[10,"UnindexedConsumer",11531],[6,"GroupsIndicator",3886,11392],[6,"IRAggExpr",11532],[10,"IntoGroupsProxy",3886,11533],[5,"Copied",11534],[5,"Zip",11535],[5,"GroupsProxyIter",3886,11392],[10,"IsFloat",11536],[10,"NativeType",11537],[10,"AggList",4128,11538],[10,"TakeExtremum",4128,11539],[10,"PhysicalAggExpr",4141,11540],[6,"AnyValueBuffer",4144,11541],[6,"AnyValueBufferTrusted",4144,11541],[5,"Node",11542],[6,"IR",11543],[5,"Arena",11542],[6,"AExpr",11532],[10,"JoinDispatch",4256,11544],[5,"JoinArgs",4256,11545],[5,"StructNameSpace",4256,11546],[10,"SeriesTrait",10867,11431],[10,"DfTake",4256,11547],[10,"DataFrameOps",4256,11548],[5,"CsvReader",4256,11549],[10,"PhysicalIoExpr",11550],[10,"MmapBytesReader",11551],[10,"LhsNumOps",11328,11391],[6,"Selector",4256,11552],[10,"NumOpsDispatch",11328,11391],[5,"LazyGroupBy",4256,11524],[5,"OptFlags",4256,11553],[10,"Allocator",11554],[5,"JoinBuilder",4256,11524],[10,"AnonymousScan",4256,11555],[5,"ScanArgsAnonymous",4256,11556],[10,"FunctionOutputField",4256,11557],[5,"SpecialEq",4256,11557],[6,"VisitRecursion",11558],[6,"FunctionExpr",4256,11559],[10,"ArgAgg",4256,11560],[5,"ArrayNameSpace",4256,11561],[5,"ListNameSpace",4256,11562],[5,"FieldsMapper",4256,11563],[5,"IpcStreamReader",4256,11564],[10,"Read",11565],[10,"SeriesUdf",4256,11557],[10,"AsBinary",4256,11566],[10,"StringMethods",9793,11567],[5,"BorrowedFd",11568],[10,"AsFd",11568],[10,"AsList",4256,11569],[10,"AsRawFd",11570],[6,"AggExpr",4256,11509],[10,"SeriesSealed",4256,11571],[10,"AsString",4256,11572],[20,"MaybeUninit",11573],[10,"StringNameSpaceImpl",4256,11574],[5,"OwnedBatchedCsvReader",4256,11575],[5,"CsvWriter",4256,11576],[5,"BatchedWriter",11576],[10,"Write",11565],[5,"IpcWriter",4256,11577],[5,"BatchedWriter",11577],[5,"ParquetReader",4256,11578],[5,"BatchedParquetReader",4256,11579],[5,"ParquetWriter",4256,11580],[5,"BatchedWriter",11581],[5,"BatchedCsvReader",4256,11575],[5,"BinaryNameSpace",9698,11582],[6,"Operator",4256,11509],[10,"RenameAliasFn",4256,11557],[5,"UserDefinedFunction",4256,11583],[10,"SeriesBinaryUdf",4256,11557],[5,"InProcessQuery",4256,11584],[5,"HashMap",11585],[5,"CategoricalNameSpace",4256,11586],[10,"RoundSeries",4256,11587],[10,"TemporalMethods",10752,11588],[10,"NumOpsDispatchChecked",11349,11408],[5,"LazyCsvReader",4256,11589],[5,"ScanArgsIpc",4256,11590],[5,"LazyJsonLineReader",4256,11591],[5,"ScanArgsParquet",4256,11592],[5,"RollingOptionsDynamicWindow",4256,11593],[5,"Bounds",4256,11594],[6,"ClosedWindow",4256,11595],[6,"Label",4256,11595],[6,"StartBy",4256,11595],[5,"Window",4256,11596],[5,"CsvReadOptions",4256,11597],[5,"CsvParseOptions",4256,11597],[6,"CsvEncoding",4256,11597],[6,"CommentPrefix",4256,11597],[6,"NullValues",4256,11597],[5,"CsvWriterOptions",4256,11598],[6,"JoinCoalesce",4256,11545],[5,"SerializeOptions",4256,11598],[6,"JoinType",4256,11545],[6,"QuoteStyle",4256,11598],[6,"JoinValidation",4256,11545],[5,"IpcScanOptions",4256,11599],[5,"IpcWriterOptions",4256,11577],[5,"AsOfOptions",4256,11600],[6,"IpcCompression",4256,11577],[6,"AsofStrategy",4256,11600],[5,"JsonWriterOptions",4256,11601],[6,"InterpolationMethod",4256,11602],[6,"ClosedInterval",4256,11603],[5,"ParquetOptions",4256,11604],[6,"RankMethod",4256,11605],[6,"ParallelStrategy",4256,11604],[5,"RankOptions",4256,11605],[5,"ParquetWriteOptions",4256,11606],[6,"ParquetCompression",4256,11606],[5,"GzipLevel",4256,11606],[5,"BrotliLevel",4256,11606],[5,"ZstdLevel",4256,11606],[6,"DslPlan",4256,11607],[5,"When",4256,11608],[5,"Then",4256,11608],[5,"ChainedWhen",4256,11608],[5,"ChainedThen",4256,11608],[6,"Excluded",4256,11509],[6,"BooleanFunction",4256,11609],[6,"CategoricalFunction",4256,11610],[6,"TemporalFunction",4256,11611],[6,"PowFunction",4256,11612],[6,"StringFunction",4256,11613],[6,"StructFunction",4256,11614],[5,"StatisticsOptions",4256,11615],[5,"DatetimeArgs",4256,11616],[5,"DurationArgs",4256,11616],[5,"RollingCovOptions",4256,11617],[5,"StrptimeOptions",4256,11617],[5,"JoinOptions",4256,11617],[6,"WindowType",4256,11617],[6,"WindowMapping",4256,11617],[6,"NestedType",4256,11617],[5,"UnpivotArgsDSL",4256,11617],[5,"FileMetadata",4256,11618],[6,"LiteralValue",4256,11619],[5,"AnonymousScanOptions",4256,11620],[5,"UnionArgs",4256,11620],[5,"RollingVarParams",4256,11621],[5,"RollingQuantileParams",4256,11621],[6,"NonExistent",4256,11622],[10,"LazyFileListReader",4256,11623],[5,"CloudOptions",9929,11624],[10,"Ord",11503],[6,"ColumnOrder",11625],[10,"BinaryNameSpaceImpl",4256,11626],[5,"JsonLineReader",4256,11627],[10,"CrossJoin",4256,11628],[10,"ExprEvalExtension",4256,11629],[10,"DateMethods",9793,11630],[10,"DatetimeMethods",9793,11631],[10,"DurationMethods",9793,11632],[5,"IpcStreamWriterOption",4256,11564],[10,"BinaryUdfOutputField",4256,11557],[5,"CStr",11633],[10,"Default",11634],[5,"ParquetStatistics",4256],[5,"ColumnChunkMetadata",11635],[6,"NullBehavior",11355,11636],[5,"Weak",11436],[5,"DateLikeNameSpace",10315,11637],[10,"SeriesMethods",4256,11638],[10,"PartialEq",11503],[10,"Scalar",11639],[10,"ListNameSpaceExtension",4256,11640],[10,"Command",11641],[5,"PathBuf",11499],[10,"SerReader",4256,11642],[10,"SerWriter",4256,11642],[5,"IpcReader",4256,11599],[5,"IpcStreamWriter",4256,11564],[5,"JsonWriter",4256,11601],[5,"JsonReader",4256,11601],[10,"UdfSchema",4256,11643],[6,"BinaryFunction",11644],[6,"ArrayFunction",11645],[6,"RangeFunction",11646],[6,"ListFunction",11647],[5,"MutableStatistics",11648],[5,"CString",11649],[5,"OsString",11498],[1,"never"],[10,"ToOwned",11401],[5,"MutableStructArray",11650],[5,"GrowableStruct",11651],[10,"SchemaExt",4256,11652],[10,"FromData",10309,11653],[5,"Buffer",11654],[10,"FromDataUtf8",10309,11653],[10,"FromDataBinary",10309,11653],[5,"ListArray",11655],[6,"Ambiguous",4256,11622],[10,"NamedFromOwned",4256,11656],[10,"DataFrameJoinOps",4256,11657],[5,"FunctionOptions",11620],[10,"PartialOrd",11503],[6,"Context",11607],[5,"BoundsIter",4256,11596],[6,"ReaderBytes",11551],[10,"PolarsTemporalGroupby",4256,11523],[10,"Hash",11467],[10,"SeriesJoin",4256,11658],[10,"TimeMethods",9793,11659],[5,"NonZero",11660],[10,"IntoListNameSpace",4256,11640],[5,"StructValueIter",11661],[17,"DataType"],[10,"SchemaNamesAndDtypes",4256,11652],[10,"AsofJoinBy",4256,11662],[10,"ListNameSpaceImpl",4256,11663],[5,"ExprNameNameSpace",4256,11664],[5,"KeyValue",11665],[10,"IntoLazy",4256,11524],[10,"Literal",4256,11619],[5,"Null",4256,11619],[10,"CloneToUninit",11465],[5,"SuperTypeOptions",11666],[5,"RowIndex",11667],[10,"ChunkAggSeries",4256,11668],[10,"QuantileAggSeries",4256,11669],[10,"IndexToUsize",4256,11670],[10,"NamedFrom",4256,11656],[6,"RowGroupFetcher",11579],[6,"ScanSources",11671],[5,"SplitNChars",4256,11672],[5,"AnonymousScanArgs",4256,11555],[5,"Pin",11673],[5,"Request",11487],[10,"SeriesRank",4256,11605],[5,"BorrowedCursor",11674],[10,"VarInt",11675],[5,"IoSliceMut",11565],[10,"SeriesOpsTime",9793,11676],[10,"PolarsRound",4256,11677],[10,"ChunkedSet",4256,11442],[5,"SchemaDescriptor",11678],[6,"SeekFrom",11565],[10,"VarAggSeries",4256,11679],[5,"StringNameSpace",11680],[10,"TakeChunked",4256,11547],[5,"IRPlan",11543],[10,"ToDummies",4256,11681],[10,"PolarsTruncate",4256,11682],[5,"FileMetaData",11665],[5,"AllocError",11554],[5,"SchemaInferenceResult",10719,11683],[10,"PolarsUpsample",4256,11684],[10,"VecHash",4256,11685],[6,"JsonFormat",4256,11601],[5,"BTreeMap",11686],[10,"WriteDataFrameToFile",11642],[5,"IoSlice",11565],[5,"RowGroupMetadata",11687],[5,"MemSlice",11688],[6,"Filter",11689],[10,"ArrayNameSpace",9679,11690],[10,"AsArray",9679,11691],[6,"Buffer",9715,11692],[10,"AsString",9859,11567],[6,"Pattern",9859,11693],[5,"DatetimeInfer",9898,11694],[10,"StrpTimeParser",9898,11694],[17,"Error"],[10,"TryFromWithUnit",9898,11694],[6,"CloudType",9929,11624],[6,"SupportedCompression",9988,11695],[5,"AnonymousBuilder",10370,11696],[6,"RollingFunction",10612,11697],[6,"RollingFunctionBy",10643,11698],[5,"MutableNullArray",10688,11699],[5,"MutableBitmap",11700],[10,"AsSeries",10752,11588],[5,"Utf8Array",11701],[5,"SeriesIter",10867,11702],[5,"Rc",11703],[8,"FillNullLimit",1679],[10,"InitHashMaps",1996],[10,"InitHashMaps2",1996],[5,"TrueT",1996],[8,"PolarsResult",3490],[15,"IO",9608],[15,"Context",9608],[15,"Count",9602],[15,"Slice",9603],[8,"ChunkJoinOptIds",4256],[8,"DynArgs",4256],[10,"ListFromIter",4256],[15,"Quantile",9485],[15,"Min",9485],[15,"Max",9485],[15,"IsBetween",10565],[15,"Any",10565],[15,"All",10565],[15,"GroupBy",9495],[15,"Union",9495],[15,"Sort",9495],[15,"ExtContext",9495],[15,"DataFrameScan",9495],[15,"IR",9495],[15,"Select",9495],[15,"HStack",9495],[15,"Scan",9495],[15,"MapFunction",9495],[15,"Cache",9495],[15,"Filter",9495],[15,"Distinct",9495],[15,"Slice",9495],[15,"Sink",9495],[15,"Join",9495],[15,"HConcat",9495],[15,"SortBy",9545],[15,"Filter",9545],[15,"Cast",9545],[15,"Sort",9545],[15,"Gather",9545],[15,"RenameAlias",9545],[15,"Ternary",9545],[15,"Function",9545],[15,"Window",9545],[15,"AnonymousFunction",9545],[15,"Slice",9545],[15,"BinaryExpr",9545],[15,"Round",10568],[15,"RoundSF",10568],[15,"Clip",10568],[15,"BackwardFill",10568],[15,"ForwardFill",10568],[15,"Random",10568],[15,"GatherEvery",10568],[15,"ValueCounts",10568],[15,"Rank",10568],[15,"ReplaceStrict",10568],[15,"CumCount",10568],[15,"CumSum",10568],[15,"CumProd",10568],[15,"CumMin",10568],[15,"CumMax",10568],[15,"Range",9605],[15,"ConcatHorizontal",10590],[15,"ConcatVertical",10590],[15,"ExtractGroups",10590],[15,"SplitExact",10590],[15,"Contains",10590],[15,"Find",10590],[15,"Replace",10590],[15,"DatetimeFunction",10604],[5,"Utf8Field",9715],[5,"CategoricalField",9715],[5,"DatetimeField",9715],[15,"Datetime",9789],[10,"Utf8FromIter",10863],[10,"BinaryFromIter",10863],[6,"BitRepr",10867]],"r":[[1,11704],[2,11704],[3,11704],[4,11704],[6,11510],[7,11704],[8,11704],[9,11704],[13,11704],[14,11704],[16,11510],[17,11384],[18,11384],[19,11384],[24,11705],[116,11384],[139,11384],[140,11384],[168,11384],[170,11384],[225,11384],[277,11384],[426,11384],[476,11384],[581,11384],[584,11384],[725,11384],[856,11452],[884,11453],[885,11453],[886,11460],[887,11460],[888,11462],[889,11457],[890,11458],[891,11454],[892,11456],[893,11459],[894,11455],[895,11458],[896,11457],[897,11463],[898,11464],[899,11460],[1036,11457],[1052,11456],[1080,11457],[1145,11453],[1146,11453],[1147,11458],[1148,11454],[1149,11456],[1150,11459],[1151,11455],[1152,11458],[1160,11456],[1162,11407],[1191,11468],[1192,11468],[1205,11469],[1207,11470],[1208,11470],[1211,11432],[1212,11432],[1213,11432],[1214,11432],[1250,11432],[1266,11706],[1267,11706],[1273,11435],[1278,11413],[1279,11474],[1280,11473],[1281,11413],[1282,11413],[1283,11413],[1284,11434],[1285,11437],[1551,11393],[1552,11393],[1553,11393],[1554,11393],[1566,11393],[1597,11393],[1598,11707],[1628,11481],[1651,11482],[1652,11482],[1653,11482],[1654,11482],[1666,11482],[1667,11482],[1668,11482],[1671,11482],[1673,11482],[1680,11483],[1681,11483],[1682,11483],[1683,11483],[1684,11483],[1685,11483],[1686,11483],[1687,11483],[1688,11483],[1689,11483],[1690,11483],[1691,11483],[1692,11483],[1693,11483],[1694,11483],[1695,11483],[1696,11483],[1697,11483],[1698,11483],[1699,11483],[1700,11483],[1701,11483],[1702,11483],[1703,11483],[1704,11483],[1705,11483],[1706,11483],[1709,11483],[1710,11483],[1719,11483],[1720,11484],[1722,11406],[1723,11406],[1737,11483],[1782,11483],[1785,11483],[1794,11483],[1797,11483],[1840,11483],[1846,11483],[1883,11483],[1885,11485],[1889,11485],[1890,11485],[1891,11485],[1892,11485],[1893,11485],[1894,11485],[1895,11485],[1896,11485],[1897,11485],[1898,11485],[1899,11485],[1900,11485],[1901,11485],[1902,11485],[1903,11485],[1904,11485],[1905,11485],[1906,11485],[1907,11485],[1908,11485],[1909,11485],[1910,11485],[1911,11485],[1912,11485],[1913,11485],[1914,11485],[1915,11485],[1916,11485],[1917,11485],[1918,11485],[1919,11485],[1920,11485],[1921,11708],[1922,11708],[1923,11709],[1924,11709],[1925,11709],[1929,11489],[1931,11489],[1950,11489],[1956,11484],[1957,11710],[1958,11710],[1959,11710],[1960,11710],[1963,11711],[1964,11712],[1965,11712],[1966,11712],[1967,11712],[1968,11712],[1969,11712],[1970,11712],[1971,11712],[1972,11484],[1973,11406],[1974,11406],[1985,11713],[1986,11714],[1987,11714],[1988,11714],[1989,11713],[1990,11713],[1991,11715],[1992,11713],[1993,11714],[1994,11714],[1995,11714],[1997,11425],[2001,11383],[2002,11497],[2003,11497],[2004,11497],[2005,11478],[2007,11404],[2011,11383],[2013,11383],[2014,11383],[2016,11383],[2021,11383],[2022,11383],[2023,11495],[2026,11495],[2027,11496],[2028,11502],[2029,11501],[2030,11383],[2031,11404],[2032,11404],[2033,11404],[2034,11404],[2039,11716],[2040,11383],[2043,11717],[2044,11383],[2049,11718],[2050,11383],[2055,11719],[2056,11383],[2062,11383],[2063,11439],[2064,11439],[2067,11383],[2073,11383],[2074,11383],[2078,11383],[2079,11383],[2080,11425],[2082,11502],[2086,11720],[2087,11670],[2088,11720],[2089,11720],[2090,11721],[2091,11720],[2093,11383],[2094,11383],[2098,11383],[2099,11383],[2103,11383],[2104,11383],[2108,11383],[2109,11383],[2113,11383],[2114,11383],[2116,11508],[2127,11383],[2128,11383],[2130,11428],[2131,11428],[2143,11383],[2146,11383],[2148,11383],[2149,11425],[2153,11721],[2154,11721],[2155,11720],[2156,11721],[2157,11721],[2158,11721],[2159,11399],[2160,11383],[2161,11383],[2162,11383],[2163,11383],[2165,11501],[2167,11486],[2171,11383],[2173,11383],[2178,11383],[2183,11722],[2184,11383],[2185,11429],[2186,11404],[2189,11383],[2193,11383],[2194,11383],[2198,11383],[2199,11383],[2203,11383],[2204,11383],[2208,11383],[2209,11383],[2213,11404],[2389,11502],[2402,11428],[2526,11404],[3073,11502],[3074,11502],[3078,11404],[3446,11495],[3447,11495],[3448,11496],[3449,11502],[3450,11501],[3452,11502],[3456,11501],[3457,11502],[3459,11502],[3460,11502],[3461,11495],[3462,11495],[3463,11501],[3468,11501],[3469,11510],[3475,11510],[3478,11510],[3486,11510],[3496,11385],[3503,11385],[3504,11385],[3505,11511],[3521,11385],[3534,11385],[3550,11511],[3557,11385],[3559,11385],[3560,11385],[3561,11385],[3562,11385],[3563,11511],[3564,11385],[3586,11723],[3587,11723],[3588,11723],[3590,11451],[3595,11451],[3596,11451],[3598,11451],[3599,11451],[3673,11451],[3704,11451],[3772,11451],[3857,11529],[3886,11392],[3889,11522],[3890,11522],[3892,11392],[3893,11392],[3894,11392],[3895,11392],[3896,11392],[3897,11392],[3900,11392],[3902,11533],[3914,11392],[3923,11522],[3994,11522],[4004,11522],[4128,11538],[4129,11539],[4130,11539],[4131,11539],[4132,11539],[4133,11539],[4134,11539],[4135,11539],[4136,11539],[4137,11539],[4141,11540],[4146,11541],[4147,11541],[4167,11521],[4201,11521],[4222,11521],[4236,11521],[4237,11521],[4238,11521],[4254,11724],[4255,11725],[4259,11509],[4266,11553],[4268,11622],[4271,11555],[4272,11555],[4273,11620],[4279,11425],[4280,11436],[4281,11560],[4284,11452],[4289,11383],[4290,11497],[4292,11497],[4293,11497],[4294,11561],[4295,11395],[4296,11478],[4298,11726],[4300,11566],[4301,11569],[4303,11600],[4304,11404],[4305,11572],[4307,11600],[4308,11662],[4309,11600],[4312,11727],[4318,11575],[4319,11579],[4324,11383],[4325,11460],[4328,11626],[4330,11383],[4331,11383],[4333,11383],[4334,11557],[4341,11383],[4342,11462],[4343,11609],[4344,11383],[4345,11392],[4348,11594],[4349,11596],[4351,11606],[4359,11495],[4363,11495],[4364,11496],[4365,11610],[4366,11502],[4367,11586],[4368,11501],[4369,11383],[4373,11608],[4374,11608],[4375,11483],[4376,11668],[4377,11483],[4378,11483],[4379,11483],[4380,11483],[4381,11483],[4382,11483],[4383,11483],[4384,11483],[4385,11483],[4386,11483],[4387,11483],[4388,11483],[4389,11443],[4390,11545],[4391,11483],[4392,11483],[4393,11483],[4394,11483],[4395,11483],[4396,11483],[4397,11483],[4398,11483],[4399,11483],[4400,11483],[4401,11483],[4402,11483],[4403,11384],[4404,11457],[4405,11468],[4406,11468],[4407,11442],[4409,11603],[4410,11595],[4418,11597],[4419,11404],[4431,11628],[4432,11597],[4433,11597],[4434,11597],[4435,11549],[4436,11576],[4437,11598],[4444,11404],[4445,11404],[4446,11451],[4447,11657],[4448,11548],[4452,11404],[4460,11716],[4461,11630],[4463,11383],[4467,11616],[4468,11717],[4470,11631],[4471,11383],[4478,11718],[4479,11383],[4481,11547],[4488,11607],[4492,11528],[4498,11616],[4499,11719],[4500,11632],[4501,11383],[4502,11621],[4503,11523],[4513,11509],[4517,11509],[4518,11629],[4519,11664],[4528,11727],[4529,11727],[4530,11383],[4531,11439],[4535,11439],[4536,11563],[4537,11664],[4538,11618],[4539,11728],[4541,11483],[4542,11483],[4552,11383],[4560,11383],[4561,11383],[4566,11383],[4567,11383],[4575,11653],[4576,11653],[4577,11653],[4581,11559],[4582,11557],[4586,11425],[4588,11557],[4590,11502],[4591,11522],[4593,11522],[4595,11392],[4596,11392],[4597,11392],[4598,11392],[4599,11392],[4600,11392],[4605,11606],[4615,11720],[4616,11727],[4622,11670],[4623,11720],[4624,11392],[4625,11443],[4626,11720],[4629,11584],[4631,11525],[4632,11670],[4633,11721],[4634,11720],[4636,11545],[4639,11383],[4640,11383],[4645,11383],[4646,11383],[4651,11383],[4652,11383],[4657,11383],[4658,11383],[4663,11383],[4664,11383],[4668,11602],[4670,11533],[4671,11524],[4672,11640],[4673,11508],[4674,11519],[4675,11490],[4677,11577],[4678,11599],[4679,11599],[4680,11564],[4681,11564],[4682,11564],[4683,11577],[4684,11577],[4687,11483],[4691,11483],[4705,11545],[4706,11524],[4707,11545],[4708,11544],[4709,11617],[4711,11545],[4712,11545],[4715,11601],[4716,11627],[4718,11601],[4719,11601],[4720,11601],[4724,11595],[4726,11729],[4728,11729],[4729,11729],[4735,11589],[4736,11623],[4737,11524],[4738,11524],[4739,11591],[4746,11545],[4751,11391],[4758,11458],[4759,11454],[4760,11456],[4761,11383],[4763,11730],[4764,11562],[4765,11640],[4766,11663],[4767,11455],[4768,11458],[4769,11383],[4770,11619],[4772,11619],[4774,11428],[4777,11428],[4826,11619],[4831,11656],[4832,11656],[4844,11617],[4846,11457],[4848,11490],[4849,11622],[4861,11619],[4869,11597],[4870,11443],[4871,11443],[4872,11391],[4873,11408],[4874,11383],[4877,11383],[4879,11383],[4884,11509],[4885,11553],[4894,11575],[4895,11425],[4897,11731],[4900,11604],[4901,11606],[4902,11604],[4903,11578],[4905,11606],[4906,11580],[4909,11721],[4910,11721],[4911,11720],[4912,11721],[4913,11721],[4914,11721],[4915,11399],[4917,11383],[4918,11385],[4919,11383],[4920,11383],[4921,11432],[4922,11383],[4923,11393],[4924,11385],[4925,11677],[4926,11523],[4927,11682],[4929,11684],[4931,11612],[4934,11464],[4937,11669],[4938,11440],[4940,11598],[4949,11605],[4950,11605],[4951,11483],[4953,11557],[4961,11501],[4971,11617],[4974,11523],[4975,11593],[4976,11441],[4977,11621],[4978,11732],[4979,11621],[4984,11587],[4985,11733],[4993,11433],[4996,11556],[4997,11590],[4998,11592],[4999,11652],[5000,11652],[5003,11652],[5004,11652],[5005,11489],[5009,11552],[5011,11642],[5012,11642],[5013,11598],[5014,11387],[5016,11557],[5017,11658],[5018,11638],[5019,11676],[5020,11605],[5021,11571],[5022,11431],[5023,11557],[5036,11484],[5037,11392],[5044,11406],[5045,11406],[5046,11557],[5050,11672],[5052,11595],[5054,11486],[5055,11615],[5063,11510],[5065,11383],[5066,11460],[5068,11613],[5069,11567],[5070,11574],[5072,11383],[5079,11617],[5083,11526],[5084,11705],[5087,11614],[5088,11546],[5090,11383],[5100,11547],[5102,11611],[5103,11588],[5105,11608],[5113,11722],[5114,11659],[5116,11383],[5117,11429],[5118,11404],[5122,11681],[5136,11383],[5143,11383],[5144,11383],[5149,11383],[5150,11383],[5155,11383],[5156,11383],[5161,11383],[5162,11383],[5163,11734],[5164,11643],[5168,11620],[5170,11451],[5173,11404],[5174,11617],[5175,11529],[5178,11583],[5187,11679],[5188,11685],[5192,11608],[5194,11596],[5197,11617],[5198,11617],[5208,11606],[5301,11735],[5305,11736],[5306,11735],[5318,11737],[5329,11522],[5331,11738],[5334,11739],[5345,11739],[5356,11740],[5362,11741],[5365,11742],[5378,11743],[5383,11743],[5386,11483],[5396,11744],[5421,11745],[5425,11746],[5429,11747],[5437,11741],[5439,11608],[5700,11748],[5708,11502],[5713,11746],[5724,11741],[5739,11749],[5742,11750],[5744,11750],[5746,11750],[6028,11751],[6036,11739],[6040,11752],[6041,11738],[6043,11753],[6056,11738],[6065,11734],[6069,11753],[6071,11754],[6074,11753],[6075,11753],[6076,11754],[6077,11754],[6086,11730],[6087,11755],[6093,11756],[6094,11756],[6095,11404],[6101,11757],[6103,11739],[6104,11757],[6106,11757],[6108,11757],[6110,11739],[6111,11757],[6115,11704],[6117,11742],[6118,11744],[6119,11616],[6121,11742],[6122,11742],[6123,11714],[6124,11714],[6125,11714],[6190,11730],[6191,11544],[6450,11648],[6452,11704],[6454,11758],[6598,11759],[6599,11741],[6608,11738],[6609,11738],[6611,11616],[6619,11528],[6620,11528],[6621,11652],[6882,11731],[6883,11731],[6884,11731],[6890,11522],[6911,11483],[6948,11741],[6952,11730],[6956,11483],[6961,11760],[7064,11522],[7068,11739],[7072,11754],[7290,11483],[7300,11741],[7302,11483],[7327,11731],[7337,11727],[7349,11595],[7350,11595],[7431,11761],[7442,11762],[7443,11763],[7444,11763],[7446,11764],[7458,11738],[7461,11670],[7462,11683],[7596,11742],[7597,11742],[7599,11765],[7600,11602],[7602,11765],[7603,11766],[7751,11603],[7753,11731],[7761,11767],[7766,11768],[7769,11769],[7778,11746],[7781,11746],[7788,11755],[7823,11741],[7838,11741],[7847,11619],[7895,11502],[7896,11502],[7901,11740],[7912,11741],[7915,11741],[7923,11770],[7924,11727],[7925,11746],[7936,11746],[7942,11746],[7952,11404],[7961,11746],[7982,11744],[8020,11744],[8031,11771],[8032,11772],[8079,11773],[8103,11746],[8108,11741],[8109,11730],[8142,11727],[8160,11385],[8161,11385],[8162,11385],[8163,11385],[8168,11657],[8177,11746],[8208,11739],[8215,11601],[8219,11774],[8220,11775],[8222,11776],[8229,11776],[8230,11776],[8232,11763],[8234,11731],[8325,11748],[8329,11483],[8342,11749],[8393,11483],[8413,11672],[8415,11672],[8433,11761],[8443,11744],[8444,11777],[8446,11777],[8448,11777],[8450,11777],[8452,11777],[8467,11746],[8492,11608],[8496,11742],[9078,11741],[9103,11730],[9265,11608],[9475,11778],[9483,11483],[9628,11779],[9629,11780],[9630,11538],[9631,11539],[9632,11539],[9633,11539],[9634,11539],[9635,11539],[9636,11539],[9637,11539],[9638,11539],[9639,11539],[9643,11485],[9647,11485],[9648,11485],[9649,11485],[9650,11485],[9651,11485],[9652,11485],[9653,11485],[9654,11485],[9655,11485],[9656,11485],[9657,11485],[9658,11485],[9659,11485],[9660,11485],[9661,11485],[9662,11485],[9663,11485],[9664,11485],[9665,11485],[9666,11485],[9667,11485],[9668,11485],[9669,11485],[9670,11485],[9671,11485],[9672,11485],[9673,11485],[9674,11485],[9675,11485],[9676,11485],[9677,11485],[9678,11485],[9679,11690],[9680,11691],[9698,11582],[9716,11692],[9718,11692],[9721,11692],[9735,11692],[9767,11692],[9792,11586],[9793,11630],[9794,11631],[9795,11632],[9796,11593],[9797,11676],[9798,11567],[9799,11659],[9852,11781],[9859,11567],[9865,11693],[9866,11567],[9889,11567],[9898,11694],[9900,11694],[9901,11694],[9912,11694],[9931,11624],[9932,11624],[9968,11782],[9981,11624],[9982,11624],[9989,11695],[10001,11695],[10007,11425],[10011,11383],[10012,11497],[10013,11497],[10014,11497],[10015,11478],[10017,11404],[10021,11383],[10023,11383],[10024,11383],[10026,11383],[10031,11383],[10032,11383],[10033,11495],[10036,11495],[10037,11496],[10038,11502],[10039,11501],[10040,11383],[10041,11404],[10042,11404],[10043,11404],[10044,11404],[10049,11716],[10050,11383],[10053,11717],[10054,11383],[10059,11718],[10060,11383],[10065,11719],[10066,11383],[10070,11383],[10071,11439],[10072,11439],[10075,11383],[10081,11383],[10082,11383],[10086,11383],[10087,11383],[10088,11425],[10090,11502],[10094,11720],[10095,11670],[10096,11720],[10097,11720],[10098,11721],[10099,11720],[10101,11383],[10102,11383],[10106,11383],[10107,11383],[10111,11383],[10112,11383],[10116,11383],[10117,11383],[10121,11383],[10122,11383],[10124,11508],[10135,11383],[10136,11383],[10138,11428],[10139,11428],[10151,11383],[10154,11383],[10156,11383],[10157,11425],[10161,11721],[10162,11721],[10163,11720],[10164,11721],[10165,11721],[10166,11721],[10167,11399],[10168,11383],[10169,11383],[10170,11383],[10171,11383],[10173,11501],[10175,11486],[10179,11383],[10181,11383],[10186,11383],[10191,11722],[10192,11383],[10193,11429],[10194,11404],[10197,11383],[10201,11383],[10202,11383],[10206,11383],[10207,11383],[10211,11383],[10212,11383],[10216,11383],[10217,11383],[10221,11404],[10234,11502],[10237,11428],[10242,11404],[10259,11502],[10260,11502],[10261,11404],[10279,11495],[10280,11495],[10281,11496],[10282,11502],[10283,11501],[10285,11502],[10289,11501],[10290,11502],[10292,11502],[10293,11502],[10294,11495],[10295,11495],[10296,11501],[10301,11501],[10302,11510],[10303,11510],[10304,11510],[10305,11510],[10306,11763],[10307,11763],[10308,11763],[10309,11653],[10310,11653],[10311,11653],[10315,11637],[10367,11540],[10370,11696],[10390,11708],[10391,11708],[10406,11609],[10409,11610],[10448,11559],[10491,11612],[10523,11613],[10531,11614],[10536,11611],[10561,11559],[10562,11559],[10563,11559],[10564,11559],[10606,11610],[10610,11612],[10616,11697],[10647,11698],[10674,11709],[10675,11709],[10676,11709],[10677,11602],[10680,11602],[10681,11766],[10682,11783],[10683,11784],[10684,11784],[10685,11784],[10686,11784],[10687,11784],[10688,11699],[10719,11683],[10730,11683],[10735,11683],[10736,11683],[10749,11489],[10750,11489],[10751,11489],[10752,11588],[10753,11588],[10774,11484],[10775,11710],[10776,11710],[10777,11710],[10778,11710],[10781,11711],[10782,11712],[10783,11712],[10784,11712],[10785,11712],[10786,11712],[10787,11712],[10788,11712],[10789,11712],[10790,11484],[10791,11406],[10792,11406],[10803,11572],[10804,11672],[10805,11574],[10824,11761],[10832,11672],[10834,11672],[10837,11761],[10843,11777],[10845,11777],[10847,11777],[10849,11777],[10851,11777],[10857,11583],[10863,11785],[10864,11785],[10868,11431],[10869,11483],[10871,11519],[10872,11431],[10876,11387],[10877,11702],[10878,11702],[10879,11431],[10890,11387],[10896,11387],[11085,11387],[11207,11387],[11304,11402],[11305,11402],[11328,11391],[11329,11391],[11330,11391],[11332,11391],[11336,11391],[11349,11408],[11350,11408],[11357,11636]],"b":[[29,"impl-Add-for-ChunkedArray%3CStringType%3E"],[30,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[31,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[32,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[33,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add-for-ChunkedArray%3CT%3E"],[35,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CT%3E"],[37,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[38,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[39,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[40,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[42,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[43,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[44,"impl-AggList-for-ChunkedArray%3CT%3E"],[45,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[46,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[47,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[48,"impl-AggList-for-ChunkedArray%3CListType%3E"],[49,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[52,"impl-ChunkedArray%3CFixedSizeListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[59,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[60,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[61,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[62,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[63,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[64,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[66,"impl-ChunkedArray%3CFixedSizeListType%3E"],[67,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[79,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[81,"impl-ChunkedArray%3CT%3E"],[82,"impl-ChunkedArray%3CBinaryType%3E"],[83,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CFixedSizeListType%3E"],[86,"impl-ChunkedArray%3CListType%3E"],[87,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[88,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[89,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[92,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[93,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[94,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[95,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[96,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[97,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[98,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[100,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[101,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[102,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[103,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[104,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[105,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[106,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[107,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[108,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[110,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[118,"impl-ChunkedArray%3CStringType%3E"],[119,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[157,"impl-ChunkedArray%3CStructType%3E"],[160,"impl-ChunkedArray%3CT%3E"],[161,"impl-Container-for-ChunkedArray%3CT%3E"],[181,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[182,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[183,"impl-Div-for-ChunkedArray%3CT%3E"],[184,"impl-Div-for-%26ChunkedArray%3CT%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[192,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[196,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[198,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[201,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[202,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[203,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[204,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[207,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[211,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[212,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[216,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[217,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[218,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[221,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[222,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[226,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[227,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[228,"impl-Debug-for-ChunkedArray%3CT%3E"],[229,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[230,"impl-Debug-for-ChunkedArray%3CListType%3E"],[231,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[232,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[234,"impl-ChunkedArray%3CFixedSizeListType%3E"],[235,"impl-ChunkedArray%3CListType%3E"],[243,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[244,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[246,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[247,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[248,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[249,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[250,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[251,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[252,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[253,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[254,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[255,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[256,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[257,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[258,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[259,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[260,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[261,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[262,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[265,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[266,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[269,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[270,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[271,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[272,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[273,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[274,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[275,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[276,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[278,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[279,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[280,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[281,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[282,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[283,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[284,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[285,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[289,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[290,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[291,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[292,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[293,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[294,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[295,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[296,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[297,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[298,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[299,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[303,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[304,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[305,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[306,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[307,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[308,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[309,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[310,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[311,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[320,"impl-ChunkedArray%3CListType%3E"],[321,"impl-ChunkedArray%3CFixedSizeListType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[341,"impl-ChunkedArray%3CListType%3E"],[342,"impl-ChunkedArray%3CFixedSizeListType%3E"],[346,"impl-ChunkedArray%3CListType%3E"],[347,"impl-ChunkedArray%3CFixedSizeListType%3E"],[355,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[356,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[358,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[359,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[360,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[368,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[369,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[370,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[372,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[373,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[374,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[375,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[377,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[378,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[379,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[380,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[381,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[382,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[383,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[384,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[385,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[391,"impl-ChunkedArray%3CListType%3E"],[392,"impl-ChunkedArray%3CFixedSizeListType%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[408,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[410,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[411,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ChunkedArray%3CT%3E"],[438,"impl-Container-for-ChunkedArray%3CT%3E"],[443,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[444,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[446,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[447,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[449,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[450,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[451,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[453,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[454,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[455,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[456,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[457,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[458,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[459,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[460,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[461,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[462,"impl-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[465,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[466,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[467,"impl-ChunkedArray%3CBooleanType%3E"],[468,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[470,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[471,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[472,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[473,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[474,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[482,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[483,"impl-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[486,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[487,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[489,"impl-ChunkedArray%3CBooleanType%3E"],[490,"impl-ChunkedArray%3CT%3E"],[491,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[492,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[493,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[494,"impl-Mul-for-ChunkedArray%3CT%3E"],[497,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[498,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[499,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[501,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[502,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[503,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[504,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[505,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[507,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[508,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[509,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[511,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[513,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[515,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[516,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[520,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[523,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[525,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[529,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[530,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[531,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[532,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[533,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[535,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[536,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[537,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[538,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[539,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[540,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[541,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[542,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[544,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[545,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[546,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[547,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[548,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[549,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[550,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[551,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[552,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[558,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[559,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[560,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[561,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[562,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[564,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[565,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[566,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[567,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[568,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[569,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[570,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[571,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[572,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[575,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[578,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[579,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[582,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[583,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[585,"impl-ChunkedArray%3CListType%3E"],[586,"impl-ChunkedArray%3CStringType%3E"],[587,"impl-ChunkedArray%3CListType%3E"],[588,"impl-ChunkedArray%3CStringType%3E"],[591,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[592,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[593,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[594,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[595,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[596,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[625,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[626,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[627,"impl-Rem-for-ChunkedArray%3CT%3E"],[628,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[643,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[644,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[645,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[646,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[647,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[648,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[649,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[650,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[651,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[652,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[653,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[654,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[655,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[656,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[657,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[663,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[664,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[665,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[666,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[667,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[668,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[669,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[670,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[671,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[672,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[673,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[674,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[675,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[676,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[677,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[678,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[679,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[681,"impl-ChunkedArray%3CT%3E"],[682,"impl-Container-for-ChunkedArray%3CT%3E"],[683,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[684,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[685,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[686,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[687,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[688,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[689,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[690,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[691,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[692,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[693,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[694,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[695,"impl-Container-for-ChunkedArray%3CT%3E"],[696,"impl-ChunkedArray%3CT%3E"],[698,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[699,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[700,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[702,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[703,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[704,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[705,"impl-Sub-for-ChunkedArray%3CT%3E"],[707,"impl-ChunkedArray%3CBooleanType%3E"],[708,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[709,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[710,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[711,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[713,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[714,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[718,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[720,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[721,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[722,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[723,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[724,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[729,"impl-ChunkedArray%3CFixedSizeListType%3E"],[730,"impl-ChunkedArray%3CListType%3E"],[731,"impl-ChunkedArray%3CT%3E"],[732,"impl-ChunkedArray%3CListType%3E"],[737,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[738,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[739,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[740,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[741,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[742,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[744,"impl-ChunkedArray%3CFixedSizeListType%3E"],[745,"impl-ChunkedArray%3CListType%3E"],[759,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[760,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[761,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[762,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[763,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[769,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[770,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[771,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[772,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[773,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[777,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[779,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[782,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[786,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[787,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[789,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[793,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[795,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[797,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[815,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[854,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[855,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[1031,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1032,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1306,"impl-Flags-for-MetadataProperties"],[1307,"impl-MetadataProperties"],[1308,"impl-MetadataFlags"],[1309,"impl-Flags-for-MetadataFlags"],[1371,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1372,"impl-Metadata%3CT%3E"],[1397,"impl-Octal-for-MetadataProperties"],[1398,"impl-Debug-for-MetadataProperties"],[1399,"impl-Binary-for-MetadataProperties"],[1400,"impl-LowerHex-for-MetadataProperties"],[1401,"impl-UpperHex-for-MetadataProperties"],[1402,"impl-LowerHex-for-MetadataFlags"],[1403,"impl-Debug-for-MetadataFlags"],[1404,"impl-UpperHex-for-MetadataFlags"],[1405,"impl-Binary-for-MetadataFlags"],[1406,"impl-Octal-for-MetadataFlags"],[1416,"impl-MetadataProperties"],[1417,"impl-Flags-for-MetadataProperties"],[1418,"impl-Flags-for-MetadataFlags"],[1419,"impl-MetadataFlags"],[1430,"impl-Metadata%3CT%3E"],[1431,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1474,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1475,"impl-Metadata%3CT%3E"],[1479,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1480,"impl-Metadata%3CT%3E"],[1557,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1558,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1593,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1594,"impl-ObjectArray%3CT%3E"],[1609,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1610,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1620,"impl-ObjectArray%3CT%3E"],[1621,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1622,"impl-ObjectArray%3CT%3E"],[1623,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1625,"impl-ObjectArray%3CT%3E"],[1626,"impl-Array-for-ObjectArray%3CT%3E"],[1629,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1630,"impl-ObjectChunkedBuilder%3CT%3E"],[1632,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1633,"impl-ObjectChunkedBuilder%3CT%3E"],[2288,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2289,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2290,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2291,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2393,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2394,"impl-Logical%3CDurationType,+Int64Type%3E"],[2396,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2397,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2398,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2399,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2400,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2686,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2687,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2688,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2689,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2690,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2701,"impl-PartialEq-for-DataType"],[2702,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2709,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2710,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2711,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2712,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2713,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2714,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2747,"impl-Debug-for-PlSmallStr"],[2748,"impl-Display-for-PlSmallStr"],[2752,"impl-Debug-for-AnyValue%3C\'a%3E"],[2753,"impl-Display-for-AnyValue%3C\'_%3E"],[2755,"impl-Display-for-DataType"],[2756,"impl-Debug-for-DataType"],[2759,"impl-Display-for-TimeUnit"],[2760,"impl-Debug-for-TimeUnit"],[2764,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2765,"impl-From%3C%26String%3E-for-PlSmallStr"],[2766,"impl-From%3CString%3E-for-PlSmallStr"],[2767,"impl-From%3C%26str%3E-for-PlSmallStr"],[2770,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2771,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2785,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2786,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2787,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2788,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2789,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2793,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2794,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2795,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2797,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2798,"impl-From%3C%26ArrowField%3E-for-Field"],[2823,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2824,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2831,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2832,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2833,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2834,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2835,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2836,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2837,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2838,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2856,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2857,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2858,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2859,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2860,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2863,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2864,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2865,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2866,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2867,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2903,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2904,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2905,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2906,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2907,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2908,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3013,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3014,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3015,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3016,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3017,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3067,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3068,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3069,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3070,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3071,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3072,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3107,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3108,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3109,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3110,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3111,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3112,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3113,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3114,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3120,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3121,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3122,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3123,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3124,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3125,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3128,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3129,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3149,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3150,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3156,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3157,"impl-Logical%3CDurationType,+Int64Type%3E"],[3163,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3164,"impl-Logical%3CDateType,+Int32Type%3E"],[3165,"impl-Logical%3CTimeType,+Int64Type%3E"],[3180,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3181,"impl-Logical%3CDurationType,+Int64Type%3E"],[3231,"impl-Logical%3CTimeType,+Int64Type%3E"],[3232,"impl-Logical%3CDateType,+Int32Type%3E"],[3233,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3238,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3239,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3536,"impl-Display-for-ErrString"],[3537,"impl-Debug-for-ErrString"],[3538,"impl-Display-for-PolarsError"],[3539,"impl-Debug-for-PolarsError"],[3543,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3544,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3545,"impl-From%3CError%3E-for-PolarsError"],[3546,"impl-From%3CError%3E-for-PolarsError"],[3548,"impl-From%3CError%3E-for-PolarsError"],[3549,"impl-From%3CParquetError%3E-for-PolarsError"],[3682,"impl-Display-for-DataFrame"],[3683,"impl-Debug-for-DataFrame"],[3715,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3716,"impl-Index%3Cusize%3E-for-DataFrame"],[3717,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3718,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3719,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3720,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3721,"impl-Index%3C%26str%3E-for-DataFrame"],[3722,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3741,"impl-Container-for-DataFrame"],[3742,"impl-DataFrame"],[3749,"impl-Container-for-DataFrame"],[3750,"impl-DataFrame"],[3792,"impl-DataFrame"],[3793,"impl-Container-for-DataFrame"],[3797,"impl-DataFrame"],[3798,"impl-Container-for-DataFrame"],[3821,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3823,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[4002,"impl-Debug-for-GroupByMethod"],[4003,"impl-Display-for-GroupByMethod"],[4010,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4011,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4012,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4045,"impl-IntoIterator-for-%26GroupsIdx"],[4046,"impl-IntoIterator-for-GroupsIdx"],[4048,"impl-IntoParallelIterator-for-GroupsIdx"],[4049,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5389,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5390,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5394,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5395,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5423,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5424,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5447,"impl-Flags-for-OptFlags"],[5448,"impl-OptFlags"],[6168,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6169,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6170,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6180,"impl-Default-for-Arc%3CCStr%3E"],[6181,"impl-Default-for-Arc%3Cstr%3E"],[6182,"impl-Default-for-Arc%3CT%3E"],[6183,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6662,"impl-Expr"],[6663,"impl-PartialEq-for-Expr"],[6666,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6667,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6686,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6687,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6688,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6693,"impl-PartialEq-for-StructArray"],[6694,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6970,"impl-Display-for-Duration"],[6971,"impl-Debug-for-Duration"],[6988,"impl-Display-for-JoinType"],[6989,"impl-Debug-for-JoinType"],[6991,"impl-Display-for-JoinValidation"],[6992,"impl-Debug-for-JoinValidation"],[7010,"impl-Debug-for-Expr"],[7011,"impl-Display-for-Expr"],[7013,"impl-Debug-for-Operator"],[7014,"impl-Display-for-Operator"],[7016,"impl-Display-for-BooleanFunction"],[7017,"impl-Debug-for-BooleanFunction"],[7018,"impl-Display-for-CategoricalFunction"],[7019,"impl-Debug-for-CategoricalFunction"],[7020,"impl-Display-for-TemporalFunction"],[7021,"impl-Debug-for-TemporalFunction"],[7022,"impl-Display-for-PowFunction"],[7023,"impl-Debug-for-PowFunction"],[7024,"impl-Display-for-StringFunction"],[7025,"impl-Debug-for-StringFunction"],[7026,"impl-Display-for-StructFunction"],[7027,"impl-Debug-for-StructFunction"],[7028,"impl-Debug-for-FunctionExpr"],[7029,"impl-Display-for-FunctionExpr"],[7043,"impl-Binary-for-OptFlags"],[7044,"impl-Debug-for-OptFlags"],[7045,"impl-Octal-for-OptFlags"],[7046,"impl-LowerHex-for-OptFlags"],[7047,"impl-UpperHex-for-OptFlags"],[7050,"impl-Debug-for-Arc%3CT,+A%3E"],[7051,"impl-Display-for-Arc%3CT,+A%3E"],[7052,"impl-Pointer-for-Arc%3CT,+A%3E"],[7083,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7084,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7161,"impl-From%3CAggExpr%3E-for-Expr"],[7162,"impl-From%3Ci16%3E-for-Expr"],[7163,"impl-From%3Cbool%3E-for-Expr"],[7164,"impl-From%3C%26str%3E-for-Expr"],[7165,"impl-From%3Cu16%3E-for-Expr"],[7166,"impl-From%3Cf32%3E-for-Expr"],[7167,"impl-From%3Cf64%3E-for-Expr"],[7168,"impl-From%3Cu32%3E-for-Expr"],[7170,"impl-From%3Cu8%3E-for-Expr"],[7171,"impl-From%3Ci64%3E-for-Expr"],[7172,"impl-From%3Ci32%3E-for-Expr"],[7173,"impl-From%3Ci8%3E-for-Expr"],[7174,"impl-From%3Cu64%3E-for-Expr"],[7177,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7178,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7179,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7180,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7181,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7182,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7183,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7184,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7185,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7186,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7194,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7196,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7197,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7198,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7212,"impl-From%3CExpr%3E-for-Selector"],[7213,"impl-From%3CString%3E-for-Selector"],[7214,"impl-From%3C%26str%3E-for-Selector"],[7215,"impl-From%3CPlSmallStr%3E-for-Selector"],[7221,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7222,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7223,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7224,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7225,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7227,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7228,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7229,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7230,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7231,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7233,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7234,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7235,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7236,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7237,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7238,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7245,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7246,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7255,"impl-OptFlags"],[7256,"impl-Flags-for-OptFlags"],[7261,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7262,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7270,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7271,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7284,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7285,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8382,"impl-Array-for-StructArray"],[8383,"impl-StructArray"],[8389,"impl-StructArray"],[8390,"impl-Array-for-StructArray"],[8654,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8655,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8659,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[8660,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9106,"impl-StructArray"],[9107,"impl-Array-for-StructArray"],[9357,"impl-LazyCsvReader"],[9358,"impl-LazyFileListReader-for-LazyCsvReader"],[9359,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9360,"impl-LazyJsonLineReader"],[9401,"impl-LazyCsvReader"],[9402,"impl-LazyFileListReader-for-LazyCsvReader"],[9403,"impl-LazyJsonLineReader"],[9404,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9447,"impl-StructArray"],[9448,"impl-Array-for-StructArray"],[9918,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9919,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9924,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9925,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10630,"impl-Display-for-RollingFunction"],[10631,"impl-Debug-for-RollingFunction"],[10661,"impl-Display-for-RollingFunctionBy"],[10662,"impl-Debug-for-RollingFunctionBy"],[10886,"impl-Add-for-%26Series"],[10887,"impl-Add%3CT%3E-for-Series"],[10888,"impl-Add%3CT%3E-for-%26Series"],[10889,"impl-Add-for-Series"],[10905,"impl-AsSeries-for-Series"],[10906,"impl-SeriesSealed-for-Series"],[10958,"impl-Div%3CT%3E-for-Series"],[10959,"impl-Div%3CT%3E-for-%26Series"],[10960,"impl-Div-for-%26Series"],[10961,"impl-Div-for-Series"],[10972,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10973,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10974,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10976,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10977,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10978,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10994,"impl-Display-for-Series"],[10995,"impl-Debug-for-Series"],[11000,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11001,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11003,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11004,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11005,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11011,"impl-FromIterator%3C%26f64%3E-for-Series"],[11012,"impl-FromIterator%3Cu32%3E-for-Series"],[11013,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11014,"impl-FromIterator%3C%26i32%3E-for-Series"],[11015,"impl-FromIterator%3Ci64%3E-for-Series"],[11016,"impl-FromIterator%3Ci32%3E-for-Series"],[11017,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11018,"impl-FromIterator%3C%26i64%3E-for-Series"],[11019,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11020,"impl-FromIterator%3C%26i16%3E-for-Series"],[11021,"impl-FromIterator%3Ci16%3E-for-Series"],[11022,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11023,"impl-FromIterator%3Cbool%3E-for-Series"],[11024,"impl-FromIterator%3C%26bool%3E-for-Series"],[11025,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11026,"impl-FromIterator%3C%26i8%3E-for-Series"],[11027,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11028,"impl-FromIterator%3C%26u32%3E-for-Series"],[11029,"impl-FromIterator%3C%26f32%3E-for-Series"],[11030,"impl-FromIterator%3C%26str%3E-for-Series"],[11031,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11032,"impl-FromIterator%3Ci8%3E-for-Series"],[11033,"impl-FromIterator%3CString%3E-for-Series"],[11034,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11035,"impl-FromIterator%3C%26u64%3E-for-Series"],[11036,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11037,"impl-FromIterator%3Cu8%3E-for-Series"],[11038,"impl-FromIterator%3C%26u8%3E-for-Series"],[11039,"impl-FromIterator%3Cu64%3E-for-Series"],[11040,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11041,"impl-FromIterator%3Cu16%3E-for-Series"],[11042,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11043,"impl-FromIterator%3Cf64%3E-for-Series"],[11044,"impl-FromIterator%3C%26u16%3E-for-Series"],[11045,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11046,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11047,"impl-FromIterator%3Cf32%3E-for-Series"],[11048,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11049,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11050,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11051,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11052,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11053,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11054,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11055,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11056,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11057,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11058,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11070,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11071,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11072,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11074,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11075,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11076,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11117,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11118,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11119,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11121,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11122,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11123,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11132,"impl-Mul-for-%26Series"],[11133,"impl-Mul-for-Series"],[11134,"impl-Mul%3CT%3E-for-Series"],[11135,"impl-Mul%3CT%3E-for-%26Series"],[11140,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11141,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11142,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11143,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11144,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11145,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11146,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11147,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11148,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11149,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11150,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11151,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11152,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11153,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11154,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11155,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11156,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11157,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11158,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11159,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11160,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11161,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11162,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11163,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11164,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11165,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11166,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11167,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11168,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11169,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11170,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11171,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11172,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11173,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11174,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11175,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11176,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11177,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11178,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11179,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11180,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11181,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11182,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11183,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11184,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11185,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11186,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11187,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11188,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11189,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11190,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11191,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11192,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11198,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11199,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11200,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11202,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11203,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11204,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11212,"impl-Rem-for-%26Series"],[11213,"impl-Rem%3CT%3E-for-Series"],[11214,"impl-Rem%3CT%3E-for-%26Series"],[11243,"impl-Sub-for-%26Series"],[11244,"impl-Sub%3CT%3E-for-Series"],[11245,"impl-Sub-for-Series"],[11246,"impl-Sub%3CT%3E-for-%26Series"],[11270,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11271,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11272,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11274,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAFMPng/aD90P3g/fD+AP4Q/mD+kP7g/vDxUQ","e":"OzAAAAEAAMcgVwQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAIAGIAAQBlAAUAbQABAHAABAB2ABYAjgAAAJAAEACiAAAApQADAKoAAgCxAA0AwAAVANgACADiAAoA7gAAAPAAAQD0ABwAFwEVAC8BEwBEAQUASwEPAF0BAQBhAQEAZAEeAIUBAgCNARAAnwEDAKYBAgCrAQIArwEGALcBAAC8ASEA4wEGAOwBCAD2ATUALwIVAEYCAgBKAgQAUAIFAFoCAABcAhoAeAIHAIQCEQCYAhAAqwINALoCDgDMAgEA0wICANcCAQDeAgAA4gIGAOoCAADsAgIA8AINAP8CAAABAygALAMCADADIwBXAzUAjwMIAJwDEQCxA1wAGwQSADkEBwBCBEkAjwQOAJ8EAQCiBBkAvQQAAMAEDgDSBAIA2AQCAN0EHAD7BAkABgUKABsFAAAeBQAAIwUdAEUFEgBaBQAAXAUJAGgFAwBuBQEAcgUNAIoFAQCTBQcAnAUHALEFAQC1BQAAuAUDAMAFBQDHBQQA0wULAOYFBADtBQ0A/QUGAAcGBwAQBgEAFAYXAC0GBwA2BgAAOAYAADoGAAA8BgEAQQYQAFMGAABWBgMAWwYDAGAGAQBjBgcAbAYAAG4GBQB2BgEAeQYAAHsGAQB+BgMAgwYDAIgGAgCMBgMAkgYAAJUGAACdBgAAogYAAKUGAQCqBgEArQYAALAGAAC4BgAAvgYDAMoGBgDUBhAA5wYFAO8GCAD6BgQAAAcAAAMHAAAFBwEACwcFABQHAQAdBwEAKQcAACsHAQAuBwAAMQcAADMHAAA3BwAAOQcAAD4HDABNBwIAXAcAAF4HBwBnBwEAagcAAG4HAABwBwMAdQcBAHgHBQCEBxYAnAcBAKAHBACmBwMArQcHAMIHAwDHBwgA0QcEANgHAgDcBwUA5AcAAOYHDQD4BwEA/AcBAAIIAQAFCAEACAgFAA8IAAARCAAAFAgBABgIAAAaCAEAHQgAAB8IAgAjCAwAMQgAADMIAQA2CAAAOAgBADsIAAA9CAEAQAgAAEIIAQBFCAMATAgAAFAIAQBUCAAAVwgAAFkIAABbCAMAYAgAAGMICABtCAIAcggEAHgIAQB8CAAAfggCAIIIAQCICAMAjQgBAJAIAACSCAEAlQgAAJcIAQCaCAAAnAgBAJ8IAAChCAEApAgAAKYIAACpCCUA0AgXAOkIAwDuCGoAXAl5ANcJCADhCZwAfwoFAIcKMAC5ChIAzQoDANMKAQDiCgQA6goCAO4KAQDyCgAACAsBAAsLAAAQCwcAGwsAAB4LAgAiCwUAKQsEAC8LBQA2CwAAOAsaAFgLDgBpCywAlwsAAMQLBwDNCwAAzwsAANELAgDVCwMA2gsBAN8LAADhCwcA6gsAAO0LAgDyCwMA9wsAAPoLDgALDAAADgwOAB4MAAAhDAsALgwNAD0MAQBADAAAQgwNAFEMAABZDAAAWwwAAGAMEABzDAAAdQwCAHoMIQCeDAEAowxmAAsNMgA/DQEAQg05AH0NAQCADQgAig0AAIwNAQCPDQQAlQ0BAJoNAACcDQIAoA0AAKMNBACpDQQArw0SAMMNEQDWDQAA2A0DAN0NBQDmDQUA7Q0YAAkOAAAMDgoAGA4DACEOFAA4DhAAUg4BAFYOAgBaDgAAXA4AAGEOAwByDgAAeQ4AAHsOAAB9DgEAhA4MAJcOAgCeDgAAog4AAKYOAACtDgEAvA4BAMAOAADGDgAAzw4BANIOAQDXDgIA4A4AAOIOBADqDgYA8w4KAP8OAAACDwEABw8EABMPDgAjDwIAJw8KADMPAQA2DwMAOw8DAEAPCQBLDwcAVA8BAFcPHAB1DygAnw8GAKsPAgCvDwAAsQ8AALMPAgC4DwAAvA8HAMwPDQDbDwEA4g8DAOcPAQDrDwIA8A8AAPIPIAAWEAwAJRAFACwQBwA1ECMAWxAOAGsQDgB7EAAAfRAAAH8QAwCGEAYAkBAOAKEQBgCqEAAArRAIALcQAQC7EAQAwRAFAMgQAADNEAkA2BABANwQBADiEAEA5RAKAPEQAAD0EAAA9hAJAAERAAAGEQkAEREEABoRAAAdEQAAJRECACwRAAAvEQEANREKAEEREgBXEQcAYBEBAGMRBQBtEQQAdREEAH8RAwCEEQAAhhELAJQRBACaEQUAohECAKcRAACqEQAArBECALERAgC1EQUAvBEEAMIRAwDJEQIAzxEAANERAQDVEQAA1xEEAN4RDwDvEQAA8hEBAPURAwD7EQIAARIgACQSAAAmEgEAKhIAACwSAQAwEgAAMhIBADYSAAA4EgUAQBICAEUSAABIEgAASxIAAE0SAgBREgIAVRIKAGISBwBrEgAAbRIAAHESAQB1EgAAdxIAAHkSAQB8EgEAfxIBAIQSAACGEg0AlxIFAJ4SBwCoEgIArBIGALcSAQC6EgAAvBIBAL8SBADFEgMAyhICAM4SAADQEgQA1hIAANgSBgDgEgQA5hIBAOkSAQDsEgEA7xIBAPISAAD0EgAA9hIAAPoSAgD/EgMABBMHAA4TAgAVEwAAFxMGAB8TAwAlEwAAJxMAACoTAAAsEwMAMRMCADUTAAA3EwIAOxMAAD0TBwBGEwYATxMVAGYTFAB+EwEAgRMOAJITAACUEwEAmBMAAJoTBQChEwQApxMAAKkTAgCuEwEAsxMBALgTBwDBEwMAyRMGANETCQDdEwMA4hMIAOwTAADuEwIA8xMCAPoTBQABFBIAFhQAABgUAQAcFAAAHhQBACIUAAAkFAEAKBQAACoUBAAxFAMANhQBADkUAQA/FAkAShQAAE0UBgBWFAIAWhRdALkUBQDEFAAAxhQAAMkUBgDSFAAA2hQAAN4UAADgFAAA5BQFAO4UAADyFAAA+RQAAP0UAAAJFQIADRUIABcVAAAZFQEAHBUCACMVAQAmFQQALBUBADQVCgBBFQAAQxUAAEYVAABIFQAAShUAAEwVAABOFfUARRYBAEgWAQBLFgAATRYCAFMWAABXFgAAWxYAAF0WAABfFgAAZRYAAGgWAQBrFgAAdRZPAMYWCgDSFrcAixcBAJEXAgCXFwIAnRcKAKwXBACyFwAAuBcAALoXAADEFwEAyBcAAMoXAADQFwAA1RcBAOcXAADsFwIA8hcAAPQXBQD8FygAKRgAASwZAAAxGQEANBkDADsZAAA9GQMARRkIAE8ZZAC1GQwAxxkBAMwZAQDPGQAA0xkAANUZAADXGQIA2xkrAAgaFgAgGgsALxqtAOEaAADoGgAA6hoBAO0aAADvGgAA8xoAAPcaAAD5GgAA/RoAAAAbAAADGwAAChsAAA0bAgAUGwYAHBsBAB8bAAAhGwMAKRsAACsbAAAtGwEAMhtoAJwbAACfGwAArBsBAM8bAADYGwAA2hsAAPobBwADHAQAChwJABscAAAdHAMAKBwAAC0cAwA4HAAAQRwAAE4cAQBWHAAAWRwAAFscAABeHAEAZxwBAGwcAgByHAUAeRwCAH0cAQCBHAIAhRwAAIccAACJHAAAjhwAAJQcAACXHAEAmhwDAJ8cAAChHAEApxwEAK8cAQCzHAAAvhwAAMAcQAAEHQMADB0AAA4dAAAQHQQAFx0AABkdAAAbHQEAHh0AACEdAQAmHQAAKR1+AKodAACvHQIAsx0BADMeAAA1HgYAPx4FAEYeAwBLHgIAUB4AAFIeAQBVHgAAVx4AAFoeAQBhHgAAaB4AAGoeAQBuHgIAch4DAHgeAgB9HgAAfx4AAIYeAQCJHgIAkx4AAJUeAQCYHgAAnB4CAKIeAQCqHgMAsB4BALQeAgC4HgMAvh4OANIeAADYHgEA3x4AAOIeBQDrHgAA8x4CAAAfAAAKHwAAER8AABMfAQAWHwAAGR8AAB4fAAAgHwAAIh8AACcfAAArHwAALR8CADQfBgBBHwgATx8AAFEfAABVHwAAWx8AAF0fBABmHwEAaR8BAGwfAABvHwgAeh8BAH0fAACAHwEAhB8AAIgfAACQHwAAkx8BAJofAQCgHwEAox8EAK4fAgC2HwEAvR8CAMEfAgDMHwAAzh8EANQfBQDbHwAA4R8DAOYfAADoHwIA7h8AAPAfAAD8HwAA/x8BAAIgAQAFIAMACyAFABIgBAAYIAAAHSAAACMgAAApIAEALyAAADMgAAA1IAAANyABAFogAABfIAAAZyADAGwgBQB0IAEAfiAAAIIgAgCGIAQAjiAAAJAgAQCTIAEAliABAJogAACdIAMApCAAAK0gAACvIAAAsSAAALcgAwC/IAAAwSAAAMMgAADFIAAAxyAAAMogAADMIAAA0iACANYgAgDaIAcA4yAAAOUgAADpIAAA7yAAAPIgAAD4IAAA/CAKAAkhAgAOIQAAESECABwhAQAtIQAALyEAADIhAgA2IQMAOyECAD8hAABCIQAARiFdAKYhDgC4IQEAvSEKAMkhAADLIQEAziGNAF0iegDbIgAA3SIDAOgiAADrIg8A/CJ5AHcjAAB/IwAAhCMAAIYjAACIIwAAjiMEAJQjAgCZIwEAnSMAAKEjAACnIwEAqiMAAKwjegAtJAMANiQAADkkAQA+JAEAQiQBAEUkAABMJAAAUCQBAFYkAABcJAAAZiQAAG0kAQB4JAMAfyQBAI8kAQCUJAAAliQAAJ4kAQChJAEApyQAALQkAAC7JAAAvSQAAMAkAADIJAAAzSQAANkkAADcJAEA3yQAAOEkAQDpJAIA7yQUAAUlAQALJQEADiVEAFUlAABXJQAAWSUBAFwlAQBfJQYAZyU5AKMlBQCqJQkAtSUBALglAAC8JQAAviUDAMMlAQDGJQUA0CUSAOQlAQDnJQIA7CUAAPAlFgAIJhcAJCYEAC0mEwBCJgYAWSYAAGcmAgB9JgAAhCYIAJEmAACTJgwAoSYCAKUmEgC5JgEAvCYPAM0mGQDpJgAA6yYCAPAmCgD8JgEA/yYGAAcnAwAMJwIAECcAABMnBgAbJwQAIicCACYnBQAuJwAAMCcNAEInAQBGJwEATCcBAE8nAQBSJwMAVycAAFknAABcJwEAYCcAAGInAQBlJwAAZycCAGsnDAB5JwAAeycBAH4nAACAJwEAgycAAIUnAQCIJwAAiicBAI0nAwCUJwAAmCcBAJwnAACfJwAAoScAAKMnAwCoJwAAqycIALUnAgC6JwQAwCcBAMQnAADGJwIAyicBANAnAwDVJwEA2CcAANonAQDdJwAA3ycBAOInAADkJwEA5ycAAOknAQDsJwAA7icAAPEnEgAFKAYADigAABEoEQAkKAgALigBADEoCAA7KAAAPSgBAEMoAABFKAQATigBAFcoAgBdKAAAXygAAGkoAAB4KAMAgCgKAIwoAACOKAgAmSjvAIopAQCNKRoAqSkBAKwpEAC/KRIA0ykAANUpFwDuKQEA8ikAAPQpCwABKgIACCoAABgqAwAfKgcANCoFADwqAABFKgAARyoBAE4qBgBWKgAAXCoKAHAqBQB3KgAAeSoDAH4qBQCHKgQAjSoBAJEqAACXKgQAoCoCAKQqCQCxKgIAtSoAALkqAgC9KgMAxSoRANoqAQDdKgEA4ioBAOYqAgDyKgMA+SoBAPwqAgABKwEABCswADgrAAA6KwAAPysAAEErAABDKwAARSsAAEcrAABNKwEAUCsDAFgrAwBjKwIAZysAAGkrAABsKwAAbisAAHArAAByKwEAeCsAAH0rAwCCKwAAhSsdAKQrFQC8KwEAwCsBAMQrAQDIKwEAzSsCANIrAQDVKwAA2CsCAN4rAQDhKwAA4ysAAOUrAADpKwAA7CsDAPUrAAD9KwAA/ysBAAIsDwATLAUAHywAACIsAwAnLAAAKiwLADcsAAA5LAAAOywEAEEsFgBaLAEAXiwPAG8sAQByLAQA"}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEPPPEPITTPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPFGEEIEKGPPGFFFPPEPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNONMMNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","","","fmt","","from","","","","hash","","init","","into","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","DurationType","Enum","","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","eq","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","","gt_eq","","","","","","hash","","","","","","","hash_impl","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_offsets","last","leaf_dtype","lt","","","","","","lt_eq","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_reduce","","","mmap_slice","mul","multiply","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","remainder","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","strict_cast","string_cache","sub","subtract","","","","","","","sum","sum_reduce","","take_unchecked","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","add","","","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","max_horizontal","mean_horizontal","min_horizontal","mul","","","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","","borrow_mut","","default","deref","","deref_mut","","drop","","finish","fmt","from","","hash","","idx","init","","into","","populate_multiple_key_hashmap","try_from","","try_into","","type_id","","vec_hash","","vec_hash_combine","","vzip","","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","EMPTY","EMPTY_REF","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","clone_into","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","inner","inner_mut","interpol","into","","","","","","","","","","","","","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","fmt","from","init","into","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompare","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","bitor","","bitxor","","bool","borrow","","","","borrow_mut","","","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","len","","limit","","list","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","phys_iter","product","quantile_reduce","","rechunk","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","","","checked","div","divide","","","mul","multiply","","","rem","remainder","","","sub","subtract","","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[443,"polars_core::chunked_array::arithmetic"],[471,"polars_core::chunked_array::builder"],[579,"polars_core::chunked_array::builder::list"],[733,"polars_core::chunked_array::cast"],[762,"polars_core::chunked_array::collect"],[776,"polars_core::chunked_array::float"],[778,"polars_core::chunked_array::from_iterator_par"],[782,"polars_core::chunked_array::iterator"],[819,"polars_core::chunked_array::iterator::par"],[821,"polars_core::chunked_array::metadata"],[1106,"polars_core::chunked_array::object"],[1183,"polars_core::chunked_array::object::builder"],[1206,"polars_core::chunked_array::object::registry"],[1234,"polars_core::chunked_array::ops"],[1360,"polars_core::chunked_array::ops::arity"],[1396,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1398,"polars_core::chunked_array::ops::gather"],[1401,"polars_core::chunked_array::ops::search_sorted"],[1431,"polars_core::chunked_array::ops::sort"],[1438,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1439,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1447,"polars_core::chunked_array::ops::sort::options"],[1524,"polars_core::chunked_array::temporal"],[1525,"polars_core::chunked_array::temporal::conversion"],[1528,"polars_core::config"],[1532,"polars_core::datatypes"],[2982,"polars_core::datatypes::categorical"],[3123,"polars_core::datatypes::categorical::revmap"],[3177,"polars_core::datatypes::categorical::string_cache"],[3196,"polars_core::datatypes::revmap"],[3202,"polars_core::datatypes::string_cache"],[3206,"polars_core::error"],[3273,"polars_core::error::PolarsError"],[3277,"polars_core::error::constants"],[3280,"polars_core::export"],[3287,"polars_core::fmt"],[3318,"polars_core::frame"],[3594,"polars_core::frame::explode"],[3623,"polars_core::frame::group_by"],[3862,"polars_core::frame::group_by::GroupByMethod"],[3863,"polars_core::frame::group_by::GroupsProxy"],[3865,"polars_core::frame::group_by::aggregations"],[3878,"polars_core::frame::group_by::expr"],[3881,"polars_core::frame::row"],[3978,"polars_core::functions"],[3980,"polars_core::hashing"],[4028,"polars_core::prelude"],[4633,"polars_core::prelude::PolarsError"],[4637,"polars_core::prelude::default_arrays"],[4643,"polars_core::prelude::list"],[4666,"polars_core::prelude::null"],[4697,"polars_core::prelude::revmap"],[4703,"polars_core::prelude::slice"],[4706,"polars_core::prelude::string_cache"],[4710,"polars_core::prelude::utf8"],[4714,"polars_core::random"],[4715,"polars_core::scalar"],[4744,"polars_core::scalar::reduce"],[4745,"polars_core::schema"],[4767,"polars_core::series"],[5185,"polars_core::series::amortized_iter"],[5209,"polars_core::series::arithmetic"],[5234,"polars_core::series::arithmetic::checked"],[5242,"polars_core::series::ops"],[5269,"polars_core::utils"],[5480,"polars_core::utils::flatten"],[5485,"dyn_clone::sealed"],[5486,"num_traits"],[5487,"num_traits::cast"],[5488,"polars_error"],[5489,"polars_core::series::arithmetic::borrowed"],[5490,"polars_core::frame::group_by::proxy"],[5491,"core::option"],[5492,"core::iter::traits::iterator"],[5493,"polars_utils::pl_str"],[5494,"core::ops::function"],[5495,"core::marker"],[5496,"alloc::string"],[5497,"polars_core::datatypes::dtype"],[5498,"polars_arrow::array::binview::view"],[5499,"polars_core::datatypes::aliases"],[5500,"polars_core::series::arithmetic::borrowed::checked"],[5501,"polars_arrow::array"],[5502,"alloc::vec"],[5503,"compact_str"],[5504,"core::iter::traits::double_ended"],[5505,"core::fmt"],[5506,"core::iter::traits::collect"],[5507,"polars_arrow::bitmap::immutable"],[5508,"rayon::iter"],[5509,"polars_arrow::trusted_len"],[5510,"polars_core::datatypes::any_value"],[5511,"polars_utils::index"],[5512,"std::sync::rwlock"],[5513,"polars_core::chunked_array::logical::decimal"],[5514,"core::iter::traits::exact_size"],[5515,"polars_core::series::series_trait"],[5516,"core::slice::iter"],[5517,"core::iter::adapters::map"],[5518,"core::convert"],[5519,"polars_core::chunked_array::metadata::guard"],[5520,"polars_core::chunked_array::metadata::interior_mutable"],[5521,"alloc::sync"],[5522,"polars_core::chunked_array::metadata::md_trait"],[5523,"core::ops::range"],[5524,"polars_core::datatypes::field"],[5525,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5526,"polars_core::chunked_array::ops::rolling_window"],[5527,"polars_utils::aliases"],[5528,"polars_utils::hashing"],[5529,"ndarray::aliases"],[5530,"either"],[5531,"core::result"],[5532,"core::any"],[5533,"polars_core::chunked_array::arithmetic::numeric"],[5534,"polars_core::chunked_array::builder::string"],[5535,"polars_arrow::array::binview"],[5536,"polars_core::chunked_array::builder::boolean"],[5537,"polars_core::chunked_array::builder::null"],[5538,"polars_core::chunked_array::builder::primitive"],[5539,"core::clone"],[5540,"polars_core::chunked_array::builder::list::anonymous"],[5541,"polars_core::chunked_array::builder::list::boolean"],[5542,"polars_core::chunked_array::builder::list::primitive"],[5543,"polars_core::chunked_array::builder::list::binary"],[5544,"polars_core::chunked_array::builder::list::null"],[5545,"alloc::boxed"],[5546,"core::hash"],[5547,"polars_arrow::array::boolean"],[5548,"polars_core::chunked_array::metadata::env"],[5549,"polars_core::chunked_array::metadata::collect"],[5550,"bitflags::iter"],[5551,"std::fs"],[5552,"std::sync::mutex"],[5553,"polars_arrow::datatypes"],[5554,"polars_arrow::bitmap::utils::iterator"],[5555,"polars_arrow::bitmap::utils::zip_validity"],[5556,"polars_arrow::offset"],[5557,"polars_arrow::array::static_array"],[5558,"core::error"],[5559,"polars_arrow::array::primitive"],[5560,"polars_arrow::legacy::array::slice"],[5561,"polars_row::row"],[5562,"polars_arrow::array::binary"],[5563,"chrono::naive::datetime"],[5564,"alloc::borrow"],[5565,"polars_arrow::array::static_array_collect"],[5566,"bytemuck::zeroable"],[5567,"polars_core::chunked_array::logical::categorical"],[5568,"polars_core::chunked_array::logical::categorical::merge"],[5569,"polars_core::chunked_array::logical"],[5570,"polars_core::datatypes::time_unit"],[5571,"polars_arrow::datatypes::physical_type"],[5572,"polars_arrow::types"],[5573,"core::borrow"],[5574,"polars_arrow::pushable"],[5575,"polars_core::datatypes::into_scalar"],[5576,"core::cmp"],[5577,"polars_core::chunked_array::logical::categorical::builder"],[5578,"polars_core::chunked_array::logical::categorical::revmap"],[5579,"polars_core::chunked_array::logical::categorical::string_cache"],[5580,"polars_error::warning"],[5581,"polars_core::series::from"],[5582,"polars_arrow::datatypes::schema"],[5583,"polars_core::chunked_array::ndarray"],[5584,"polars_arrow::record_batch"],[5585,"polars_arrow::array::struct_"],[5586,"polars_utils::idx_vec"],[5587,"rayon::iter::plumbing"],[5588,"polars_core::frame::group_by::into_groups"],[5589,"core::iter::adapters::copied"],[5590,"core::iter::adapters::zip"],[5591,"polars_arrow::legacy::kernels::rolling"],[5592,"polars_utils::float"],[5593,"polars_arrow::types::native"],[5594,"polars_core::frame::group_by::aggregations::agg_list"],[5595,"polars_core::frame::row::av_buffer"],[5596,"polars_core::hashing::identity"],[5597,"hashbrown::map"],[5598,"polars_core::hashing::vector_hasher"],[5599,"core::alloc"],[5600,"std::os::fd::owned"],[5601,"std::os::fd::raw"],[5602,"std::path"],[5603,"std::ffi::os_str"],[5604,"core::mem::maybe_uninit"],[5605,"polars_arrow::legacy::kernels::time"],[5606,"core::ffi::c_str"],[5607,"core::default"],[5608,"polars_arrow::scalar"],[5609,"std::io::error"],[5610,"alloc::collections"],[5611,"simdutf8::basic"],[5612,"regex::error"],[5613,"alloc::ffi::c_str"],[5614,"polars_arrow::legacy::array::default_arrays"],[5615,"polars_arrow::buffer::immutable"],[5616,"polars_arrow::array::list"],[5617,"polars_core::named_from"],[5618,"polars_core::chunked_array::ops::aggregate"],[5619,"polars_core::chunked_array::ops::aggregate::quantile"],[5620,"polars_arrow::legacy::index"],[5621,"core::pin"],[5622,"core::io::borrowed_buf"],[5623,"std::io"],[5624,"polars_core::chunked_array::ops::aggregate::var"],[5625,"alloc::collections::btree::map"],[5626,"polars_arrow::legacy::array::list"],[5627,"polars_arrow::legacy::array::null"],[5628,"polars_arrow::bitmap::mutable"],[5629,"polars_arrow::array::utf8"],[5630,"polars_schema::schema"],[5631,"polars_core::series::iterator"],[5632,"alloc::rc"],[5633,"polars_core::utils::supertype"],[5634,"polars_arrow::legacy::utils"],[5635,"polars_arrow::legacy::trusted_len::rev"],[5636,"core::iter::sources::repeat"],[5637,"core::iter::adapters::take"],[5638,"polars_core::chunked_array::object::extension"],[5639,"polars_error::constants"],[5640,"polars_core::frame::horizontal"],[5641,"polars_arrow::legacy::prelude"],[5642,"polars_arrow::legacy::array"],[5643,"polars_arrow::legacy::array::utf8"],[5644,"polars_core::utils::any_value"],[5645,"polars_core::utils::schema"],[5646,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kf000l00000000000000000000000000000000000`00000000101``0000000000000`0`00000001010000000100000000000`000000100000000000`00000000000000000000000000000000100001000000000000000000`0000000000000000000000000000`0000000000000000000000000000000000000000000000000000000``000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`Ol00000000000000000000000000````````A@`A@dA@fA@hOn432140043143214321432143214321432143214321044A@lA@n5436543AA`00076547654`7654365476547654765476547654````````AAb0AAdAAfAAh0AAj43AAlAAn4AB`47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`En000000000000000000000000000``ABfABh1000101000`ABj``ABlABn```ACbACd101010101010101011010`1010101010``ADbIhFl0Hl`3Kl22````````42110Kn4ACf4343434343434433434321560432156043150431504315043ACh054542654332671543267154541Lb7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADf00000I`1111`111111110011111111111111111111``111111101111111110Ib2222222222`AEd000000000000000000000````AEh00AEj0000000```00`0`10000AFn```````````````````````````0AFd``AG`22222CD`3033AF`3AFf044AFh0AFj`77AFl00888888866AGb0`AGfAGh`;;`AGjAGl`AGn0<<>>>AH`AHb>><<AHd==:AHfAG`0:2AHhAHjAHl0`0AHnAI``AFh0AIbAF`AIdAIfAIhAFn000AFj61`AIj`AJdAJ`AIl`````````````````````````````````````AJh00`0`000000000000000000`00000`````AJj0````````````EdEh101010101010101010101011100010110010101010101010221010101010101010010010````````AMh`C```````HhDnADh`1``2`0210```21`````````100`1`2100``010`210```0040210``210```BBl`4CDbCDd``````7``543``543``543``543``3`666333BBn654``3``4AOdAMl1010A`987`98`9``:3:```````````AOn`3`<:9`:`8988```80`:98``:98``:98``:98``898`88AIn0<0AMdAMf=?<AMjMf7AMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdE`InG`0D`00Ej00HhIlLhLlMbM`CnClDdDhAn?=<;AEf>>E`0??0?>=100AKjAKlG`D`Ej21010552106521061210AKb32103217AKn0AL`04HhDnMfALbAIn=::::::AMdCDfBnjIlHnAMf;AMh;AMj;AMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdAMdCDfBnjIlHnAMfHhAMhDnAMjMfAMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdDn`AMb0Hh2E`G`D`EjAKb6In54321`IlLhLlMbM`CnClAMdAMf?AMhDnAMjMfAMlAMnAN`>=ANbANd>=<;ANfANhDdDhANjAnANlANnAO`AObADhAOdAMdAMfHhAMhDnAMjMfAMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdAMdAMfHhAMhDnAMjMfAMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdMfAOf000Dn00`HhAMh26AMd0CDfBnjIlHnAMf879AMj<AMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdAMd0CDfBnjIlHnAMfHhAMhDnAMjMfAMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdInIlLhLlMbM`CnClAMdCDfBnj:HnAMfHhAMhDnAMjMfAMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdAMbInHhMf01AMhDn0AMj3AMl985E`G`D`0Ej0321100999777666555888444===<<<3AMd3121AEfAM`6431AMf==;::9<88ADhAOd95CDfBnjIlHn7Hh00000AMhDn000AMjMf00AMl0AMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADh00AOdDnE`00G`D`0Ej0AEf32104432211AKb01432154433225432143214AIn00654312065431260InAMb08765341008765348C`jIlHnAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObE`AEf0HhB@lAIn4D`AKb6G`2Ej278133008133006AMhDnMfAMlADhAOd<4AMdCDfBnjIlHnAMfHh=<AMj<;AMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdE`Dn3AMdCDfBnjIlHnAMfHhAMh9AMjMfAMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdB@n0E`G`D`EjAKbAEfBA`In8HhDn0010000101000010<1010100001000010<AIn:01:98877:98877``1AMh::98:AKjAKl10`<<;:<6IlLhLlMbM`CnClD`EjMf0CDbCDdBBf55554444AEf040E`G`87AKb333AMdAMj3343;;::43;;::404;4;HhAMl3In4AKjAKl108IlLhLlMbM`CnClE`G`D`EjAKbAEf`?AMd54354354366Mf76543276543265436543AKjAKlHh`InIlLhLlMbM`CnClG`0EjD`011Dn?AMl102E`ADh1AMdAMfHhAMh7AMjMf8AMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdDn2InAMdHh3AMlEj2E`0AKn0AL`0AOf00067CDfBnjIlHnAMf<AMhDnAMjMf?AMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdAMdCDfBnjIlHnAMfHhAMhDnAMjMfAMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdHhDn10AMlE`AMdCDfBnjIlHnAMf:AMh:AMjMf;AMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOd1G`D`EjAEfAIn0Dn1AKjAKl7BAhBAjAOjBAlBAnBB`BBbBBdB@n:9?>AKb>G`:98765432<;D`Ej3AEfAMdCDfBnjIlHnAMfHhAMhDnAMjMfAMlAMnAN`LhLlANbANdMbM`CnClANfANhDdDhANjAnANlANnAO`AObADhAOdCDbCDdBBfEfAInHhE``````BBl`BBn10`ALn00BBh10010BC`BBj32103`3333021032103221033333333AM`313214444444444444432143214244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCf0000`00`0000000`0`7676`````BCjAKf000Ah`112101```11111112BCh3030`3003030`300300`3030`0``````0303003030CDhCDj10```````````BCn0000000000`0`````00`````00000BDh`0BDf11``0``01BCd0000000000000000BElBEn3421034222342342342224210342103422221034222222222242224442`222222342210342222222222222222`2224222222222222221034221034210222222222222222222222102222222222222222`22222222222222222102222222222222222222342222221034222221034221034222222210342222222`BFl000000000000000000000000000`BGb0``0``````BGjAl`2`22222222210`222BFn1BE`40`1023BHdBGfBGd453762104537453745374537345621004537621045373162104453745444555`643445377`621044445537445335BGn04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CDlCDn0``````````BI`BIb0`BId0BIfBIh``101010101010`10101010BDn211210210210210210`02102102100000022110`2102102121021```210210210210210``````````BIjBIl10110101010100001010`101010BJb0002122222`````````BFf```````````AKf00`0`Bh0BNdAh4```BBl`Ml5``````5```3BBn`1``````211``1`6`BHj5BKj````582````````60````88`88``8`1`8`8````7ObBKdL`Mn=B@b8BKfBKh74444>>>>4>44?>>65443=BFf3;218AKfBh9876BNd36>54;`87BKb02;:9847?65<2;:9847?65<2;:9847?65<29AOf0003:44``7::3::::958Ml`544=<;;:369087>54=<;:369087>;`;;;54=<;;:369087>994=;;;:690>444===;;;666999000>>><AM`<6655>=<<<;7:198?;6666655555>>=<<<<<<<<<<<<<<<<<<;47:198?BMjBMnBN`88888888?CE`0000L`00::9:BNf111Ff2<2>B@b9BKjOb55`AKfBh2BKd8MnBNdBFf8MlBKfBKh:9608796>543;210:>>>>769;>9>BDl?`?``?BO`0BOb>811>L`BOdBOf2B@b3333333333`Ob>?444````86644544444`4`AJj05C@bBKd`7993Bh418MnBFf7MlBKfBKhBKjAKf7?AOf00018<9L`08BNd8?76543:>;1908?7654BOd222222224;224;?<2:19B@b98763`>5<Ob>4<3;1:9874<<164===4CDhCDj10```BMjBMnBN``C@l000000000000000000000`CA`00000000000000000000000000000`BBlBBn10``AJj0``````CEbCEd``Kj0000000000000000000`0000000`CAl0`````BDbCAh1010121010101Jh0``00```CEf11````01AfBNl0111111`10000`10001001001110000001CB`3420342122221122121122421424222203422034222222034211114222222222444222222112142220342222222222222222222222222222222222222222212221111111122222214222222`20342034220BDd32233332200333323223333333322223222232233332232223333333333333333333333333333333333333323133333332`3322233323325223333222331233222322223333333322332222333533331453333314533333314533333223222221453333``Ch000000000000000000000```CBf0CBhAj0`2100210021002100``BKbF`0100CBj0`000000000000000000000000CBl0``````````0CBnCCb```````211````22222222CCjAJl43210432CC`543543543``CCd06``6653322654322654632654``636533366655565`6666653265546666226CCh337333````4764376577743765375BFb6888383`3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{{l{Cn}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}e}D`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}A`C`}{{{f{Bj{l{c}}}}e}bA`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Cj{{f{Df}}}{{Cb{{f{Df}}}}}}}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Cj{{f{{Dl{Dj}}}}}{{Cb{{f{{Dl{Dj}}}}}}}}}}{{{f{{l{c}}}}Dng}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{j}}}}{f{Cd}}}{{Ah{E`}}}}{{{f{{l{c}}}}g{f{Bj{Dl{e}}}}}bA`{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Cj{Eb{f{Df}}}{{Cb{Eb}}}}Cf}}{{{f{{l{c}}}}Ed}EfA`}{{{f{{l{c}}}}{f{{Dl{Af}}}}{f{Eh}}}{{Ah{Ef}}}A`}{{{f{{l{c}}}}}{{Ah{Ef}}}A`}`{{{f{{l{Dd}}}}}Ej}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEl{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cd{}{{Cb{}}}}Cf}A`}{{{f{{l{c}}}}{f{Dn}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Dn}}En}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}F`}{{{f{{l{c}}}}e}{{Ah{Af}}}F`Ad}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fb}}}}}}}C`}{{{f{{l{c}}}}}FdC`}{{{f{{l{c}}}}}{{f{{Fh{Ff}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Fh{Ff}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{C`A`}}`{fFj}{{{f{{l{c}}}}}{{Ah{{f{Dl}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Fl}bC`}{{{f{Bj{l{c}}}}{f{{l{e}}}}Fl}bC`C`}{{{f{{l{c}}}}}{{`{{Fn{}{{Bb{{f{Dl}}}}}}}}}A`}{{}{{l{c}}}C`}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{Fbb}{{{f{Bj{l{c}}}}}bC`}1{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{c}}}}e}G`A`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}G`A`}10{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{G`}}}{{Ah{{l{c}}}}}{{C`{}{{Gb{Bn}}{Gd{Bn}}}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fb}}}C`}`{{{f{{l{An}}}}{f{BjGf}}}Gh}{{{f{{l{c}}}}{f{BjGf}}}GhA`}{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}{c{{l{e}}}Gj{{C`{}{{Gl{c}}}}}}1{{Bhc}{{l{e}}}Gn{{C`{}{{Gl{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Gl{}}}}C`}Gn}{{Bh{Fh{Ff}}}{{l{c}}}C`}{{Bh{Fh{Ff}}Dn}{{l{c}}}C`}{c{{l{An}}}{{Gn{}{{Bb{{B`{d}}}}}}}}{c{{l{e}}}{{Gn{}{{Bb{B`}}}}}A`}{c{{l{e}}}{{Gn{}{{Bb{{Hb{Fh{B`{H`}}}}}}}}}A`}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}32{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hd{}{{Bb{B`}}}}}A`}{{Bh{f{Dl}}}{{l{c}}}A`}{{Bh{f{{Dl{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hf{}{{Bb{B`}}}}}A`}{{BhFh}{{l{c}}}A`}{{BhFh{B`{H`}}}{{l{c}}}A`}{{BhFb}{{l{c}}}A`}0{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{BhFb{f{Dn}}}E`}{{{f{{l{c}}}}Fb}B`C`}{{{f{{l{c}}}}Fb}{{Ah{Hh}}}A`}{{{f{{l{c}}}}Fb}HhA`}{{{f{{l{j}}}}Fb}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{Hj}}}C`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}HlC`}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`C`}0{{{f{{l{{Hn{c}}}}}}Fb}{{B`{{f{I`}}}}}Ib}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FbdFb}AlEl}{{{f{{l{c}}}}e}G`A`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}G`A`}018{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{}Fb}0{{FbId{B`{If}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{Dn}}}}{{{f{{l{c}}}}}{{Ij{{Ih{c}}}}}C`}{{}c{}}0{{{l{Il}}{B`{Fb}}Fb}{{Ah{In}}}}{{{l{Il}}{B`{Fb}}Fb}In}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{J`Jb{Jd{}{{Bb{}}}}FnHf}}}A`}{{{l{c}}}AfC`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}G`Jf}000{{{f{{l{c}}}}}G`C`}02{{{f{{l{c}}}}}JhC`}{{{f{{l{c}}}}}{{`{{Jj{}{{Bb{B`}}}}}}}C`}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}C`}{{{f{{l{j}}}}}{{`{{Bf{}{{Bb{Jl}}}}}}}}{{{f{{l{c}}}}}{{Kb{{Jn{Ff}}{K`{{f{Ff}}}{{Cb{{B`{{f{H`}}}}}}}}}}}C`}`{{fc}Fj{{Kd{Df}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fb}}}C`}{{{f{{l{c}}}}}{{Kf{c}}}C`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}{{{f{{l{c}}}}}FbC`}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKh}}00{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{{f{{l{c}}}}e}G`A`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}G`A`}10{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}KjA`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{c}}}}}{{B`{n}}}El}{{{f{{l{c}}}}}KjEl}{{{f{Bj{l{c}}}}{Ih{c}}}bC`}`{{{f{{l{c}}}}}{{Kl{c}}}C`}{{{f{{l{c}}}}}{{f{{L`{{Kn{c}}}}}}}C`}{{{f{{l{c}}}}}{{B`{{Ld{Lb}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{L`{{Kn{c}}}}}}}C`}{{{f{{l{c}}}}}{{L`{{Kn{c}}}}}C`};<{{{f{{l{c}}}}}{{B`{Hb}}}A`};{{Bh{f{Dl}}}{{l{c}}}A`}{{Bh{f{{Dl{Dj}}}}FbFb}{{l{An}}}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FbC`}{{{f{{l{c}}}}}{{Ah{Fb}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{Bhc}{{l{Il}}}{{Kd{{Dl{{B`{Lf}}}}}}}}{{Bhc}{{l{Dd}}}{{Kd{{Dl{{B`{Db}}}}}}}}{{Bhc}{{l{An}}}{{Kd{{Dl{d}}}}}}{{Bhc}{{l{Lh}}}{{Kd{{Dl{Lj}}}}}}{{Bhc}{{l{Ll}}}{{Kd{{Dl{If}}}}}}{{Bh{Ln{Jl}}}{{l{M`}}}}{{Bhc}{{l{Dd}}}{{Kd{{Dl{Db}}}}}}{{Bh{Ln{If}}}{{l{Ll}}}}{{Bhc}{{l{Cl}}}{{Kd{{Dl{{B`{n}}}}}}}}{{Bhc}{{l{Mb}}}{{Kd{{Dl{Md}}}}}}{{Bhc}{{l{M`}}}{{Kd{{Dl{Jl}}}}}}{{Bhc}{{l{Il}}}{{Kd{{Dl{Lf}}}}}}{{Bhc}{{l{Cn}}}{{Kd{{Dl{Id}}}}}}{{Bhc}{{l{Cn}}}{{Kd{{Dl{{B`{Id}}}}}}}}{{Bhc}{{l{Lh}}}{{Kd{{Dl{{B`{Lj}}}}}}}}{{Bhc}{{l{Ll}}}{{Kd{{Dl{{B`{If}}}}}}}}{{Bhc}{{l{Mb}}}{{Kd{{Dl{{B`{Md}}}}}}}}{{Bhc}{{l{Cl}}}{{Kd{{Dl{n}}}}}}{{Bhc}{{l{An}}}{{Kd{{Dl{{B`{d}}}}}}}}{{Bhc}{{l{Dh}}}{{Kd{{Dl{{B`{{Fh{Dj}}}}}}}}}}{{Bhc}{{l{M`}}}{{Kd{{Dl{{B`{Jl}}}}}}}}{{Bh{Ln{Lj}}}{{l{Lh}}}}{{Bh{Ln{Md}}}{{l{Mb}}}}{{Bhc}{{l{Dh}}}{{Kd{{Dl{{Fh{Dj}}}}}}}}{Bh{{l{{Hn{c}}}}}Ib}{{{f{{l{c}}}}FbFb}{{l{c}}}A`}{{Bh{Fh{c}}}{{l{{Hn{c}}}}}Ib}{{Bh{Fh{c}}H`}{{l{{Hn{c}}}}}Ib}{{BhFh}{{l{c}}}A`}{{{L`{Mf}}{Fh{Ff}}HjHj}{{l{c}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jf}{{{f{{l{c}}}}e}G`A`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}G`A`}10{{{f{{l{c}}}}}FbC`}``{{{f{{l{Dd}}}}}{{`{{Mh{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Mh{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Mj{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Mj{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{{l{c}}}}}KjA`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}nMl}{{Ah{{B`{n}}}}}El}{{{f{{l{c}}}}nMl}{{Ah{Kj}}}El}{{BhFbn}{{Ah{{l{An}}}}}}{{BhFbnn}{{Ah{{l{c}}}}}A`}{{BhFb}{{l{c}}}A`}{{BhFbnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Mf}}}C`}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bC`}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}Mn}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fbe}{{Ah{{l{c}}}}}Jf{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}ndd{B`{If}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}Fbdd{B`{If}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Gn{}{{Bb{Hj}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Gn{}{{Bb{Hj}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{G`}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bC`}{{{f{Bj{l{j}}}}Dn}b}{{{f{Bj{l{c}}}}Hj}bC`}{{{f{Bj{l{c}}}}Jh}bC`}{{{f{{l{c}}}}Jl}{{l{c}}}A`}{{{f{{l{c}}}}JlB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}JlFb}{{l{c}}}C`}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ed}{{l{c}}}A`}{{{f{{l{c}}}}Jl}{{Hb{{l{c}}{l{c}}}}}C`}0{{{f{{l{c}}}}Dj}{{B`{n}}}A`}{{{f{{l{c}}}}Dj}KjEl}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{An}}}}}{{B`{Hj}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}KjA`}{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{Ef}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}C`{{Kd{{Dl{Hj}}}}N`}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Gb{Bn}}{Nb{Bn}}}}C`}{{Kd{{Dl{Hj}}}}N`}}{{{f{{l{c}}}}{f{Ef}}}{{l{c}}}{{C`{}{{Gb{Bn}}{Nb{Bn}}}}C`}}`{{{f{{l{c}}}}dNd}{{Fh{{Fh{Nf}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jf}{{{f{{l{Dd}}}}Fb}{{Ah{Af}}}}{{{f{Bj{l{j}}}}Dn}b}{{{f{{l{j}}}}}{{Ah{Nh}}}}{{{f{{l{c}}}}}{{Ah{Nj}}}A`}{fc{}}{{{f{{l{Dh}}}}}D`}{{{f{{l{c}}}}}{{Fh{B`}}}A`}{{{f{{l{c}}}}}{{Nl{Fh{Fh{B`}}}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}g}{{Nn{D`e}}}C`{}{{Cj{{f{BjDb}}}{{Cb{{Nn{be}}}}}}}}{{{f{{l{c}}}}i}{{Nn{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Nn{eg}}}}}}}C`}{c{{Nn{e}}}{}{}}0{{Bhg}{{Nn{{l{i}}e}}}Gj{}{{Gn{}{{Bb{{Nn{ce}}}}}}}{{C`{}{{Gl{c}}}}C`}}{{}{{Nn{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fO`}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Fb}{}C`}{{{f{{l{c}}}}Dj}{{B`{n}}}A`}{{{f{{l{c}}}}Dj}KjEl}{{}c{}}0{{Bhc}{{l{e}}}Gj{{C`{}{{Gl{c}}}}C`}}{{{f{{l{e}}}}c}{{l{e}}}Gj{{C`{}{{Gl{c}}}}C`}}{{{f{{l{c}}}}{Fh{Ff}}}{{l{c}}}C`}{{{l{c}}Bh}{{l{c}}}C`}{{{f{{Dl{Ob}}}}e}c{}{{Od{{f{Ef}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Jh}{{l{c}}}C`}{{{l{c}}}eA`{}}{{{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}3201{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}453201543276542301453201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{G`}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{C`{}{{Nb{Bn}}}}}}````{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}e{}{}{}}{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}c}e{}{}{}}{{c{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}e{}{}{}}{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}g{}{}{}}{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}c}g{}{}{}}{{c{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}g{}{}{}}{{{Ol{}{{Of{c}}{Oh{e}}{Oj{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjOn}}}b}{{{f{Bj{A@`{c}}}}}b{A@bN`}}{{{f{BjA@d}}}b}{{{f{BjA@f}}}b}{{{f{Bj{A@h{c}}}}}bA`}{{{f{Bj{A@`{c}}}}{B`{e}}}b{A@bN`}{{Kd{c}}}}{{{f{BjOn}}{B`{c}}}b{}}{{{f{BjOn}}c}b{}}{{{f{Bj{A@`{c}}}}e}b{A@bN`}{{Kd{c}}}}{{{f{BjA@d}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@`{c}}}}}{{A@`{c}}}{A@bN`}}{{{f{A@d}}}A@d}{{{f{A@f}}}A@f}{{{f{{A@h{c}}}}}{{A@h{c}}}{A`A@j}}{{f{f{Bjc}}}b{}}000{fb}000{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{Fbb}000{On{{l{c}}}C`}{{{A@`{{Dl{Dj}}}}}Ej}{{{A@`{Df}}}D`}{A@lD`}{A@nEj}{A@dG`}`{{{A@h{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AA`{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AA`{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dl{c}}}}}AA`{}}{{Bh{f{{Dl{{B`{c}}}}}}}AA`{}}{{}Fb}000{{}c{}}000`{{BhFb}{{A@`{c}}}{A@bN`}}{{BhFb}A@d}{{BhFb}A@f}{{BhFb}{{A@h{c}}}A`}{{{f{BjOn}}}b}{{{f{BjA@d}}}b}{{{f{BjA@f}}}b}{{{f{Bj{A@h{c}}}}}bA`}{fc{}}000{c{{Nn{e}}}{}{}}000{{}{{Nn{c}}}{}}000{fO`}000<<<<````````{{{f{BjAAb}}{f{Gj}}}b}{{{f{BjAAb}}}b}{{{f{BjAAd}}}b}{{{f{BjAAf}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hf}}{{{f{Bj{AAh{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hf}}{{{f{Bj{AAh{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hf}}{{{f{BjAAj}}}b}54{{{f{BjAAl}}}b}{{{f{BjAAn}}}b}{{{f{BjAAf}}}b}{{{f{BjAB`}}}b}{{{f{Bj{AAh{c}}}}}bA`}{{{f{BjAAb}}{B`{{f{Gj}}}}}b}{{{f{BjAAb}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAj}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAh{c}}}}{B`{{f{Dl}}}}}bA`}{{{f{BjAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAb}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAd}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAl}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAh{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAh{c}}}}{f{Dl}}}bA`}{{{f{BjAAl}}c}b{{Bf{}{{Bb{{B`{{f{Df}}}}}}}}Hf}}{{{f{BjAAn}}c}b{{Bf{}{{Bb{{B`{{f{{Dl{Dj}}}}}}}}}}Hf}}{{{f{BjAAl}}c}b{{Bf{}{{Bb{{f{Df}}}}}}}}{{{f{BjAAn}}c}b{{Bf{}{{Bb{{f{{Dl{Dj}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAb}{{}AAd}{Fb{{f{c}}}{}}000000{Fb{{f{Bjc}}}{}}000000{Fbb}000000{{{f{AAl}}}d}{{{f{AAn}}}d}{{{f{AAf}}}d}{{{f{{AAh{c}}}}}dA`}{{{f{AAj}}}d}{{{f{AAl}}}{{f{Mf}}}}{{{f{AAn}}}{{f{Mf}}}}{{{f{AAf}}}{{f{Mf}}}}{{{f{{AAh{c}}}}}{{f{Mf}}}A`}{{{f{AAj}}}{{f{Mf}}}}{{{f{BjAAb}}}E`}{{{f{BjAAd}}}E`}{{{f{BjAB`}}}E`}{{{f{BjAAj}}}E`}{cc{}}000000{{{f{Dn}}FbFbBh}{{Ah{{ABb{AAj}}}}}}{{}Fb}000000{{{f{BjAAl}}}Ff}{{{f{BjAAn}}}Ff}{{{f{BjAAf}}}Ff}{{{f{Bj{AAh{c}}}}}FfA`}{{{f{BjAAj}}}Ff}{{}c{}}000000{{BhFb{B`{Dn}}}AAb}{{BhFb{B`{Dn}}}AAd}{{BhFbFb}AAl}{{BhFbFb}AAn}{{BhFbFb}AAf}{{BhFb}AB`}{{BhFbFbDn}{{AAh{c}}}A`}{{BhFbFbDnDn}{{AAh{c}}}A`}{c{{Nn{e}}}{}{}}000000{{}{{Nn{c}}}{}}000000{fO`}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{En}}}En}{{f{f{Bjc}}}b{}}{fb}{{}En}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{En}}{f{En}}}d}{{f{f{c}}}d{}}00{{{f{En}}{f{BjGf}}}Gh}{cc{}}{{{f{En}}{f{Bjc}}}bABd}{{}Fb}{{}c{}}{{{f{En}}}d}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}5``{{ABfBh}{{l{c}}}C`}{{ABh{f{{l{c}}}}}{{l{c}}}C`}10{{ABhBhDn}{{l{c}}}C`}0{{ABfBh}{{Nn{{l{c}}e}}}C`{}}{{ABh{f{{l{c}}}}}{{Nn{{l{c}}e}}}C`{}}10{{ABhBhDn}{{Nn{{l{c}}e}}}C`{}}0`{ABjABj}``{{ABlBhDn}e{}{{ABn{c}}}}{{eBhDn}ABn{}{{Hd{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{cc{}}0{{}Fb}0{{}c{}}000{{{f{AC`}}}ACb}{{{f{BjACb}}}{{B`{c}}}{}}{{{f{Bj{ACd{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACd{c}}}}}{{B`{e}}}Fn{}}`{{{f{ACb}}}{{Hb{Fb{B`{Fb}}}}}}{{{f{{ACd{c}}}}}{{Hb{Fb{B`{Fb}}}}}Bf}{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{fO`}099`````````````````````````{{fh}b}0000{{}Fl}{{}Hl}{{FlFl}Fl}{{HlHl}Hl}{{{f{BjFl}}Fl}b}{{{f{BjHl}}Hl}b}3210{{{f{Fl}}}Lj}0{{{f{Hl}}}Dj}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{Kn{c}}}}}{{Kn{c}}}C`}{{{f{{Ih{c}}}}}{{Ih{c}}}C`}{{{f{ACf}}}ACf}{{{f{Fl}}}Fl}{{{f{Hl}}}Hl}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACh}}}b}0{FlFl}{HlHl}{{{f{Fl}}Fl}d}{{{f{Hl}}Hl}d}{{}{{Kn{c}}}C`}{{}{{Ih{c}}}C`}{{}Fl}{{}Hl}{{{f{{Kl{c}}}}}{{f{e}}}C`{}}{Fb{{f{c}}}{}}000000{Fb{{f{Bjc}}}{}}000000{{FlFl}Fl}{{HlHl}Hl}{{}d}{{{f{Lb}}}{{B`{Hj}}}}{{{f{{Ih{c}}}}}{{B`{Hj}}}C`}{{{Ih{c}}Hj}{{Ih{c}}}C`}{{{Ih{c}}{B`{Hj}}}{{Ih{c}}}C`}{Fbb}000000<;5{{{f{Fl}}{f{Fl}}}d}{{{f{Hl}}{f{Hl}}}d}7{{{f{BjFl}}c}b{{Gn{}{{Bb{Fl}}}}}}{{{f{BjHl}}c}b{{Gn{}{{Bb{Hl}}}}}}{{{Ih{c}}d}{{Ih{c}}}C`}{{{Ih{c}}{B`{d}}}{{Ih{c}}}C`}{{{f{{Ih{c}}}}Fl}{{Ih{c}}}C`}{{{f{{Ih{c}}}}Fl}{{Ih{e}}}C`C`}{{{Ih{c}}Hl}{{Ih{c}}}C`}{{{Ih{c}}{B`{Hl}}}{{Ih{c}}}C`}{{{f{{Ih{c}}}}{f{BjGf}}}GhC`}{{{f{ACf}}{f{BjGf}}}Gh}{{{f{Fl}}{f{BjGf}}}Gh}0000{{{f{Hl}}{f{BjGf}}}Gh}0000{cc{}}000000{Lj{{B`{Fl}}}}{Dj{{B`{Hl}}}}{LjFl}0{DjHl}010{cFl{{Gn{}{{Bb{Fl}}}}}}{cHl{{Gn{}{{Bb{Hl}}}}}}{{{f{Df}}}{{B`{Fl}}}}{{{f{Df}}}{{B`{Hl}}}}{{{f{{Ih{c}}}}}{{B`{Hj}}}C`}{{{f{{Ih{c}}}}}dC`}{{{f{Hl}}}d}{{{f{Lb}}}Hl}{{{f{{Ih{c}}}}}HlC`}0{{{f{{Ih{c}}}}}{{B`{f}}}C`}0{{{f{Bj{Kn{c}}}}}{{f{Bj{Ih{c}}}}}C`}{{{f{Hl}}}Jh}{{}Fb}000000{{{f{BjFl}}Fl}b}{{{f{BjHl}}Hl}b}{{FlFl}Fl}{{HlHl}Hl}{{{f{Fl}}Fl}d}{{{f{Hl}}Hl}d}{{}c{}}000000{Flc{}}{Hlc{}}{{{f{Fl}}}d}{{{f{Hl}}}d}{{{f{{Ih{c}}}}}dC`}21{{{f{{Ih{c}}}}}JhC`}111{{{f{Fl}}}{{ACj{Fl}}}}{{{f{Hl}}}{{ACj{Hl}}}}{{{f{Fl}}}{{ACl{Fl}}}}{{{f{Hl}}}{{ACl{Hl}}}}{{}d}{{}{{f{{AD`{ACn}}}}}}{{{f{Lb}}}{{B`{Kj}}}}{{{f{{Ih{c}}}}}{{B`{Kj}}}C`}{{{Ih{c}}}{{Ih{c}}}C`}{{{Ih{c}}B`}{{Ih{c}}}C`}{{{f{{Ih{c}}}}{Ih{c}}}{{ADb{c}}}C`}4321{{{Ih{c}}}{{Kn{c}}}C`}{FlFl}{HlHl}{{{f{{Kn{c}}}}}{{Ld{{Ih{c}}}}}C`}{{{f{BjFl}}Fl}b}{{{f{BjHl}}Hl}b}{{{f{BjFl}}Fld}b}{{{f{BjHl}}Hld}b}{{{f{Bj{Ih{c}}}}{B`{Hj}}}bC`}{{{f{Bj{Ih{c}}}}d}bC`}{{{f{BjHl}}d}b}{{{f{Bj{Ih{c}}}}Hl}bC`}{{{f{Bj{Ih{c}}}}B`}bC`}033{{{f{Bj{Ih{c}}}}Jh}bC`}{{{f{BjHl}}Jh}b}{{{Ih{c}}Jh}{{Ih{c}}}C`}{{{Ih{c}}{B`{Jh}}}{{Ih{c}}}C`}{{FlFl}Fl}{{HlHl}Hl}>=10{{{Kn{c}}}{{Ih{c}}}C`}{fc{}}0000{{{f{BjFl}}Fl}b}{{{f{BjHl}}Hl}b}{c{{Nn{e}}}{}{}}000000{{}{{Nn{c}}}{}}000000{{{f{{Kn{c}}}}}{{B`{{Ld{{Ih{c}}}}}}}C`}{{{f{{Kn{c}}}}}{{B`{{Ij{{Ih{c}}}}}}}C`}{fO`}000000:9{{{f{{Kn{c}}}}}{{f{{ADd{Lb}}}}}C`}{{}c{}}000000{AChACh}0{{{f{{Kn{c}}}}}{{Ij{{Ih{c}}}}}C`}````{{fh}b}{{{f{{ADf{c}}}}Fb}{{Hb{{ADf{c}}{ADf{c}}}}}Ib}{e{{ADf{c}}}Ib{{Gn{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{ADf{c}}}Ib{{Gn{}{{Bb{{f{c}}}}}}}}{{ADhe}g{}{{Gn{}{{Bb{c}}}}}{}}0{{{f{I`}}}{{f{ADj}}}}{{{f{{ADf{c}}}}}{{f{ADj}}}Ib}{{{f{Bj{ADf{c}}}}}{{f{BjADj}}}Ib}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADf{c}}}}Fb}dIb}{{{f{{ADf{c}}}}}{{ADf{c}}}{IbA@j}}{{f{f{Bjc}}}b{}}{fb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{{ADf{c}}}}}{{f{ADh}}}Ib}{{{f{{f{I`}}}}{f{{f{I`}}}}}d}{{{f{I`}}{f{I`}}}d}{{{f{{ADf{c}}}}{f{BjGf}}}Gh{IbADl}}{{{Fh{c}}}{{ADf{c}}}Ib}{cc{}}{{FbADh}{{ADf{c}}}Ib}{{{f{{ADf{c}}}}Fb}{{B`{{f{c}}}}}Ib}{{}ADh}{{{f{H`}}{f{{ADf{c}}}}{f{{ADf{c}}}}}{{ADf{c}}}Ib}{{ADh{f{H`}}cc}{{ADf{e}}}{}Ib}{{{f{H`}}{f{{ADf{c}}}}e}{{ADf{c}}}Ib{}}{{{f{H`}}c{f{{ADf{e}}}}}{{ADf{e}}}{}Ib}{{}Fb}{{}c{}}{{{f{{ADf{c}}}}}eIb{}}{{{f{{ADf{c}}}}Fb}dIb}0{{fFb}d}{{{f{{ADf{c}}}}}{{AE`{egADn}}}Ib{}{}}{{{f{{ADf{c}}}}}{{AE`{{f{c}}{AEb{c}}ADn}}}Ib}{{{f{{ADf{c}}}}}FbIb}0`{db}{{{f{Bj{ADf{c}}}}{B`{H`}}}bIb}{{{f{Bj{ADf{c}}}}FbFb}bIb}{{fFbFb}c{}}01{{{f{{ADf{c}}}}Fb}{{Hb{{ABb{Gj}}{ABb{Gj}}}}}Ib}0{{{f{I`}}}{{ABb{I`}}}}{{{f{{ADf{c}}}}}{{ABb{Gj}}}Ib}{fc{}}{g{{Nn{{ADf{c}}e}}}Ib{}{{Gn{}{{Bb{{Nn{{f{c}}e}}}}}}}}{g{{Nn{{ADf{c}}e}}}Ib{}{{Gn{}{{Bb{{Nn{{B`{{f{c}}}}e}}}}}}}}{{ADhg}{{Nn{ie}}}{}{}{{Gn{}{{Bb{{Nn{ce}}}}}}}{}}0{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}{{{f{I`}}}{{f{Df}}}}{{}{{f{Df}}}}{{{f{{ADf{c}}}}}{{B`{{f{H`}}}}}Ib}{{{f{{ADf{c}}}}Fb}{{f{c}}}Ib}{{{f{{ADf{c}}}}Fb}eIb{}}1{{{f{{ADf{c}}}}}{{AEb{c}}}Ib}{{{f{{ADf{c}}}}}eIb{}}{{}c{}}{{{ADf{c}}{B`{H`}}}{{ADf{c}}}Ib}{{{f{{ADf{c}}}}{B`{H`}}}{{ABb{Gj}}}Ib}1`{{{f{Bj{AEd{c}}}}}bIb}0{{{f{Bj{AEd{c}}}}{B`{c}}}bIb}{{{f{Bj{AEd{c}}}}c}bIb}{{{f{Bj{AEd{c}}}}{f{ADj}}}bIb}{{{f{Bj{AEd{c}}}}{f{ADj}}}{{Ah{b}}}Ib}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEd{c}}}Ib}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{AEd{c}}}{{AEf{c}}}Ib}{cc{}}{{}Fb}{{}c{}}{{BhFb}{{AEd{c}}}Ib}{{{f{Bj{AEd{c}}}}}AfIb}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}5````{{{f{BjAEh}}}b}{{{f{BjAEh}}{B`{{f{ADj}}}}}b}{{{f{BjAEh}}{f{ADj}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{AEj}}{f{BjGf}}}Gh}{cc{}}{{BhFb}{{ABb{AEh}}}}{{}AEl}{{}ADh}{{}Fb}{{}c{}}{{}d}`{{AEnAElADh}b}{{{f{BjAEh}}}Af}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}6``````````````````````````````````````````{{fh}b}{{{f{AF`}}}n}{{{f{{AFd{}{{AFb{c}}}}}}g}{{AFd{}{{AFb{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{AFf}}{f{Cd}}}AFf}{{{f{AFf}}{f{Cd}}}{{l{c}}}C`}{{{f{{AFd{}{{AFb{c}}}}}}i{f{Bj{Dl{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{AFd{}{{AFb{c}}}}}}g}{{AFd{}{{AFb{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{AFh}}Ed}Ef}{{{f{AFh}}{f{{Dl{Af}}}}{f{Eh}}}{{Ah{Ef}}}}{{{f{AFj}}}{{Ah{Ef}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFl}}{f{Dn}}}{{Ah{Af}}}}0{{{f{AFl}}{f{Dn}}En}{{Ah{Af}}}}{{{f{AFn}}}AFn}{{f{f{Bjc}}}b{}}{fb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{AFn}}{f{AFn}}}d}{{{f{{AG`{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGb}}}{{Ah{Af}}}}{{{f{AGb}}}{{Ah{{Hb{Af{AGd{Jl}}}}}}}}`{{{f{AGf}}c}{{Ah{AGf}}}{}}{{{f{AGh}}{f{G`}}}{{Ah{{l{c}}}}}C`}`{{{f{AFn}}{f{BjGf}}}Gh}{cc{}}`{{BhcFb}AGj{}}{{BhFb}AGl}`{{{f{AGn}}Fb}{{Ah{Hh}}}}{{{f{AGn}}Fb}Hh}::{{{f{AFn}}{f{Bjc}}}bABd}{{}Fb}{{}c{}}{{{f{AH`}}}{{Ah{G`}}}}{{{f{AHb}}}{{Ah{G`}}}}??{{{f{AF`}}}{{B`{c}}}{}}{{{f{AF`}}}{{B`{n}}}}{{{f{AHd}}}{{B`{c}}}{}}2{{{f{AF`}}}{{B`{{Hb{cc}}}}}{}}{{{f{AFj}}}{{Ah{Fb}}}}{{{f{AHf}}FbFb}{{l{c}}}C`}{{{f{{AG`{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGb}}}{{Ah{{AGd{Jl}}}}}}{{{f{AHd}}nMl}{{Ah{{B`{c}}}}}{}}{{{f{AHh}}}AHh}{{{f{AHj}}{f{Cd}}Mn}{{Ah{Af}}}}{{{f{AHl}}c{B`{e}}}{{Ah{AHl}}}{{Gn{}{{Bb{Hj}}}}}{}}{{{f{AHl}}ci}{{Ah{AHl}}}{{Gn{}{{Bb{Hj}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AHl}}{f{G`}}{B`{c}}}{{Ah{AHl}}}{}}{{{f{AHn}}Jl}{{l{c}}}C`}{{{f{AI`}}Jlc}{{l{e}}}{}C`}`{{{f{AFh}}d}{{l{c}}}C`}{{{f{AFh}}Ed}{{l{c}}}C`}{{{f{AIb}}Dj}{{B`{n}}}}{{{f{AF`}}}{{B`{c}}}{}}{{{f{AId}}{f{c}}}{{Ah{AId}}}N`}{{{f{AIf}}{f{c}}}AIfN`}{{{f{AIh}}}{{Fh{{f{{Dl{Dj}}}}}}}}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}{{{f{AFj}}}{{Ah{AFj}}}}9{{}c{}}`{{{f{AIj}}{f{G`}}{f{{l{c}}}}}{{Ah{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`Gj{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AIl{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}D`C`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`{GjAIn}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`Gj{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Gl{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`Gj{{Cj{}{{Cb{g}}}}}{{C`{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}C`C`{{Cj{ff}{{Cb{{ABb{Gj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{ABb{Gj}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Nn{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{Nn{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AJ`{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Nn{{l{m}}i}}}C`C`GjAJb{{Cj{ff}{{Cb{{Nn{gi}}}}}}}{{C`{}{{Gl{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{Nn{{l{m}}i}}}C`C`GjAJb{{Cj{ff}{{Cb{{Nn{gi}}}}}}}{{C`{}{{Gl{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Nn{{l{c}}g}}}C`C`AJb{{Cj{ff}{{Cb{{Nn{{ABb{Gj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Nn{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{Nn{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{Nn{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{Nn{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{Nn{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Nn{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{Nn{{l{k}}g}}}C`{GjAIn}AJb{{Cj{f}{{Cb{{Nn{eg}}}}}}}{{C`{}{{Gl{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AJd{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AJdC`}{{{f{{l{c}}}}g}{{l{i}}}C`Gj{{Cj{f}{{Cb{e}}}}}{{C`{}{{Gl{e}}}}}}{{{l{c}}g}{{l{i}}}C`Gj{{Cj{}{{Cb{e}}}}}{{C`{}{{Gl{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{GjAIn}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Gl{e}}}}}}0{{{f{{l{c}}}}}FbA`}0{{JhJh}Jh}{{{f{Ef}}Hj}{{Ah{b}}}}{{{f{{AJf{Hj}}}}Hj}{{Ah{b}}}}````{{fh}b}{{{f{{l{c}}}}eAJhd}{{Fh{Hj}}}C`{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AJh}}}AJh}{{f{f{Bjc}}}b{}}{fb}{{}AJh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{AJh}}{f{AJh}}}d}{{f{f{c}}}d{}}00{{{f{AJh}}{f{BjGf}}}Gh}{cc{}}{{{f{AJh}}{f{Bjc}}}bABd}{{}Fb}{{}c{}}{{{f{{Dl{f}}}}cHje}{{Fh{Hj}}}{{Bf{}{{Bb{B`}}}}}{{Cd{fFbf}{{Cb{d}}}}}}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}5`{{Fb{f{Bj{Fh{d}}}}}b}```{{{f{AJj}}FbFb}AJj}0{{Fb{f{{Dl{Af}}}}{f{BjEh}}}{{Ah{{AJl{Ef}}}}}}{{{f{{Dl{Af}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{AJn}}}}{{{f{{Dl{Af}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{{AK`{Jl}}}}}}{{Bh{f{{Dl{Af}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{AKb}}}}{{Bh{f{{Dl{Af}}}}}{{Ah{AKb}}}}{{{f{Af}}}{{Ah{Ff}}}}{{{f{{Dl{Af}}}}}{{Ah{AJn}}}}{{{f{{Dl{Af}}}}}{{Ah{AKb}}}}0```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ed}}}Ed}{{{f{Eh}}}Eh}{{f{f{Bjc}}}b{}}0{fb}0{{}Ed}{{}Eh}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0``{Fbb}0{{{f{Ed}}{f{Ed}}}d}{{{f{Eh}}{f{Eh}}}d}{{f{f{c}}}d{}}00000{{{f{Ed}}{f{BjGf}}}Gh}{{{f{Eh}}{f{BjGf}}}Gh}{cc{}}{{{f{Eh}}}Ed}1{{{f{Ed}}}Eh}{{{f{Ed}}{f{Bjc}}}bABd}{{{f{Eh}}{f{Bjc}}}bABd}{{}Fb}0{{}c{}}0````{{}Ed}{{}Eh}``{{{f{AJj}}FbFb}AJj}0{fc{}}0{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{fO`}077{{Edd}Ed}{{Ehd}Eh}1010{{Ehc}Eh{{Gn{}{{Bb{d}}}}}}210{EdEd}{EhEh}`{AKdJl}00{{}d}??0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000{{{f{E`}}}d}{{{f{In}}{f{In}}}c{}}{{G`G`}c{}}{{{f{G`}}{f{G`}}}c{}}{{{f{D`}}{f{Df}}}c{}}{{D`D`}c{}}{{{f{D`}}{f{D`}}}c{}}{{{f{Ej}}{f{{Dl{Dj}}}}}c{}}{{EjEj}c{}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{Hh}}{f{Hh}}}Hh}{{{f{{l{c}}}}{f{Af}}}{{Nn{AfAKf}}}{}}000000{{{f{D`}}{f{Af}}}{{Ah{Af}}}}{{{f{Ej}}{f{Af}}}{{Ah{Af}}}}{{{f{G`}}{f{Af}}}{{Ah{Af}}}}{{{f{E`}}{f{Al}}}Af}{{{f{G`}}{f{Al}}}Af}{{{f{D`}}{f{Al}}}Af}{{{f{Ej}}{f{Al}}}Af}{{{f{{AEf{c}}}}{f{Al}}}AfIb}{{{f{G`}}}d}{{{f{G`}}}{{B`{d}}}}{{{f{E`}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{E`}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{E`}}c}E`{{Cd{{B`{Af}}}{{Cb{{B`{Af}}}}}}Cf}}{{{f{G`}}c}G`{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{D`}}c}D`{{Cd{{B`{{f{Df}}}}}{{Cb{{B`{{AKh{Df}}}}}}}}Cf}}{{{f{Ej}}c}Ej{{Cd{{B`{{f{{Dl{Dj}}}}}}}{{Cb{{B`{{AKh{{Dl{Dj}}}}}}}}}}Cf}}{{{f{{AEf{c}}}}e}{{AEf{c}}}Ib{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{E`}}c}E`{{Cj{Ch}{{Cb{Af}}}}}}{{{f{E`}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AKj}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{AKl}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{G`}}{f{Cd}}}G`}{{{f{D`}}{f{Cd}}}D`}{{{f{Ej}}{f{Cd}}}Ej}{{{f{G`}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}{f{Cd}}}{{l{c}}}C`}{{{f{Ej}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}c}D`{{Cj{{f{Df}}}{{Cb{{f{Df}}}}}}}}{{{f{Ej}}c}Ej{{Cj{{f{{Dl{Dj}}}}}{{Cb{{f{{Dl{Dj}}}}}}}}}}{{{f{E`}}{f{Cd}}}{{Ah{E`}}}}{{{f{E`}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{Af}}{f{c}}}{{Cb{c}}}}}}{{{f{G`}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{D`}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{{f{Df}}}}{f{c}}}{{Cb{c}}}}}}{{{f{Ej}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{{f{{Dl{Dj}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{AEf{c}}}}g{f{Bj{Dl{e}}}}}bIb{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{E`}}c}E`{{Cd{Af}{{Cb{Af}}}}Cf}}{{{f{G`}}c}G`{{Cd{d}{{Cb{d}}}}Cf}}{{{f{D`}}c}D`{{Cd{{f{Df}}}{{Cb{{AKh{Df}}}}}}Cf}}{{{f{Ej}}c}Ej{{Cd{{f{{Dl{Dj}}}}}{{Cb{{AKh{{Dl{Dj}}}}}}}}Cf}}{{{f{{AEf{c}}}}e}{{AEf{c}}}Ib{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{D`}}c}D`{{Cj{Eb{f{Df}}}{{Cb{Eb}}}}Cf}}{{{f{G`}}Ed}Ef}{{{f{D`}}Ed}Ef}{{{f{Ej}}Ed}Ef}{{{f{AKb}}Ed}Ef}{{{f{G`}}{f{{Dl{Af}}}}{f{Eh}}}{{Ah{Ef}}}}{{{f{D`}}{f{{Dl{Af}}}}{f{Eh}}}{{Ah{Ef}}}}{{{f{Ej}}{f{{Dl{Af}}}}{f{Eh}}}{{Ah{Ef}}}}{{{f{AKb}}{f{{Dl{Af}}}}{f{Eh}}}{{Ah{Ef}}}}{{{f{G`}}}{{Ah{Ef}}}}{{{f{D`}}}{{Ah{Ef}}}}{{{f{Ej}}}{{Ah{Ef}}}}{{{f{{AEf{c}}}}}{{Ah{Ef}}}Ib}{eAKn{}{{Gn{}{{Bb{c}}}}}}0{{ADhe}AL`{}{{Gn{}{{Bb{c}}}}}}0{{{f{D`}}}Ej}{{{f{Hh}}}Hh}{{{f{Dn}}}{{f{Dn}}}}{{{f{Mf}}}{{f{Dn}}}}{{{f{ALb}}}{{f{Dn}}}}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}}{{B`{{f{{Dl{c}}}}}}}A@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{{f{E`}}{f{{l{c}}}}{f{{l{e}}}}g}E`C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{G`}}{f{G`}}}c{}}{{G`G`}c{}}0110{f{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000000000000000000000000{Dn{{ABb{Dn}}}}{{{f{ALn}}{f{ALn}}c}{{Ah{ALn}}}AM`}{{{f{AMb}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Hh}}{f{Dn}}}Hh}{{{f{Dn}}Dn}Dn}{{{f{E`}}{f{Dn}}}{{Ah{Af}}}}{{{f{G`}}{f{Dn}}}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}}{{Ah{Af}}}}{{{f{Ej}}{f{Dn}}}{{Ah{Af}}}}{{{f{AKb}}{f{Dn}}}{{Ah{Af}}}}{{{f{AMb}}{f{Dn}}En}{{Ah{Af}}}}{{{f{In}}{f{Dn}}En}{{Ah{Af}}}}{{{f{E`}}{f{Dn}}En}{{Ah{Af}}}}{{{f{G`}}{f{Dn}}En}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}En}{{Ah{Af}}}}{{{f{Ej}}{f{Dn}}En}{{Ah{Af}}}}{{{f{AKb}}{f{Dn}}En}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Nn{AfAKf}}}{}}0000{{{f{AKj}}{f{Af}}}{{Ah{Af}}}}{{{f{AKl}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMd{ce}}}}}{{AMd{ce}}}C`C`}{{{f{AMf}}}AMf}{{{f{Hh}}}Hh}{{{f{AMh}}}AMh}{{{f{Dn}}}Dn}{{{f{AMj}}}AMj}{{{f{Mf}}}Mf}{{{f{AMl}}}AMl}{{{f{AMn}}}AMn}{{{f{AN`}}}AN`}{{{f{Lh}}}Lh}{{{f{Ll}}}Ll}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{Mb}}}Mb}{{{f{M`}}}M`}{{{f{Cn}}}Cn}{{{f{Cl}}}Cl}{{{f{ANf}}}ANf}{{{f{ANh}}}ANh}{{{f{Dd}}}Dd}{{{f{Dh}}}Dh}{{{f{ANj}}}ANj}{{{f{An}}}An}{{{f{ANl}}}ANl}{{{f{ANn}}}ANn}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{ADh}}}ADh}{{{f{AOd}}}AOd}{{f{f{Bjc}}}b{}}00000000000000000000000000000{fb}00000000000000000000000000000{{{f{BjMf}}Dn}b}{AOfe{}{{AKn{c}}AIn}}0{{AOfADh}e{}{{AL`{c}}AIn}}0{{{f{Dn}}}d}00{AOhDn}{{}Hh}{{}AMh}{{}Dn}{{}ADh}{Fb{{f{c}}}{}}{{{f{{AMd{ce}}}}}{{f{g}}}C`C`{}}1111111111111111111111111111111111{{{f{Bj{AMd{ce}}}}}{{f{Bjg}}}C`C`{}}{Fb{{f{Bjc}}}{}}0000000000000000000000000000000000{{{f{In}}{f{In}}}c{}}{{{f{{l{c}}}}{f{Af}}}{{Nn{AfAKf}}}{}}000000{Fbb}0000000000000000000000000000000000{{{f{AMb}}}{{f{Dn}}}}{{{f{In}}}{{f{Dn}}}}{{{f{Hh}}}Dn}{{{f{Mf}}}{{f{Dn}}}}`{{{f{Hh}}{f{Hh}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{Dn}}{f{ADh}}}d}{{{f{Dn}}{f{Dn}}}d}{{{f{AMj}}{f{AMj}}}d}{{{f{Mf}}{f{Mf}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{ADh}}{f{ADh}}}d}{{{f{AOd}}{f{AOd}}}d}{{{f{Hh}}{f{Hh}}d}d}{{{f{E`}}{f{E`}}}G`}{{{f{G`}}{f{G`}}}G`}{{{f{D`}}{f{Df}}}G`}{{{f{D`}}{f{D`}}}G`}{{{f{Ej}}{f{{Dl{Dj}}}}}G`}{{{f{Ej}}{f{Ej}}}G`}542310{{f{f{c}}}d{}}00000000000000000000000{{{f{E`}}}{{Ah{{Hb{Af{AGd{Jl}}}}}}}}{{{f{{AMd{ce}}}}}MfC`C`}{{{f{G`}}d}{{Ah{G`}}}}{{{f{Ej}}{f{{Dl{Dj}}}}}{{Ah{Ej}}}}{{{f{D`}}{f{G`}}}{{Ah{{l{Dd}}}}}}{{{f{Ej}}{f{G`}}}{{Ah{{l{Dh}}}}}}{{{f{{AEf{c}}}}{f{G`}}}{{Ah{{l{{Hn{c}}}}}}}Ib}{{AM`{f{AOj}}{f{AOj}}}{{Ah{AOj}}}}{{{f{E`}}{f{BjGf}}}Gh}{{{f{D`}}{f{BjGf}}}Gh}{{{f{Ej}}{f{BjGf}}}Gh}{{{f{{AEf{c}}}}{f{BjGf}}}GhIb}{{{f{AMf}}{f{BjGf}}}Gh}{{{f{Hh}}{f{BjGf}}}Gh}0{{{f{AMh}}{f{BjGf}}}Gh}{{{f{Dn}}{f{BjGf}}}Gh}0{{{f{AMj}}{f{BjGf}}}Gh}{{{f{Mf}}{f{BjGf}}}Gh}{{{f{AMl}}{f{BjGf}}}Gh}0{{{f{ADh}}{f{BjGf}}}{{Nn{bAOl}}}}{{{f{AOd}}{f{BjGf}}}{{Nn{bAOl}}}}{{{f{E`}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}0000000{dHh}{{{f{Df}}}Hh}{{{f{{Dl{Dj}}}}}Hh}{cHhAOn}{{{B`{c}}}Hh{{B@`{Hh}}}}5{{{f{ADh}}}Dn}{HhDn}7{{{f{Hh}}}Dn}88{{{f{Hh}}}Mf}{{{f{B@b}}}Mf}{{{f{AOd}}}AMl};;;;;;;;;;;;;;;;;;;;;;{B@dADh}{B@fADh}={{{f{ADh}}d}Dn}{cE`{{Gn{}{{Bb{{B`{{ABb{Gj}}}}}}}}}}{cE`{{Gn{}{{Bb{{B`{Af}}}}}}}}{eE`{{B@h{Af}}}{{Gn{}{{Bb{c}}}}}}{cG`{{Gn{}{{Bb{d}}}}}}{eD`{{`{Df}}}{{Gn{}{{Bb{c}}}}}}{eD`{{Kd{Df}}}{{Gn{}{{Bb{{B`{c}}}}}}}}{eEj{{`{{Dl{Dj}}}}}{{Gn{}{{Bb{c}}}}}}{eEj{{Kd{{Dl{Dj}}}}}{{Gn{}{{Bb{{B`{c}}}}}}}}{e{{AEf{c}}}Ib{{Gn{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}D`{{Kd{Df}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}Ej{{Kd{{Dl{Dj}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEf{c}}}Ib{{Bf{}{{Bb{{B`{c}}}}}}}}:;97865{eAKb{{Kd{{Dl{Dj}}}}}{{Gn{}{{Bb{{B`{c}}}}}}}}{eAKb{{`{{Dl{Dj}}}}}{{Gn{}{{Bb{c}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}D`{{Kd{Df}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}Ej{{Kd{{Dl{Dj}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEf{c}}}Ib{{Bf{}{{Bb{c}}}}}}{cE`{{Hd{}{{Bb{{B`{Af}}}}}}}}{cG`{{Hd{}{{Bb{{B`{d}}}}}}}}{cG`{{Hd{}{{Bb{d}}}}}}{eD`{{Kd{Df}}J`Jb}{{Hd{}{{Bb{{B`{c}}}}}}}}{eD`{{`{Df}}J`JbB@j}{{Hd{}{{Bb{c}}}}}}{eEj{{Kd{{Dl{Dj}}}}J`Jb}{{Hd{}{{Bb{{B`{c}}}}}}}}{eEj{{`{{Dl{Dj}}}}J`JbB@j}{{Hd{}{{Bb{c}}}}}}{{cBhDn}E`{{Hd{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dl{d}}}}}G`}{{Bh{f{{Dl{c}}}}}D`{{Kd{Df}}}}{{Bh{f{{Dl{c}}}}}Ej{{Kd{{Dl{Dj}}}}}}{{Bh{f{{Dl{c}}}}}{{AEf{c}}}Ib}{{Bh{f{{Dl{{B`{d}}}}}}}G`}{{Bh{f{{Dl{{B`{c}}}}}}}D`{{Kd{Df}}}}{{Bh{f{{Dl{{B`{c}}}}}}}Ej{{Kd{{Dl{Dj}}}}}}{{Bh{f{{Dl{{B`{c}}}}}}}{{AEf{c}}}Ib}{cG`{{Hf{}{{Bb{{B`{d}}}}}}}}{{{Fh{c}}ADh}{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}A@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{{Fh{c}}ADh}{{AIn{}{{ALd{e}}{ALf{c}}{ALh{g}}}}}{ALj{ALl{e}}}A@j{{Fn{}{{Bb{e}}}}HfJ`Jb}}{{FbcADh}{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}A@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{Bh{f{Af}}Fb}E`}{{BhdFb}G`}{{Bh{f{Df}}Fb}D`}{{Bh{f{{Dl{Dj}}}}Fb}Ej}{{Bh{f{{Dl{Dj}}}}Fb}AKb}{{BhcFb}{{AEf{c}}}Ib}{{FbADh}{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}A@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{BhFb}E`}{{BhFb}G`}{{BhFb}D`}{{BhFb}Ej}{{BhFb}AKb}{{BhFb}{{AEf{c}}}Ib}{{BhFb{f{Dn}}}E`}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}Fb}{{B`{c}}}A@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{{f{In}}Fb}{{Ah{Hh}}}}{{{f{AMb}}Fb}{{Ah{Hh}}}}0{{{f{E`}}Fb}{{Ah{Hh}}}}{{{f{G`}}Fb}{{Ah{Hh}}}}{{{f{D`}}Fb}{{Ah{Hh}}}}{{{f{Ej}}Fb}{{Ah{Hh}}}}{{{f{AKb}}Fb}{{Ah{Hh}}}}{{{f{{AEf{c}}}}Fb}{{Ah{Hh}}}Ib}{{{f{In}}Fb}Hh}{{{f{AMb}}Fb}Hh}0{{{f{E`}}Fb}Hh}{{{f{G`}}Fb}Hh}{{{f{D`}}Fb}Hh}{{{f{Ej}}Fb}Hh}{{{f{AKb}}Fb}Hh}{{{f{{AEf{c}}}}Fb}HhIb}{{{f{E`}}Fb}{{B`{Af}}}}{{}Dn}00000000000000000000000{{{f{E`}}}Af}{{{f{{AEf{c}}}}Fb}{{B`{{f{I`}}}}}Ib}0{{{f{Hh}}}{{B`{{f{Df}}}}}}{{{f{B@l}}Fb}Hh}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}Fb}{{B`{c}}}A@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{{f{E`}}}Fb}{{{f{D`}}}Fb}{{{f{AKb}}}Fb}{{{f{E`}}dd}{{Ah{Al}}}}{{{f{G`}}dd}{{Ah{Al}}}}{{{f{D`}}dd}{{Ah{Al}}}}{{{f{Ej}}dd}{{Ah{Al}}}}{{{f{AKb}}dd}{{Ah{Al}}}}{{{f{{AEf{c}}}}dd}{{Ah{Al}}}Ib}{{{f{E`}}{f{E`}}}G`}{{{f{G`}}{f{G`}}}G`}{{{f{D`}}{f{D`}}}G`}{{{f{D`}}{f{Df}}}G`}{{{f{Ej}}{f{Ej}}}G`}{{{f{Ej}}{f{{Dl{Dj}}}}}G`}543210{{{f{Hh}}{f{Bjc}}}bABd}{{{f{AMh}}{f{Bjc}}}bABd}{{{f{Dn}}{f{Bjc}}}bABd}{{{f{Mf}}{f{Bjc}}}bABd}{{{f{AMl}}{f{Bjc}}}bABd}{{{f{ADh}}{f{Bjc}}}bABd}{{{f{AOd}}{f{Bjc}}}bABd}{{{f{Hh}}{f{Bjc}}d}bABd}{DnDn}{{}Fb}0000000000000000000000000000000000{{{f{E`}}}{{f{Dn}}}}{{{f{Dn}}}{{B`{{f{Dn}}}}}}{{{f{ADh}}}{{B`{{f{ADh}}}}}}{{}c{}}0000000000000000000000000000000000{{B@n{B`{Fb}}Fb}{{Ah{In}}}}{{B@n{B`{Fb}}Fb}In}{{{f{E`}}}c{}}{{{f{G`}}}c{}}{{{f{D`}}}c{}}{{{f{Ej}}}c{}}{{{f{AKb}}}c{}}{{{f{{AEf{c}}}}}eIb{}}{{BA`Dn}{{Ah{Kj}}}}{InAf}{B@nAf}{Hh{{Ah{Hh}}}}{{{f{Dn}}}d}00{{{f{Hh}}}d}1111010111101{{{f{ADh}}}d}12121222212222120{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}}{{AE`{cgADn}}}A@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{{f{E`}}}{{`{{Bf{}{{Bb{Jl}}}}}}}}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}}{{B`{c}}}A@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{{f{Dn}}}{{f{Dn}}}}{{{f{E`}}{f{E`}}}G`}{{{f{G`}}{f{G`}}}G`}{{{f{D`}}{f{Df}}}G`}{{{f{D`}}{f{D`}}}G`}{{{f{Ej}}{f{Ej}}}G`}{{{f{Ej}}{f{{Dl{Dj}}}}}G`}543210{{{f{ALn}}{f{ALn}}}{{Ah{{Hb{ALnALn}}}}}}{{E`E`}{{Ah{{Hb{E`E`}}}}}}{{{f{Dn}}{f{Dn}}}{{Ah{d}}}}{{{f{AMh}}}{{B`{Dn}}}}{{{f{G`}}}{{B`{d}}}}{{{f{G`}}}Kj}{{{f{D`}}}Kj}{{{f{Ej}}}Kj}{{{f{G`}}}{{B`{n}}}}{{{f{AKj}}}{{B`{Id}}}}{{{f{AKl}}}{{B`{n}}}}{{{f{AKj}}}Kj}{{{f{AKl}}}Kj}{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}9876{{Bh{f{{Dl{Dj}}}}FbFb}G`}{{{f{In}}{f{In}}}c{}}{{{f{{l{c}}}}{f{Af}}}{{Nn{AfAKf}}}{}}000000{{{f{D`}}}{{Ah{Fb}}}}{{{f{Ej}}}{{Ah{Fb}}}}{{{f{Mf}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}D`{{Kd{{Dl{{B`{{f{Df}}}}}}}}}}{{Bhc}D`{{Kd{{Dl{{B`{{AKh{Df}}}}}}}}}}{{Bhc}D`{{Kd{{Dl{{AKh{Df}}}}}}}}{{Bhc}D`{{Kd{{Dl{{f{Df}}}}}}}}{{Bhc}Ej{{Kd{{Dl{{f{{Dl{Dj}}}}}}}}}}{{Bhc}Ej{{Kd{{Dl{{AKh{{Dl{Dj}}}}}}}}}}{{Bhc}Ej{{Kd{{Dl{{B`{{f{{Dl{Dj}}}}}}}}}}}}{{Bhc}Ej{{Kd{{Dl{{B`{{AKh{{Dl{Dj}}}}}}}}}}}}{{Bhe}{{AEf{c}}}Ib{{Kd{{Dl{{B`{c}}}}}}}}{{Bh{f{{Dl{c}}}}}{{AEf{c}}}Ib}{{BhDn}Mf}{Bh{{AEf{c}}}Ib}{{{f{E`}}FbFb}E`}{{{f{G`}}FbFb}G`}{{{f{D`}}FbFb}D`}{{{f{Ej}}FbFb}Ej}{{{f{AKb}}FbFb}AKb}{{{f{{AEf{c}}}}FbFb}{{AEf{c}}}Ib}{{Bh{Fh{c}}}{{AEf{c}}}Ib}{{Bh{Fh{c}}H`}{{AEf{c}}}Ib}{{{l{c}}}{{AMd{ec}}}C`C`}{{}AMj}{{{f{G`}}}c{}}{G`c{}}{{{f{E`}}{f{E`}}}G`}{{{f{G`}}{f{G`}}}G`}{{{f{D`}}{f{Df}}}G`}{{{f{D`}}{f{D`}}}G`}{{{f{Ej}}{f{Ej}}}G`}{{{f{Ej}}{f{{Dl{Dj}}}}}G`}543201{{{f{E`}}}{{Ah{{AGd{Jl}}}}}}9{{{f{E`}}}{{`{{Mh{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Mh{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{BjE`}}}{{`{{Mj{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Mj{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{Hh}}{f{Hh}}}{{B`{BAb}}}}{{{f{AMl}}{f{AMl}}}{{B`{BAb}}}}{{{f{{AMd{ce}}}}}{{f{{l{e}}}}}C`C`}{{{f{In}}}{{B`{Fb}}}}{{{f{{AMd{ANlIl}}}}}{{B`{Fb}}}}{{{f{AKj}}nMl}{{Ah{{B`{Id}}}}}}{{{f{AKl}}nMl}{{Ah{{B`{n}}}}}}{{{f{AKj}}nMl}{{Ah{Kj}}}}{{{f{AKl}}nMl}{{Ah{Kj}}}}{{BhFbn}{{Ah{G`}}}}{{{f{{l{c}}}}{f{Af}}}{{Nn{AfAKf}}}{}}000000{{{f{E`}}}E`}{{{f{G`}}}G`}{{{f{D`}}}D`}{{{f{Ej}}}Ej}{{{f{AKb}}}AKb}{{{f{{AEf{c}}}}}{{AEf{c}}}Ib}`{{{f{In}}}Fb}{{{f{{AMd{ANlIl}}}}}Fb}{{{f{G`}}c{B`{d}}}{{Ah{G`}}}{{Gn{}{{Bb{Hj}}}}}}{{{f{D`}}c{B`{{f{Df}}}}}{{Ah{D`}}}{{Gn{}{{Bb{Hj}}}}}}{{{f{Ej}}c{B`{{f{{Dl{Dj}}}}}}}{{Ah{Ej}}}{{Gn{}{{Bb{Hj}}}}}}{{{f{G`}}ce}{{Ah{G`}}}{{Gn{}{{Bb{Hj}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{D`}}ce}{{Ah{D`}}}{{Gn{}{{Bb{Hj}}}}}{{Cd{{B`{{f{Df}}}}}{{Cb{{B`{Db}}}}}}}}{{{f{Ej}}ce}{{Ah{Ej}}}{{Gn{}{{Bb{Hj}}}}}{{Cd{{B`{{f{{Dl{Dj}}}}}}}{{Cb{{B`{{Fh{Dj}}}}}}}}}}{{{f{G`}}{f{G`}}{B`{d}}}{{Ah{G`}}}}{{{f{D`}}{f{G`}}{B`{{f{Df}}}}}{{Ah{D`}}}}{{{f{Ej}}{f{G`}}{B`{{f{{Dl{Dj}}}}}}}{{Ah{Ej}}}}{{{f{BjE`}}}b}{{{f{BjE`}}Dn}b}{{{f{BjMf}}Bh}b}{{{f{E`}}Jl}E`}{{{f{G`}}Jl}G`}{{{f{D`}}Jl}D`}{{{f{Ej}}Jl}Ej}{{{f{AKb}}Jl}AKb}{{{f{{AEf{c}}}}Jl}{{AEf{c}}}Ib}{{{f{E`}}Jl{B`{{f{Af}}}}}E`}{{{f{G`}}Jl{B`{d}}}G`}{{{f{D`}}Jl{B`{{f{Df}}}}}D`}{{{f{Ej}}Jl{B`{{f{{Dl{Dj}}}}}}}Ej}{{{f{AKb}}Jl{B`{{f{{Dl{Dj}}}}}}}AKb}{{{f{{AEf{c}}}}Jl{B`{{Hn{c}}}}}{{l{{Hn{c}}}}}Ib}{{{f{G`}}d}G`}{{{f{D`}}d}D`}{{{f{Ej}}d}{{l{Dh}}}}{{{f{AKb}}d}AKb}{{{f{G`}}Ed}{{l{An}}}}{{{f{D`}}Ed}{{l{Dd}}}}{{{f{Ej}}Ed}{{l{Dh}}}}{{{f{AKb}}Ed}AKb}{{{f{AKj}}Dj}Kj}{{{f{AKl}}Dj}Kj}{{{f{Hh}}{f{Dn}}}{{B`{Hh}}}}`{{{f{In}}{f{In}}}c{}}{{{f{{l{c}}}}{f{Af}}}{{Nn{AfAKf}}}{}}000000{{{f{G`}}}{{B`{Hj}}}}{{{f{G`}}}Kj}{{{f{Ej}}}Kj}{{{f{D`}}{f{c}}}D`{{Kd{{Dl{Hj}}}}N`}}{{{f{D`}}{f{Ef}}}D`}{{{f{Ej}}{f{c}}}Ej{{Kd{{Dl{Hj}}}}N`}}{{{f{Ej}}{f{Ef}}}Ej}{{{f{Dn}}AMj}ADh}{{{f{Mf}}AMj}B@b}{AMlAOd}{{{f{Dn}}BhAMj}B@b}{AMl{{f{Df}}}}{{{f{D`}}Fb}{{Ah{Af}}}}{{{f{BjE`}}Dn}b}{{{f{ADh}}}{{f{ADh}}}}{{{f{E`}}}{{Ah{Nh}}}}{fc{}}00000000000000000000000000000{{{f{Dn}}}Dn}{{{f{ADh}}}BAd}{{{f{In}}Fb}{{Ah{{AKh{In}}}}}}{{{f{{AMd{ANlIl}}}}Fb}{{Ah{{AKh{{AMd{ANlIl}}}}}}}}{fDb}00{{{f{Ej}}}D`}{{{f{Hh}}{f{Hh}}}d}{{{f{E`}}c}{{Ah{E`}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{E`}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{g{{Nn{AKne}}}{}{}{{Gn{}{{Bb{{Nn{ce}}}}}}}}0{{ADhg}{{Nn{AL`e}}}{}{}{{Gn{}{{Bb{{Nn{ce}}}}}}}}0{AOf{{Nn{eg}}}{}{{AKn{c}}AIn}{}}0{{AOfADh}{{Nn{eg}}}{}{{AL`{c}}AIn}{}}0{{{f{Hh}}}{{Ah{c}}}Kh}{c{{Nn{e}}}{}{}}0000000000000000000000000000000000{{}{{Nn{c}}}{}}0000000000000000000000000000000000{{{f{Hh}}{f{Dn}}}{{Ah{Hh}}}}{{{f{Dn}}AMj}{{Ah{ADh}}}}{f{{Nn{FjBAf}}}}00{{{f{E`}}{f{{l{c}}}}e}{{Ah{E`}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fO`}0000000000000000000000000000000000{{{f{ADh}}}ADh}{{{f{G`}}}{{Ah{G`}}}}{{{f{D`}}}{{Ah{D`}}}}{{{f{Ej}}}{{Ah{Ej}}}}{{{f{{AEf{c}}}}}{{Ah{{l{{Hn{c}}}}}}}Ib}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}Fb}cA@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}0{{{f{Dn}}Hh}d}{{{f{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}}}gA@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{{f{AKj}}Dj}Kj}{{{f{AKl}}Dj}Kj}{{{f{G`}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{BAh}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{BAj}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{AOj}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{BAl}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{BAn}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{BB`}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{BBb}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{BBd}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{B@n}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{AKj}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{AKl}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{D`}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{Ej}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{AKb}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}{{{f{{AEf{c}}}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}Ib}{{{f{G`}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{BAh}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{BAj}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{AOj}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{BAl}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{BAn}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{BB`}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{BBb}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{BBd}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{B@n}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{AKj}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{AKl}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{D`}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{Ej}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{AKb}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}{{{f{{AEf{c}}}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}Ib}{{}c{}}0000000000000000000000000000000000{Fbc{}}0{Fb{{BBf{ce}}}{}{}}{{{f{{Dl{Ob}}}}e}c{}{{Od{{f{Ef}}}{{Cb{c}}}}}}{{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}{B`{H`}}}{{AIn{}{{ALd{c}}{ALf{e}}{ALh{g}}}}}A@j{ALj{ALl{c}}}{{Fn{}{{Bb{c}}}}HfJ`Jb}}{{{f{Dn}}}Hh}{{{f{E`}}{f{{l{c}}}}e}E`C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{ALn}}}d}{{ALnd}ALn}{{{f{BjBBh}}{B`{{f{Df}}}}}b}{{{f{BjALn}}{f{ALn}}}{{Ah{b}}}}{{{f{BjBBh}}}b}{{{f{BjBBh}}{f{Df}}}b}{{{f{ALn}}Ed}Ef}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{ALn}}{f{ALn}}c}{{Ah{ALn}}}AM`}{{{f{ALn}}{f{Dn}}En}{{Ah{Af}}}}{{{f{ALn}}}ALn}{{f{f{Bjc}}}b{}}{fb}{{}BBj}{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{{BBhc}ALn{{Gn{}{{Bb{{B`{{f{Df}}}}}}}}}}{Fbb}000{{{f{ALn}}}{{f{Dn}}}}{{{f{ALn}}{f{ALn}}}c{}}{{{f{ALn}}{f{D`}}}c{}}{{{f{ALn}}{f{Df}}}c{}}021{{AM`{f{AOj}}{f{AOj}}}{{Ah{AOj}}}}{BBhALn}{BBj{{L`{BBl}}}}{cc{}}000{{AOj{L`{BBl}}dBBn}ALn}{{AOjBBn}ALn}{{{f{D`}}{f{AOh}}BBn}{{Ah{ALn}}}}{{BhdFbBBn}ALn}{{{f{ALn}}Fb}{{Ah{Hh}}}}{{{f{ALn}}Fb}Hh}{{{f{ALn}}}{{f{{L`{BBl}}}}}};<=;<={{}Fb}000{{}c{}}0000{ALnAf}{{{f{ALn}}}d}0{{{f{ALn}}}BC`}{{{f{ALn}}}Fb}{{{f{ALn}}{f{ALn}}}c{}}{{{f{ALn}}{f{D`}}}c{}}{{{f{ALn}}{f{Df}}}c{}}210{{{f{ALn}}{f{ALn}}}{{Ah{{Hb{ALnALn}}}}}}{{E`E`}{{Ah{{Hb{E`E`}}}}}}{{{f{ALn}}}Kj}{{{f{BjBBj}}{f{{L`{BBl}}}}}{{Ah{b}}}}1{{{f{ALn}}}{{Ah{Fb}}}}{{{f{ALn}}}{{f{Bh}}}}{{BhFbBBn}BBh}{{{L`{BBl}}}BBj}{{{f{BjBC`}}}{{B`{c}}}{}}9;:;9:<{{{f{ALn}}}{{f{AOj}}}}{{{f{BjBBh}}{f{Df}}}{{Hb{Ljd}}}}`{{{f{BC`}}}{{Hb{Fb{B`{Fb}}}}}}{{{f{ALn}}d}ALn}{{{f{ALn}}Ed}ALn}`{{{f{ALn}}AMjd}Ff}{{{f{ALn}}{f{AOh}}BCb}ALn}{{{f{ALn}}}{{Ah{ALn}}}}{{{f{ALn}}}ALn}{fc{}}{c{{Nn{e}}}{}{}}000{{}{{Nn{c}}}{}}000{fO`}0005{{{f{ALn}}}d}{{{f{ALn}}}{{Ah{BCd}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{AOhBBl}{{{f{BBn}}}BBn}{{{f{BBl}}}BBl}{{f{f{Bjc}}}b{}}0{fb}0{{}BBn}{{}BBl}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{BBn}}{f{BBn}}}d}{{{f{BBl}}{f{Df}}}{{B`{Lj}}}}{{{f{BBn}}{f{BjGf}}}Gh}{{{f{BBl}}{f{BjGf}}}Gh}{cc{}}0{{{f{BBl}}Lj}{{f{Df}}}}{{{f{BBl}}}{{f{AOh}}}}{{{f{BBl}}Lj}{{B`{{f{Df}}}}}}{{}Fb}0{{}c{}}0{{{f{BBl}}}d}0{{{f{BBl}}}Fb}{{{f{BBl}}{f{BBl}}}d}{fc{}}0{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{fO`}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCf}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{{}b}{Fbb}{{{f{BjBCf}}}b}2{cc{}}6{{}Fb}{{}c{}}=<;{{}d}1```````660````````````````````````{{{f{BCh}}}{{f{Df}}}}<<;;`99{{{f{BCh}}}f}9977`{{{f{BCj}}{f{BjGf}}}{{Nn{bAOl}}}}{{{f{BCh}}{f{BjGf}}}{{Nn{bAOl}}}}07{cBCh{{B@`{{AKh{Df}}}}}}8{{}{{K`{{f{Df}}BCj}{{Cb{b}}}}}}8877{cAKfAJb}{{{f{Df}}}BCh}````{{{K`{{f{Df}}BCj}{{Cb{b}}}}}b}{cAKfBCl}{fDb}{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{f{{Nn{FjBAf}}}}{fO`}0{{}c{}}0`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BCn}}}BCn}{{f{f{Bjc}}}b{}}{fb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BjGf}}LfFb}Gh}{cc{}}{{}BD`}{{}BCn}{{}{{B`{Fb}}}}{{}Db}{{}d}{{}Fb}{{}c{}}{{{B`{BD`}}}b}{BCnb}{{{B`{Fb}}}b}2{{{B`{d}}}b}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}8```````````{{fh}b}00{{{f{BjBCd}}{Fh{Af}}{f{BDb}}}{{Ah{b}}}}{{{f{BCd}}{f{Cd}}}{{Fh{Af}}}}0{{{f{BCd}}{f{G`}}}{{Ah{BCd}}}}{{{f{BCd}}{f{{Dl{Bh}}}}}{{Ah{BCd}}}}0{{{f{BCd}}{f{{Dl{Bh}}}}{f{BDb}}d}{{Ah{BCd}}}}{{{f{BCd}}JlFb}BCd}{{{f{BCd}}{f{BCd}}}c{}}{{{f{BCd}}{f{Af}}}c{}}{{BCd{f{Af}}}c{}}{{{f{BjBCd}}}{{f{BjBCd}}}}{{{f{BjBCd}}{f{Df}}e}{{Ah{{f{BjBCd}}}}}BDd{{Od{{f{Af}}}{{Cb{c}}}}}}{{{f{BjBCd}}Fbe}{{Ah{{f{BjBCd}}}}}BDd{{Od{{f{Af}}}{{Cb{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCd}}}{{`{{Bf{}{{Bb{Fb}}}}}}}}{{{f{BCd}}}BCd}{{{f{BDf}}}BDf}{{{f{BDh}}}BDh}2{{f{f{Bjc}}}b{}}00{fb}00{{{f{BCd}}{f{Df}}}{{Ah{{f{Af}}}}}}{{{f{BCd}}e}{{Ah{{Fh{{f{Af}}}}}}}{{Kd{Df}}}{{Gn{}{{Bb{c}}}}}}{{}BDh}{{}BCd}{Fb{{f{c}}}{}}0000{Fb{{f{Bjc}}}{}}0000{{BCd{f{Af}}}c{}}{{{f{BCd}}{f{BCd}}}c{}}{{{f{BCd}}{f{Af}}}c{}}{Fbb}000{{{f{BCd}}{f{Df}}}{{Ah{BCd}}}}1{{{f{BjBCd}}{f{Df}}}{{Ah{Af}}}}{{{f{BCd}}e}BCd{{B@`{Bh}}}{{Gn{}{{Bb{c}}}}}}{{{f{BCd}}{f{{BDj{Bh}}}}}BCd}{{{f{BCd}}{B`{{f{{Dl{c}}}}}}}{{Ah{BCd}}}{}}{{{f{BCd}}}{{Fh{Dn}}}}<{{{f{BDl}}}BCd}{{{f{BDb}}}BCd}{{{f{BDh}}{f{BDh}}}d}{{{f{BCd}}{f{BCd}}}d}00{{f{f{c}}}d{}}00{{{f{BCd}}}Fb}`{{{f{BCd}}e}{{Ah{BCd}}}{{B@`{Bh}}}{{Gn{}{{Bb{c}}}}}}{{{f{BCd}}{Fh{Af}}}{{Ah{BCd}}}}{{{f{BjBCd}}{f{BCd}}}{{Ah{b}}}}{{{f{BCd}}}{{Fh{Mf}}}}{{{f{BCd}}AFn}{{Ah{BCd}}}}{{{f{BCd}}{f{G`}}}{{Ah{BCd}}}}{{{f{BDf}}{f{BjGf}}}Gh}{{{f{BDh}}{f{BjGf}}}Gh}{{{f{BCd}}{f{BjGf}}}Gh}0{cc{}}0000{cBCd{{Gn{}{{Bb{Af}}}}}}{{{f{{Dl{BDn}}}}}{{Ah{BCd}}}}{{{f{{Dl{BDn}}}}{f{BDb}}}{{Ah{BCd}}}}{{c{f{BDb}}}{{Ah{BCd}}}{{Bf{}{{Bb{{f{BDn}}}}}}}}{{{f{BCd}}Fb}{{B`{{Fh{Hh}}}}}}{{{f{BCd}}{f{Df}}}{{B`{Fb}}}}{{{f{BCd}}}{{Fh{{f{Bh}}}}}}{{{f{BCd}}}{{Fh{Bh}}}}{{{f{BCd}}}{{Fh{{f{Df}}}}}}{{{f{BCd}}}{{f{{Dl{Af}}}}}}{{{f{BjBCd}}}{{f{Bj{Fh{Af}}}}}}{{{f{BCd}}Fb}{{Ah{BDn}}}}{{{f{BCd}}Fb{f{BjBDn}}}{{Ah{b}}}}{{{f{BCd}}Fb{f{BjBDn}}}b}{{{f{BCd}}}{{B`{{Ah{Dn}}}}}}`{{{f{BCd}}e}{{Ah{BE`}}}{{B@`{Bh}}}{{Gn{}{{Bb{c}}}}}}0{{{f{BCd}}{Fh{Af}}dd}{{Ah{BE`}}}}{{{f{BDh}}{f{Bjc}}}bABd}{{{f{BjBCd}}{B`{Nd}}}{{Ah{BAl}}}}{{{f{BCd}}{B`{Fb}}}BCd}{{{f{BCd}}}Fb}{{{f{BCd}}{f{{Dl{Af}}}}}{{Ah{BCd}}}}{{{f{BjBCd}}{f{{Dl{Af}}}}}{{Ah{{f{BjBCd}}}}}}{{{f{BjBCd}}{f{{Dl{Af}}}}}{{f{BjBCd}}}}{{{f{BCd}}BEb}{{f{c}}}{}}{{{f{BCd}}{Ln{Fb}}}{{f{c}}}{}}{{{f{BCd}}{BEd{Fb}}}{{f{c}}}{}}{{{f{BCd}}{BEf{Fb}}}{{f{c}}}{}}{{{f{BCd}}{BEh{Fb}}}{{f{c}}}{}}{{{f{BCd}}{f{Df}}}{{f{c}}}{}}{{{f{BCd}}{BEj{Fb}}}{{f{c}}}{}}{{{f{BCd}}Fb}{{f{c}}}{}}{{}Fb}0000{{{f{BjBCd}}Fbc}{{Ah{{f{BjBCd}}}}}BDd}{{}c{}}000000{{{f{BCd}}}{{Ah{G`}}}}{{{f{BCd}}}d}1{{{f{BCd}}}{{Jn{Af}}}}{{{f{BCd}}AMjd}BEl}{{{f{BCd}}}{{`{{Bf{}{{Bb{BCd}}}}}}}}{{{f{BCd}}}BEn}{{{f{BCd}}}Fb}{{{f{BCd}}}{{Ah{{B`{Af}}}}}}{{{f{BCd}}BDf}{{Ah{{B`{Af}}}}}}1{{{f{BCd}}{f{BCd}}}c{}}{{{f{BCd}}{f{Af}}}c{}}{{BCd{f{Af}}}c{}}55{{{Fh{Af}}}{{Ah{BCd}}}}{{{Fh{Af}}}BCd}111{{{f{BjBEl}}}{{B`{c}}}{}}{{{f{BjBEn}}}{{B`{c}}}{}}{{{f{BCd}}}BCd}{{{f{BCd}}ed}{{Ah{{Fh{BCd}}}}}{{B@`{Bh}}}{{Gn{}{{Bb{c}}}}}}0{{BCde}{{Ah{c}}}{}{{Cd{BCd}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCd}}e}{{Ah{c}}}{}{{Cd{{f{BjBCd}}}{{Cb{{Ah{c}}}}}}}}{{BCdgc}{{Ah{e}}}{}{}{{Cd{BCdc}{{Cb{{Ah{e}}}}}}}}{{{f{BjBCd}}}{{B`{Af}}}}{{{f{BCd}}{f{BCd}}}d}<;={{{f{BjBCd}}{f{Df}}Bh}{{Ah{{f{BjBCd}}}}}}{{{f{BjBCd}}{f{Df}}c}{{Ah{{f{BjBCd}}}}}BDd}{{{f{BjBCd}}Fbc}{{Ah{{f{BjBCd}}}}}BDd}{{{f{BjBCd}}Bhc}{{Ah{{f{BjBCd}}}}}BDd}:`{{{f{BCd}}{f{Af}}dd{B`{If}}}{{Ah{BCd}}}}0{{{f{BCd}}Fbdd{B`{If}}}{{Ah{BCd}}}}{{{f{BCd}}}BDb}{{{f{BCd}}{f{BCd}}}{{Ah{b}}}}{{{f{BCd}}e}{{Ah{BCd}}}{{B@`{Bh}}}{{Gn{}{{Bb{c}}}}}}{{{f{BCd}}Fb}{{B`{{f{Af}}}}}}{{{f{BCd}}c}{{Ah{BCd}}}{{BF`{Fb}}}}2{{{f{BCd}}c}{{Ah{{Fh{Af}}}}}{{BFb{Bh}}}}{{{f{BCd}}e{f{BFd}}}{{Ah{BCd}}}{{B@`{Bh}}}{{Gn{}{{Bb{c}}}}}}{{{f{BCd}}e{f{BDb}}}{{Ah{BCd}}}{{B@`{Bh}}}{{Gn{}{{Bb{c}}}}}}{{{f{BjBCd}}e}{{Ah{b}}}{{B@`{Bh}}}{{Gn{}{{Bb{c}}}}}}{{{f{BCd}}}{{Hb{FbFb}}}}{{{f{BCd}}Jl}BCd}{{{f{BCd}}}d}{{{f{BjBCd}}}b}{{{f{BEl}}}{{Hb{Fb{B`{Fb}}}}}}{{{f{BEn}}}{{Hb{Fb{B`{Fb}}}}}}{{{f{BCd}}JlFb}BCd}00{{{f{BCd}}cEh}{{Ah{BCd}}}{{BFb{Bh}}}}{{{f{BjBCd}}cEh}{{Ah{{f{BjBCd}}}}}{{BFb{Bh}}}}{{{f{BCd}}Jl}{{Hb{BCdBCd}}}}0{{{f{BjBCd}}}{{`{{Bf{}{{Bb{BCd}}}}}}}}{{BCdFbd}{{Fh{BCd}}}}{{{f{BCd}}{f{Af}}}c{}}{{{f{BCd}}{f{BCd}}}c{}}{{BCd{f{Af}}}c{}}{{{f{BCd}}BDf}{{Ah{{B`{Af}}}}}}{{{f{BCd}}{B`{Fb}}}BCd}{{{f{BCd}}{f{Ef}}}{{Ah{BCd}}}}{BCd{{Fh{Af}}}}{{{f{BCd}}{f{Ef}}}BCd}{{{f{BCd}}{f{Ef}}d}BCd}{{{f{BCd}}BFf}{{Ah{Nh}}}}{fc{}}00{fDb}{{{f{BjBCd}}{B`{{f{Df}}}}{B`{{Nl{Db{Fh{Db}}}}}}}{{Ah{BCd}}}}{{{f{BjBCd}}{B`{{f{Df}}}}{B`{{Nl{Bh{Fh{Bh}}}}}}}{{Ah{BCd}}}}{{{f{BjBCd}}{f{Df}}e}{{Ah{{f{BjBCd}}}}}BDd{{Od{{f{Af}}}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCd}}Fbe}{{Ah{{f{BjBCd}}}}}BDd{{Od{{f{Af}}}{{Cb{{Ah{c}}}}}}}}{c{{Nn{e}}}{}{}}000{{{Hb{BFh{f{BDl}}}}}{{Ah{BCd}}}}1{BFj{{Ah{BCd}}}}{{c{f{BDb}}}{{Ah{BCd}}}{{Bf{}{{Bb{{Ah{{f{BDn}}}}}}}}}}{{{f{BCd}}{f{Df}}}{{Ah{Fb}}}}{{}{{Nn{c}}}{}}0000{f{{Nn{FjBAf}}}}{fO`}0000{{{f{BCd}}{B`{{f{{Dl{Db}}}}}}BDh{B`{{Hb{JlFb}}}}}{{Ah{BCd}}}}{{{f{BCd}}d{B`{{Fh{Bh}}}}BDh{B`{{Hb{JlFb}}}}}{{Ah{BCd}}}}1{{{f{BCd}}{f{BCd}}}{{Ah{BCd}}}}{{{f{BjBCd}}{f{BCd}}}{{Ah{{f{BjBCd}}}}}}{{{f{BjBCd}}{f{BCd}}}b}{{}c{}}0000{{{f{BCd}}}Fb}{{{f{BjBCd}}c}{{Ah{{f{BjBCd}}}}}BDd}{{{f{BjBCd}}c{f{BDb}}}{{Ah{{f{BjBCd}}}}}BDd}{{{f{BjBCd}}Af}{{f{BjBCd}}}}{{{f{BCd}}Bh{B`{Hj}}}{{Ah{BCd}}}}{{{f{BjBCd}}Bh{B`{Hj}}}{{f{BjBCd}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BFl}}}BFl}{{f{f{Bjc}}}b{}}{fb}{{}BFl}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BFl}}{f{BFl}}}d}{{f{f{c}}}d{}}00{{{f{BFl}}{f{BjGf}}}Gh}{cc{}}{{{f{BFl}}{f{Bjc}}}bABd}`{{}Fb}{{}c{}}`{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}``4````````````````````````````````{{fh}b}000{{{f{BE`}}}{{Ah{BCd}}}}`{{{f{BFn}}}{{f{{Dl{BG`}}}}}}{{{f{BE`}}c}{{Ah{BCd}}}{{Cj{BCd}{{Cb{{Ah{BCd}}}}}}J`Jb}}{{{f{Al}}}E`}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BFn}}}BFn}{{{f{Al}}}Al}{{{f{BE`}}}BE`}{{{f{BGb}}}BGb}{{f{f{Bjc}}}b{}}000{fb}000;{{}BFn}{{}Al}{Fb{{f{c}}}{}}00{{{f{BGd}}}{{f{c}}}{}}11111{Fb{{f{Bjc}}}{}}0000000`{{BGfe}{}{}{{BGh{c}}}}{Fbb}0000{{{f{BjBFn}}}b}111{{{f{BFn}}{f{BFn}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}00000`{{{f{BGj}}}Hj}{{{f{BFn}}}{{f{{Dl{Hj}}}}}}{{{f{BE`}}}{{Ah{BCd}}}}{{{f{BjBFn}}}{{f{Bj{Fh{Hj}}}}}}{{{f{BFn}}{f{BjGf}}}Gh}{{{f{Al}}{f{BjGf}}}Gh}{{{f{BE`}}{f{BjGf}}}Gh}{{{f{BGb}}{f{BjGf}}}Gh}0{{{f{Df}}BGb}Bh}{cc{}}000{{{Fh{{Fh{BGl}}}}}BFn}{{{Fh{{Hb{{Fh{Hj}}{Fh{BG`}}}}}}}BFn}{{{Fh{BGl}}}BFn}33{BFnAl}44{cBFn{{Gn{}{{Bb{BGl}}}}}}{cBFn{{Hd{}{{Bb{BGl}}}}}}{{{f{Al}}Fb}BGj}{{{f{BE`}}}{{f{Al}}}}{{{f{BjBE`}}}{{f{BjAl}}}}{{{f{Al}}}Ef}{{{f{BGn}}dd}{{Ah{Al}}}}0{{{f{BE`}}}{{Ah{BCd}}}}{{{f{BjAl}}}{{f{BjBFn}}}}{{}Fb}0000000{{}c{}}0000000{AlBFn}1{BFnc{}}{{{f{BFn}}}c{}}310{{{f{BGj}}}d}{{{f{Al}}}d}{{{f{BFn}}}d}{{{f{BFn}}}{{BHb{{BH`{{Jn{Hj}}}}{Jn{BG`}}}}}}{{{f{Al}}}BHd}{{{f{BE`}}}{{Fh{Af}}}}{{{f{BE`}}{B`{{Hb{JlFb}}}}}{{Fh{Af}}}}={{{f{BGj}}}Fb}{{{f{Al}}}Fb}?????{{{Fh{Hj}}{Fh{BG`}}d}BFn}{{{f{BCd}}{Fh{Af}}Al{B`{{Fh{Bh}}}}}BE`}{{{f{BjBHd}}}{{B`{c}}}{}}{{{f{BjBHd}}Fb}{{B`{c}}}{}}{{{f{BE`}}c}{{Ah{BCd}}}{{Cd{BCd}{{Cb{{Ah{BCd}}}}}}J`Jb}}{f}{{{f{Al}}}BGf}{{{f{BE`}}nMl}{{Ah{BCd}}}}{{BE`e}BE`{{B@`{Bh}}}{{Gn{}{{Bb{c}}}}}}{{{f{Al}}JlFb}BGd}{{{f{BjBFn}}}b}{{{f{BjAl}}}b}{{{f{BE`}}Dj}{{Ah{BCd}}}}{{{f{BE`}}}{{Ah{BCd}}}}{Al{{Fh{Hj}}}}0{BE`Al}{{{f{BjBE`}}}Al}{fc{}}000{fDb}{c{{Nn{e}}}{}{}}0000000{{}{{Nn{c}}}{}}0000000{f{{Nn{FjBAf}}}}{fO`}0000000{AlAl}{{{f{Al}}}{{f{BFn}}}}{{{f{Al}}}{{f{BHf}}}}={{}c{}}0000000`````{{{f{BFn}}c}Af{{Cd{{Hb{Hj{f{BG`}}}}}{{Cb{B`}}}}J`Jb}}{{{f{BFn}}c}Af{{Cd{{Hb{Hj{f{BG`}}}}}{{Cb{}}}}J`Jb}}{{{f{{Dl{{BHh{Hj}}}}}}c}Af{{Cd{{BHh{Hj}}}{{Cb{B`}}}}J`Jb}}{{{f{{Dl{{BHh{Hj}}}}}}c}Af{{Cd{{BHh{Hj}}}{{Cb{}}}}J`Jb}}{{{f{{Dl{c}}}}eBHj}{{AJf{c}}}{BHlBHn}{{Bf{}{{Bb{{Hb{HjHj}}}}}}Hf}}{{{f{{Dl{c}}}}{f{H`}}eBHj}{{AJf{c}}}{BHlBHn}{{Bf{}{{Bb{{Hb{HjHj}}}}}}Hf}}{{{f{{l{c}}}}HjHj}{{l{c}}}C`}{{{f{BHf}}{f{{Dl{Ff}}}}}d}{{{f{BI`}}{f{Al}}}Af}{{BIbBIb}BIb}0`{{{f{BId}}{f{BCd}}{f{Al}}}{{Ah{Af}}}}{{{f{BId}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBIf}}Hh}{{B`{b}}}}{{{f{BjBIh}}{f{Hh}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BIf}}}BIf}{{{f{BIh}}}BIh}{{{f{BDn}}}BDn}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dl{c}}}}}Dn{{B@h{Dn}}}}{{}BDn}{Fb{{f{c}}}{}}00{Fb{{f{Bjc}}}{}}00{Fbb}00{{{f{BDn}}{f{BDn}}}d}{{f{f{c}}}d{}}00{{{f{BDn}}{f{BjGf}}}Gh}{cc{}}{{{Hb{{f{Dn}}Fb}}}BIf}1{{{Hb{{f{Dn}}Fb}}}BIh}2{{gFb}BDb{{B@`{Bh}}}{{B@`{Dn}}}{{Bf{}{{Bb{{Fh{{Hb{ce}}}}}}}}}}{{}Fb}00{{}c{}}00{BIfAf}{BIhAf}{{{f{Dn}}Fb}BIf}{{{f{Dn}}Fb}BIh}{{{Fh{Hh}}}BDn}{{{f{BjBIf}}Fb}Af}{{{f{BjBIh}}Fb}Af}{{{f{{Dl{BDn}}}}{B`{Fb}}}{{Ah{BDb}}}}0{{{f{{Dl{BDn}}}}{B`{Fb}}}{{Ah{{Fh{Dn}}}}}}{fc{}}00{c{{Nn{e}}}{}{}}00{{}{{Nn{c}}}{}}00{fO`}00==={{{f{{Dl{BCd}}}}}{{Ah{BCd}}}}{{{f{{Dl{BCd}}}}d}{{Ah{BCd}}}}`````{{IfIf}If}{{{f{{Dl{BCd}}}}{B`{Nd}}}{{Ah{{Hb{{Fh{BAl}}Nd}}}}}}{{{f{{AK`{Jl}}}}Nd{f{Bj{Fh{If}}}}}b}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{}BIj}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{BIj}}}If}{{{f{BIl}}{f{BjGf}}}Gh}{cc{}}0{{{f{BIl}}{f{Bjc}}}bABd}``{{}Fb}0{{}c{}}0{{{f{Bj{BIn{BIlce}}}}HjIf{f{BCd}}gi}b{}BJ`{{Cd{}{{Cb{c}}}}}{{Cj{{f{Bjc}}}}}}{c{{Nn{e}}}{}{}}0{{}{{Nn{c}}}{}}0{fO`}0{{{f{BJb}}Nd{f{Bj{Fh{If}}}}}{{Ah{b}}}}0{{{f{BJb}}Nd{f{Bj{Dl{If}}}}}{{Ah{b}}}}066{{{f{BjBIj}}{f{{Dl{Dj}}}}}b}{{{f{BjBIj}}Md}b}{{{f{BjBIj}}Jl}b}{{{f{BjBIj}}Lj}b}{{{f{BjBIj}}If}b}``````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000{{{f{{L`{ce}}}}}{{f{e}}}N`BJd}{{{f{{L`{c}}}}}BJf{BJhN`}}{{{f{{L`{ce}}}}}{}N`BJd}{{{f{{L`{c}}}}}MdBJj}{{{f{Bh}}}{{f{Df}}}}{{{f{Bh}}}{{f{BJl}}}}{{{f{Bh}}}{{f{BJn}}}}{{{f{Bh}}}{{f{{Dl{Dj}}}}}}{{{f{{L`{ce}}}}}{{f{c}}}N`BJd}4{{{L`{{Dl{{BK`{c}}}}e}}}{{L`{{Dl{c}}e}}}{}BJd}{{{L`{{BK`{c}}e}}}{{L`{ce}}}{}BJd}{f{{f{c}}}{}}70000300000000{{{f{Bj}}}{{f{Bjc}}}{}}000000000000{{{f{ALn}}{f{ALn}}c}{{Ah{ALn}}}AM`}{{{f{{L`{c}}}}}{{B`{{f{AJb}}}}}{AJbN`}}`{{{f{BKb}}{f{Af}}}{{Ah{Af}}}}{{{f{BKb}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Ob}}}Ob}{{{f{BKd}}}BKd}{{{f{{L`{ce}}}}}{{L`{ce}}}N`{BJdA@j}}{{{f{Mn}}}Mn}{{{f{BFf}}}BFf}{{{f{B@b}}}B@b}{{{f{Ml}}}Ml}{{{f{BKf}}}BKf}{{{f{BKh}}}BKh}{{{f{BKj}}}BKj}{{f{f{Bjc}}}b{}}0000000000{fb}0000000000{{{f{Bh}}{f{Bh}}}BAb}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}BAb{BKlN`}BJd}{AOfe{}{{AKn{c}}AIn}}0{{AOfADh}e{}{{AL`{c}}AIn}}0{{f{f{c}}}BAb{}}0{{AKfBCh}AKf}{AKfAKf}{{{f{Gj}}{f{ADh}}}{{ABb{Gj}}}}``{{}b}{cbBJd}{{}Bh}{{}{{L`{{Dl{c}}}}}{}}{{}{{L`{BKn}}}}{{}{{L`{Df}}}}{{}{{L`{c}}}BL`}{{}Mn}{{}BFf}{{}B@b}{{}Ml}`{Fb{{f{c}}}{}}0{{{f{Bh}}}f}111{{{f{{L`{ce}}}}}{{f{c}}}N`BJd}22222222{Fb{{f{Bjc}}}{}}000000000000{{{f{{L`{c}}}}}{{f{Df}}}{AJbN`}}`{{{L`{ADjc}}}{{Nn{{L`{ec}}{L`{ADjc}}}}}BJd{ADjJ`Jb}}{{{L`{ADjc}}}{{L`{ec}}}BJd{ADjJ`Jb}}{{{f{{L`{ce}}}}}{{BLb{ce}}}N`{A@jBJd}}{Fbb}000{{{f{Bj{L`{ce}}}}}bN`BJd}111111111{{{f{B@b}}}{{f{ADh}}}}`{{{f{Bh}}{f{c}}}d{{Kd{Df}}N`}}{{{f{Ob}}{f{Ob}}}d}{{{f{{L`{BLd}}}}{f{BLd}}}d}{{{f{{L`{Gj}}}}{f{Gj}}}d}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}d{BLfN`}BJd}{{{f{Mn}}{f{Mn}}}d}{{{f{BFf}}{f{BFf}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{Ml}}{f{Ml}}}d}{{{f{BKj}}{f{BKj}}}d}{{f{f{c}}}d{}}00000000000000000000{BKd{{Hb{LjLj}}}}{{AM`{f{AOj}}{f{AOj}}}{{Ah{AOj}}}}{{{f{Bj{L`{ACn}}}}}{{Nn{bBLh}}}}{{{f{AKf}}{f{BjGf}}}{{Nn{bAOl}}}}0{{{f{Bh}}{f{BjGf}}}{{Nn{bAOl}}}}0{{{f{Ob}}{f{BjGf}}}{{Nn{bAOl}}}}{{{f{BKd}}{f{BjGf}}}{{Nn{bAOl}}}}{{{f{{L`{ce}}}}{f{BjGf}}}{{Nn{bAOl}}}{ADlN`}BJd}{{{f{{L`{ce}}}}{f{BjGf}}}{{Nn{bAOl}}}{BClN`}BJd}{{{f{{L`{ce}}}}{f{BjGf}}}{{Nn{bAOl}}}N`BJd}{{{f{Mn}}{f{BjGf}}}Gh}{{{f{BFf}}{f{BjGf}}}Gh}{{{f{B@b}}{f{BjGf}}}{{Nn{bAOl}}}}{{{f{Ml}}{f{BjGf}}}{{Nn{bAOl}}}}{{{f{BKf}}{f{BjGf}}}{{Nn{bAOl}}}}{{{f{BKh}}{f{BjGf}}}{{Nn{bAOl}}}}{{{f{BKj}}{f{BjGf}}}{{Nn{bAOl}}}}`{BLhAKf}{BLjAKf}{BLlAKf}{BLnAKf}{cc{}}{{{f{Df}}}Bh}{DbBh}2{{{f{Db}}}Bh}{FjBh}{LjOb}55{Fj{{L`{Df}}}}{BM`{{L`{BKn}}}}{{{Fh{ce}}}{{L`{{Dl{c}}e}}}{}{BJdA@j}}{{{ABb{ce}}}{{L`{ce}}}N`BJd}{Db{{L`{Df}}}}{{{f{Df}}}{{L`{Df}}}}{{{f{{Dl{c}}}}}{{L`{{Dl{c}}}}}A@j}<{BMbc{}}{{{L`{Df}}}{{L`{{Dl{Dj}}}}}}{{{BHh{c}}}{{L`{{Dl{c}}}}}{}}{BMd{{L`{BJn}}}}{c{{L`{c}}}{}}{{{f{BJn}}}{{L`{BJn}}}}{BMf{{L`{BJl}}}}{{{f{BJl}}}{{L`{BJl}}}}{{{f{BKn}}}{{L`{BKn}}}}{{{AKh{c}}}{{L`{c}}}{BMhN`}}{cc{}}0000000{{c{B`{H`}}}BMj{}}{{{BMl{Jl}}{BMl{Dj}}{B`{H`}}}BMn}{{{BMl{Jl}}{BMl{Dj}}{B`{H`}}}BN`}{cBh{{Gn{}{{Bb{BD`}}}}}}{cBh{{Gn{}{{Bb{{f{Df}}}}}}}}{cBh{{Gn{}{{Bb{{f{BD`}}}}}}}}{cBh{{Gn{}{{Bb{{ABb{Df}}}}}}}}{cBh{{Gn{}{{Bb{{AKh{Df}}}}}}}}{cBh{{Gn{}{{Bb{{f{Bh}}}}}}}}{cBh{{Gn{}{{Bb{Bh}}}}}}{cBh{{Gn{}{{Bb{Db}}}}}}{e{{L`{{Dl{c}}}}}{}{{Gn{}{{Bb{c}}}}}}{{gFb}{{BNb{Jl}}}Kd{{Gn{}{{Bb{{B`{c}}}}}}}{{Gn{}{{Bb{{B`{e}}}}}}}}0{e{{BNb{Jl}}}{{Gn{}{{Bb{{B`{d}}}}}}}{{Gn{}{{Bb{{B`{c}}}}}}}}{{gADh}{{BNb{Jl}}}BHn{{Gn{}{{Bb{{B`{c}}}}}}}{{Gn{}{{Bb{{B`{e}}}}}}}}2{e{{L`{{Dl{c}}}}}J`{{Hd{}{{Bb{c}}}}}}{{}{{L`{c}}}N`}{c{{L`{ec}}}BJdN`}{{{f{Df}}}Bh}0{{{f{Df}}}{{Nn{BNd}}}}{DbBh}{{Bhc}BNf{}}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}d{BNhN`}BJd}{{{f{Bj{L`{ce}}}}}{{B`{{f{Bjc}}}}}N`BJd}{{{f{Bj{L`{ce}}}}}{{f{Bjc}}}N`BJd}{{{f{Ff}}Fb}Hh}3{{{f{Bh}}{f{Bjc}}}bABd}{{{f{{L`{ce}}}}{f{Bjg}}}b{BNjN`}BJdABd}{{{f{BFf}}{f{Bjc}}}bABd}{{{f{B@b}}{f{Bjc}}}bABd}{{{f{Ml}}{f{Bjc}}}bABd}{{{f{BKj}}{f{Bjc}}}bABd}{{{f{Ob}}}Lj}{{}b}{cb{A@jBJd}}{{{f{{Dl{Lj}}}}}{{`{{Bf{}{{Bb{Fb}}}}}}}}{{}Fb}000000000000`{{{f{BjBKd}}}{{f{BjIf}}}}`{{}c{}}000000000000{{{L`{ce}}}{{B`{c}}}{}BJd}{{{L`{ce}}}{}N`BJd}{{{L`{ce}}}{{Hb{e}}}N`BJd}{{{L`{BNl}}}Af}{BhDb}{{{f{BKd}}}d}{{{f{Ob}}}d}`{{{f{{L`{ACn}}}}}d}{{{f{c}}}d{}}1{{{f{BDl}}}{{`{{Jd{}{{Bb{{Hb{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}d{BNhN`}BJd}`0{{{f{ALn}}{f{ALn}}}{{Ah{{Hb{ALnALn}}}}}}{{E`E`}{{Ah{{Hb{E`E`}}}}}}{{{f{Bj{L`{ce}}}}}{{f{Bjc}}}{BNnN`}{BJdA@j}}{{{f{BO`}}}Kj}0{{{f{BOb}}}Kj}``11`{{{f{{L`{ce}}}}{f{{L`{ce}}}}}d{BLfN`}BJd}{{BOdFb}{{B`{Fb}}}}{{Bhc}BOf{}}{c{{L`{c}}}{}}{{BhADhd}B@b}{e{{L`{c}}}{}{{Od{{f{{BLb{c}}}}}{{Cb{c}}}}}}{{ce}{{L`{ce}}}{}BJd}{{}{{L`{{BK`{c}}}}}{}}{c{{L`{{BK`{e}}c}}}BJd{}}{Fb{{L`{{Dl{{BK`{c}}}}}}}{}}{{Fbc}{{L`{{Dl{{BK`{e}}}}c}}}BJd{}}3210`{{}Ob}{{}BKd}{{{f{Bh}}{f{Bh}}}{{B`{BAb}}}}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}{{B`{BAb}}}{BNhN`}BJd}{c{{BOh{{L`{c}}}}}{}}{{ce}{{BOh{{L`{ce}}}}}{}BJd}`````{{{f{BO`}}}Kj}0{{{f{{L`{c}}}}{f{BjBOj}}}b{AJbN`}}{{{f{{L`{ce}}}}{f{{L`{ce}}}}}dN`BJd}{{{f{BOb}}nMl}{{Ah{Kj}}}}{{{f{Bj{L`{ACn}}}}{f{Bj{Dl{Dj}}}}}{{Nn{FbBLh}}}}{{{f{Bj{L`{ACn}}}}BOl}{{Nn{bBLh}}}}{{{f{Bj{L`{ACn}}}}{f{Bj{Fh{Dj}}}}}{{Nn{FbBLh}}}}{{{f{Bj{L`{ACn}}}}{f{BjDb}}}{{Nn{FbBLh}}}}{{{f{Bj{L`{ACn}}}}{f{Bj{Dl{BOn}}}}}{{Nn{FbBLh}}}}`{{{f{Bj{L`{ACn}}}}C@`}{{Nn{IfBLh}}}}`{{{f{AJj}}FbFb}AJj}0{{{f{{L`{c}}}}}{{B`{{f{AJb}}}}}{AJbN`}}{{{f{C@b}}Dj}Kj}{{LjLj}BKd}`{{{f{{L`{ce}}}}}FbN`BJd}>>{{{f{Ob}}}{{B`{Lj}}}}{fc{}}0000000000{fDb}00{AOf{{Nn{eg}}}{}{{AKn{c}}AIn}{}}0{{AOfADh}{{Nn{eg}}}{}{{AL`{c}}AIn}{}}0{c{{Nn{e}}}{}{}}000{{{L`{{Dl{c}}e}}}{{Nn{{L`{{BHh{c}}e}}}}}{}BJd}111111111{{}{{Nn{c}}}{}}000000000000{{BOdFb}{{Nn{FbAKf}}}}{c{{Nn{{L`{c}}C@d}}}{}}{{ce}{{Nn{{L`{ce}}C@d}}}{}BJd}{{}{{Nn{{L`{{BK`{c}}}}C@d}}}{}}{c{{Nn{{L`{{BK`{e}}c}}C@d}}}BJd{}}10{c{{Nn{{BOh{{L`{c}}}}C@d}}}{}}{{ce}{{Nn{{BOh{{L`{ce}}}}C@d}}}{}BJd}{f{{Nn{FjBAf}}}}00{{{L`{ce}}}{{Nn{c{L`{ce}}}}}{}BJd}{fO`}000000000000{{{L`{ce}}}cA@jBJd}`{{{f{C@b}}Dj}Kj}{{}c{}}000000000000{{{f{{L`{ce}}}}}FbN`BJd}``{{B@b{C@f{BhBh}}}B@b}{{{f{AKf}}c}AKf{{Od{{f{Df}}}{{Cb{Db}}}}}}{{{f{Bj{L`{ACn}}}}{f{{Dl{Dj}}}}}{{Nn{FbBLh}}}}{{{f{BjBh}}BD`}{{Nn{bAOl}}}}{{{f{BjBh}}C@h}{{Nn{bAOl}}}}{{{f{BjBh}}{f{Df}}}{{Nn{bAOl}}}}{{{f{Bj{L`{ACn}}}}{f{{Dl{C@j}}}}}{{Nn{FbBLh}}}}```````{{c{B`{H`}}}BMj{}}{{{BMl{Jl}}{BMl{Dj}}{B`{H`}}}BMn}{{{BMl{Jl}}{BMl{Dj}}{B`{H`}}}BN`}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{C@l{B`{{f{ADh}}}}}{{Nn{{BNb{Jl}}AKf}}}}{cc{}}{{}Fb}{{}c{}}{{{f{C@l}}}d}{FbC@l}{{{f{C@l}}}{{f{{Dl{Jl}}}}}}{{{f{BjC@l}}{f{Gj}}}b}{{{f{BjC@l}}}b}{{{f{BjC@l}}{f{{Dl{{ABb{Gj}}}}}}}b}1{{{f{BjC@l}}{B`{{f{Gj}}}}}b}{C@l{{C@n{Jl}}}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`};`{{fh}b}{{{f{CA`}}}{{f{ADj}}}}{{{f{BjCA`}}}{{ABb{Gj}}}}{{{f{BjCA`}}}{{f{BjADj}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CA`}}}CA`}{{f{f{Bjc}}}b{}}{fb}{{}CA`}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{CA`}}}{{f{ADh}}}}{{{f{BjCA`}}Fb}b}{{{f{CA`}}{f{BjGf}}}{{Nn{bAOl}}}}{cc{}}{{}Fb}{{}c{}}{{{f{CA`}}}Fb}{FbCA`}{{{f{BjCA`}}}b}70{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}{{{f{CA`}}}{{B`{{f{CAb}}}}}}8```````{{{f{AJj}}FbFb}AJj}0`{{}b}0{{}d}``{{eFbFb}{{CAd{Jl}}}{{Kd{Df}}}{{Bf{}{{Bb{c}}}}}}{{eFbFb}{{AK`{Jl}}}{{Kd{{Dl{Dj}}}}}{{Bf{}{{Bb{c}}}}}}{Ifb}`{{fh}b}{{{f{Kj}}}Hh}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Kj}}}Kj}{{f{f{Bjc}}}b{}}{fb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{Kj}}}{{f{Dn}}}}{{{f{Kj}}{f{Kj}}}d}{{{f{Kj}}{f{BjGf}}}Gh}{cc{}}{{}Fb}{{}c{}}{{KjBh}Af}{{{f{Kj}}}d}0{{DnHh}Kj}`{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}{{{f{BjKj}}Hh}b}{{{f{Kj}}}{{f{Hh}}}}9{{{B`{n}}Dn}Kj}``````{{{f{{CAf{c}}}}{f{{CAf{c}}}}}{{Ah{b}}}{}}{{{f{BDn}}}BDb}{{{f{BDl}}}CAh}{{{f{BDl}}}BDb}{{{f{CAh}}{f{Df}}}{{B`{Mf}}}}{{{f{BDb}}{f{Df}}}{{B`{Mf}}}}{{{f{CAh}}}{{`{{Jd{}{{Bb{Mf}}}}}}}}{{{f{BDb}}}{{`{{Jd{}{{Bb{Mf}}}}}}}}{{{f{{CAl{}{{CAj{c}}}}}}}{{`{{Jd{}{{Bb{{Hb{{f{Bh}}{f{c}}}}}}}}}}}{ADlA@jBL`BLf}}{{{f{BDb}}}{{`{{Jd{}{{Bb{{Hb{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CAh}}AMj}BDl}{{{f{BDb}}AMj}BDl}{{{f{BjCAh}}{f{BDb}}}{{Ah{d}}}}{{{f{BjBDb}}{f{BDb}}}{{Ah{d}}}}{{{f{CAh}}{f{Df}}}{{Ah{Mf}}}}{{{f{BDb}}{f{Df}}}{{Ah{Mf}}}}`````````````````{{fh}b}0{{{f{BNl}}}n}0{{Bh{Fh{Ff}}{f{ADh}}}{{Ah{Af}}}}{{Bh{Fh{Ff}}{f{ADh}}{B`{{f{CAn}}}}}{{Ah{Af}}}}{{{f{Af}}c}e{AbKh}{}}{{Afc}e{AbKh}{}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}`{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BNl}}Ed}Ef}0{{{f{BNl}}}{{Ah{Ef}}}}0`{{{f{Af}}Fb}{{f{Ff}}}}{{{f{BNl}}}{{f{ADj}}}}{{{f{BjBNl}}}{{f{BjADj}}}}0{{{f{Af}}}E`}{{{f{BjBNl}}}{{f{Bj{l{c}}}}}C`}{{{f{BNl}}}{{f{{l{c}}}}}C`}{{{f{Af}}}{{f{BNl}}}}{{{f{BjBNl}}}{{Ah{Fb}}}}0{{{f{BjAf}}}{{Ah{Fb}}}}{{{f{Af}}}{{Ah{{f{Ej}}}}}}{{{f{Af}}}{{Ah{{f{AKb}}}}}}{{{f{BNl}}{f{Af}}}{{Ah{Af}}}}00000{{{f{Af}}}{{Ah{{f{G`}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BNl}}{f{Dn}}En}{{Ah{Af}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Af}}{f{Dn}}En}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{ALn}}}}}}77{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BNl}}}Fd}{{{f{Af}}}{{`{{Bf{}{{Bb{Fb}}}}}}}}{{{f{BNl}}}{{f{{Fh{Ff}}}}}}{{{f{BjBNl}}}{{f{Bj{Fh{Ff}}}}}}{{{f{BjAf}}}{{f{Bj{Fh{Ff}}}}}}{{{f{Af}}}Af}{{{f{Jh}}}Jh}1{{{f{BNl}}}{{L`{BNl}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{In}}}}}}{{}Af}{Fb{{f{c}}}{}}00{{{f{Af}}}{{f{c}}}{}}1{Fb{{f{Bjc}}}{}}000{{Afc}e{AbKh}{}}{{{f{Af}}c}e{AbKh}{}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Fbb}000{{{f{BNl}}}Af}0{{{f{BNl}}}{{f{Dn}}}}0{{{f{Jh}}{f{Jh}}}d}{{{f{Af}}{f{Af}}}d}{{{f{Af}}{f{Df}}}{{Ah{G`}}}}{{{f{Af}}c}{{Ah{G`}}}AOn}{{{f{Af}}{f{Af}}}{{Ah{G`}}}}{{{f{Af}}c}eAOn{}}{{{f{Af}}{f{Df}}}c{}}255{{f{f{c}}}d{}}00{{{f{Af}}}Fb}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HhFb}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKj}}}}}}{{{f{Af}}}{{Ah{{f{AKl}}}}}}{{{f{BNl}}}{{AKh{Mf}}}}0{{{f{Af}}AFn}{{Ah{Af}}}}{{{f{BNl}}{f{G`}}}{{Ah{Af}}}}{{{f{Jh}}{f{BjGf}}}Gh}{{{f{Af}}{f{BjGf}}}Gh}0{{{f{Af}}}Db}{cc{}}00{{{l{c}}}AfC`}1{{Bh{f{{Dl{Hh}}}}d}{{Ah{Af}}}}{{Bh{f{{Dl{Hh}}}}{f{Dn}}d}{{Ah{Af}}}}{{BhFf}{{Ah{Af}}}}{{Bh{Fh{Ff}}}{{Ah{Af}}}}{{Bh{Fh{Ff}}{f{Dn}}}Af}{cAf{{Gn{}{{Bb{{f{If}}}}}}}}{cAf{{Gn{}{{Bb{{f{Lj}}}}}}}}{cAf{{Gn{}{{Bb{d}}}}}}{cAf{{Gn{}{{Bb{{B`{d}}}}}}}}{cAf{{Gn{}{{Bb{{f{n}}}}}}}}{cAf{{Gn{}{{Bb{{B`{Lj}}}}}}}}{cAf{{Gn{}{{Bb{n}}}}}}{cAf{{Gn{}{{Bb{{B`{n}}}}}}}}{cAf{{Gn{}{{Bb{{f{Id}}}}}}}}{cAf{{Gn{}{{Bb{Id}}}}}}{cAf{{Gn{}{{Bb{{B`{Id}}}}}}}}{cAf{{Gn{}{{Bb{{f{Jl}}}}}}}}{cAf{{Gn{}{{Bb{{B`{{f{Df}}}}}}}}}}{cAf{{Gn{}{{Bb{{f{d}}}}}}}}{cAf{{Gn{}{{Bb{{B`{Jl}}}}}}}}{cAf{{Gn{}{{Bb{{f{Df}}}}}}}}{cAf{{Gn{}{{Bb{{B`{Db}}}}}}}}{cAf{{Gn{}{{Bb{{f{Md}}}}}}}}{cAf{{Gn{}{{Bb{Md}}}}}}{cAf{{Gn{}{{Bb{{B`{Md}}}}}}}}{cAf{{Gn{}{{Bb{Lj}}}}}}{cAf{{Gn{}{{Bb{If}}}}}}{cAf{{Gn{}{{Bb{{B`{If}}}}}}}}{cAf{{Gn{}{{Bb{Db}}}}}}{cAf{{Gn{}{{Bb{Jl}}}}}}{{Bh{Fh{n}}}Af}{{Bh{Fh{Jl}}}Af}{{Bh{Fh{Md}}}Af}{{Bh{Fh{Lf}}}Af}{{Bh{Fh{Lj}}}Af}{{Bh{Fh{If}}}Af}{{Bh{Fh{Id}}}Af}{{BhFb{f{Dn}}}Af}{{{f{Af}}FbFb}Af}{{{f{BNl}}Fb}{{Ah{Hh}}}}{{{f{Af}}}Fb}{{{f{Af}}}Hl}{{{f{Af}}}Af}{{{f{BNl}}}{{B`{{Ld{Lb}}}}}}0{{{f{BNl}}Fb}{{B`{{f{I`}}}}}}0{{{f{BNl}}FbFb}{{B`{{f{I`}}}}}}0{{{f{BNl}}Fb}Hh}0{{{f{Af}}c}{{Ah{G`}}}AOn}{{{f{Af}}{f{Af}}}{{Ah{G`}}}}{{{f{Af}}{f{Df}}}{{Ah{G`}}}}21{{{f{Af}}{f{Df}}}c{}}{{{f{BNl}}}d}{{{f{Jh}}{f{Bjc}}}bABd}{{{f{Af}}{B`{Fb}}}Af}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BAn}}}}}}{{{f{Af}}}{{Ah{{f{Ef}}}}}}`{{{f{Af}}}{{Ah{E`}}}}{{}Fb}000{{}c{}}000{AfBCd}1{BDdAf}{AfAf}=={{{f{Af}}}{{Ah{G`}}}}000{{{f{BNl}}}G`}0{{}d}00{{{f{Af}}}Jh}{{{f{Af}}}CB`}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BNl}}}Fb}{{{f{Af}}}Fb}{{{f{BNl}}Fb}Af}0{{{f{Af}}}{{Ah{{f{E`}}}}}}{{{f{Af}}{f{Df}}}c{}}{{{f{Af}}c}{{Ah{G`}}}AOn}{{{f{Af}}{f{Af}}}{{Ah{G`}}}}120{{{f{Af}}}{{Ah{{B`{c}}}}}Kh}{{{f{BNl}}}{{Ah{Kj}}}}0{{{f{BNl}}}{{B`{n}}}}0{{{f{Af}}}Kj}1122322{{Afc}e{AbKh}{}}{{{f{Af}}c}e{AbKh}{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}>>={{{f{BNl}}}{{Ah{Fb}}}}0{{{f{BNl}}}{{f{Bh}}}}{{Bhc}Af{{Kd{{Dl{Jl}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{{Fh{Dj}}}}}}}}}}{{Bhc}Af{{Kd{{Dl{Hh}}}}}}{{Bhc}AfBDd}{{Bhc}Af{{Kd{{Dl{{B`{{AKh{{Dl{Dj}}}}}}}}}}}}{{Bhc}Af{{Kd{{Dl{{AKh{{Dl{Dj}}}}}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{{f{{Dl{Dj}}}}}}}}}}}}{{Bhc}Af{{Kd{{Dl{{f{{Dl{Dj}}}}}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{{AKh{Df}}}}}}}}}}{{Bhc}Af{{Kd{{Dl{{AKh{Df}}}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{{f{Df}}}}}}}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kd{{Dl{{f{Df}}}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{Af}}}}}}}}{{Bhc}Af{{Kd{{Dl{Af}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{Db}}}}}}}}{{Bh{Ln{Lj}}}Af}{{Bhc}Af{{Kd{{Dl{n}}}}}}{{Bh{Ln{Md}}}Af}{{Bh{Ln{Jl}}}Af}{{Bhc}Af{{Kd{{Dl{{B`{n}}}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{Id}}}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{Lf}}}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{Jl}}}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{Md}}}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{If}}}}}}}}{{Bhc}Af{{Kd{{Dl{Db}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{Lj}}}}}}}}{{Bhc}Af{{Kd{{Dl{{Fh{Dj}}}}}}}}{{Bhc}Af{{Kd{{Dl{d}}}}}}{{Bhc}Af{{Kd{{Dl{Lj}}}}}}{{Bhc}Af{{Kd{{Dl{If}}}}}}{{Bhc}Af{{Kd{{Dl{Id}}}}}}{{Bhc}Af{{Kd{{Dl{Md}}}}}}{{Bhc}Af{{Kd{{Dl{{B`{d}}}}}}}}{{Bhc}Af{{Kd{{Dl{Lf}}}}}}{{Bh{Ln{If}}}Af}{{Bh{f{Dn}}}Af}{{{f{BNl}}FbFb}Af}{{BhFb}Af}{{{f{BjCB`}}}{{B`{c}}}{}}{{{f{Af}}c}{{Ah{G`}}}AOn}{{{f{Af}}{f{Df}}}{{Ah{G`}}}}{{{f{Af}}{f{Af}}}{{Ah{G`}}}}0{{{f{Af}}c}eAOn{}}{{{f{Af}}{f{Df}}}c{}}{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BNl}}}Fb}`{{{f{Af}}}CBb}{{{f{Af}}}{{Ah{Kj}}}}{{{f{BNl}}nMl}{{Ah{Kj}}}}0{{{f{BNl}}}Af}{{{f{Af}}c}e{AbKh}{}}{{Afc}e{AbKh}{}}{{{f{Af}}{f{Af}}}c{}}{{{f{BjBNl}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dl{Jl}}}}}{{Ah{Af}}}}6{JhJh}{{{f{BNl}}{f{Cd}}Mn}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{If}}}{{Ah{Af}}}}{{{f{Af}}Fbdd{B`{If}}}{{Ah{Af}}}}{{{f{Af}}Fb}Af}{{{f{BjAf}}Jh}b}{{{f{BNl}}Jl}Af}{{{f{BjBNl}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{If}}}Af}{{{f{CB`}}}{{Hb{Fb{B`{Fb}}}}}}{{{f{BNl}}JlFb}Af}{{{f{Af}}JlFb}Af}{{{f{Af}}Ed}{{Ah{Af}}}}{{{f{BNl}}Ed}{{Ah{Af}}}}0{{{f{BNl}}Jl}{{Hb{AfAf}}}}{{{f{Af}}Jl}{{Hb{AfAf}}}}{{{f{BNl}}Dj}{{B`{n}}}}0{{{f{BNl}}Dj}{{Ah{Kj}}}}0{{{f{Af}}}{{Ah{{f{D`}}}}}}{{{f{Af}}Fb}{{Ah{{AKh{Df}}}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}{{Afc}e{AbKh}{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKh}{}}{{{f{Af}}}{{Ah{c}}}Kh}{{{f{BNl}}}{{Ah{Kj}}}}0{{{f{Af}}}{{Ah{Kj}}}}{{{f{Af}}{B`{Fb}}}Af}{{{f{BNl}}{f{Ef}}}{{Ah{Af}}}}{{{f{BNl}}{f{{Dl{Hj}}}}}{{Ah{Af}}}}{{{f{BNl}}{f{{Dl{Hj}}}}}Af}{{{f{BNl}}{f{Ef}}}Af}{{{f{Af}}{f{{Dl{Hj}}}}}Af}{{{f{Af}}FbAMj}Ff}{{{f{Af}}}{{Ah{Af}}}}{fc{}}0{{{f{Af}}}{{AKh{Af}}}}{fDb}{{AfAf}{{Ah{Af}}}}{c{{Nn{e}}}{}{}}000{{{Hb{BhFf}}}{{Ah{Af}}}}{{{Hb{{f{B@b}}{Fh{Ff}}}}}{{Ah{Af}}}}{{{Hb{{f{B@b}}Ff}}}{{Ah{Af}}}}{{{Hb{Bh{Fh{Ff}}}}}{{Ah{Af}}}}{{}{{Nn{c}}}{}}0006{{Bhc}{{Nn{Af}}}{}}{{{f{BjAf}}{Ih{c}}}dC`}8{f{{Nn{FjBAf}}}}{fO`}000{{{f{Af}}}{{Ah{{f{BAj}}}}}}{{{f{Af}}}{{Ah{{f{AOj}}}}}}{{{f{Af}}}{{Ah{{f{BAl}}}}}}{{{f{Af}}}{{Ah{{f{BAh}}}}}}{{{f{BNl}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BNl}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{BNl}}Dj}{{B`{n}}}}0{{{f{BNl}}Dj}{{Ah{Kj}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKh}}{{{f{Af}}{f{G`}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Ch}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ch}}}Ch}{{f{f{Bjc}}}b{}}{fb}{{{f{Ch}}}Af}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{cc{}}{{}Fb}{{}c{}}{{{CBd{Af}}}Ch}{{{f{BjCh}}{f{BjFf}}}b}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}6{{{f{BjCh}}{f{BjFf}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````{{{CBf{}{{Cb{c}}}}{f{Af}}}c{}}{{{f{CBh}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0`2100210021002100``{{{f{BKb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{F`}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BKb}}c}{{Ah{Af}}}Ad}{{{f{{l{F`}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CBj}}}CBj}{{f{f{Bjc}}}b{}}{fb}{{}CBj}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{CBj}}{f{CBj}}}d}{{f{f{c}}}d{}}00{{{f{CBj}}{f{BjGf}}}Gh}{cc{}}{{{f{CBj}}{f{Bjc}}}bABd}{{}Fb}{{}c{}}{fc{}}{c{{Nn{e}}}{}{}}{{}{{Nn{c}}}{}}{fO`}4````````````{{fh}b}006{{{Fh{BCd}}}{{Ah{BCd}}}}{c{{Ah{BCd}}}{{Gn{}{{Bb{BCd}}}}}}{cBCd{{Gn{}{{Bb{BCd}}}}}}{c{{B`{BCd}}}{{Gn{}{{Bb{BCd}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hb{{AKh{{l{c}}}}{AKh{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hb{{AKh{{l{c}}}}{AKh{{l{e}}}}{AKh{{l{g}}}}}}}C`C`C`}{{}CBl}{{{f{CBn}}}d}0{c{{Ah{Dn}}}{{Gn{}{{Bb{{f{Hh}}}}}}}}{c{{Ah{{Hb{DnFb}}}}}{{Gn{}{{Bb{{f{Hh}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{H`}}}C`C`}{{CBlCBl}CBl}{{{f{BjCBl}}CBl}b}10{{{f{CBl}}}Dj}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CC`}}}{{`{{Bf{}{{Bb{Fb}}}}}}}}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{{CCb{ec}}}}}{{CCb{ec}}}A@j{A@j{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hb{{AKh{{l{c}}}}{AKh{{l{c}}}}}}}C`}{{{f{Af}}{f{Af}}}{{Hb{AfAf}}}}{CCde{}{{CCf{c}}}}{CCde{}{{CCh{c}}}}{CBlCBl}{c{{Ah{BCd}}}{{Gn{}{{Bb{{f{BCd}}}}}}}}{cBCd{{Gn{}{{Bb{{f{BCd}}}}}}}}{{{f{CBl}}CBl}d}{{}CBl}{{}CBn}{Fb{{f{c}}}{}}{{{f{{CCj{c}}}}}{{f{e}}}{}{}}{{{f{{AJl{c}}}}}{{f{e}}}{}{}}2222{Fb{{f{Bjc}}}{}}0{{{f{Bj{AJl{c}}}}}{{f{Bje}}}{}{}}111{{CBlCBl}CBl}{Fbb}0000{cBDb{{Gn{}{{Bb{Dn}}}}}}{c{{Ah{Dn}}}{{Gn{}{{Bb{{f{Dn}}}}}}}}:{{{f{{CCj{Af}}}}{f{{CCj{Af}}}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{f{f{c}}}d{}}00000000{{{f{BjCBl}}c}b{{Gn{}{{Bb{CBl}}}}}}``{{{f{CBl}}{f{BjGf}}}Gh}0000{{{f{CBn}}{f{BjGf}}}Gh}{cc{}}000{CBlCBn}1{Dj{{B`{CBl}}}}{DjCBl}00{c{{AJl{{l{e}}}}}{{Gn{}{{Bb{}}}}}A`}{c{{AJl{G`}}}{{Gn{}{{Bb{d}}}}}}{cCBl{{Gn{}{{Bb{CBl}}}}}}{eCCh{}{{Gn{}{{Bb{c}}}}}}32{{{f{Df}}}{{B`{CBl}}}}{c{{AJl{{l{e}}}}}{{Hd{}{{Bb{}}}}}A`}{c{{AJl{{l{e}}}}}{{Hf{}{{Bb{}}}}}A`}{c{{AJl{G`}}}{{Hf{}{{Bb{d}}}}}}{{{f{Dn}}{f{Dn}}}{{B`{Dn}}}}{{{f{Dn}}{f{Dn}}CBn}{{B`{Dn}}}}{{{f{AMl}}{f{AMl}}}AMl}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CCj{Af}}}}{f{Bjc}}}bABd}{{{f{CBl}}{f{Bjc}}}bABd}{{{f{CBn}}{f{Bjc}}}bABd}{{}Fb}0000{{{f{BjCBl}}CBl}b}{{CBlCBl}CBl}{{{f{CBl}}CBl}d}{{}c{}}0000{{{AJl{c}}}c{}}{CBlc{}}2{BFb{{Fh{c}}}{}}{{}{{Fh{Bh}}}}{{{f{CBl}}}d}0{{{f{CBl}}}{{ACj{CBl}}}}{{{f{CC`}}}{{`{{Bf{}{{Bb{CC`}}}}}}}}{{{f{CBl}}}{{ACl{CBl}}}}{{{f{CC`}}}Fb}{LfHh}1{c{{AJl{c}}}{}}{{eFb}{{CCb{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFb}{{CCb{{CCn{{CCl{c}}}}c}}}A@j}{{{f{Bj{CCb{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CCb{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Fn}}{CBlCBl}{{{f{Df}}}Db}`{{{f{BjCBl}}CBl}b}{{{f{BjCBl}}CBld}b}{{{f{{CCb{ec}}}}}{{Hb{Fb{B`{Fb}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CC`}}JlFb}CC`}{{{f{{Dl{c}}}}JlFb}{{f{{Dl{c}}}}}{}}{{{f{c}}Fb}{{Fh{c}}}CC`}0{{{f{CC`}}Jl}{{Hb{CC`CC`}}}}{{{f{BCd}}Fbd}{{Fh{BCd}}}}{{CBlCBl}CBl}80{fc{}}009{{CCdFb}{{CCb{CCdc}}}{}}{c{{Nn{e}}}{}{}}0000{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}{{}{{Nn{c}}}{}}0000{fO`}00006{{}c{}}0000{{{f{Dn}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Dl{{Fh{c}}}}}}}{{Hb{Fb{Fh{Fb}}}}}{}}{{{f{BCd}}}{{`{{Bf{}{{Bb{BCd}}}}}}}}{{{f{{Dl{c}}}}}{{AJf{Hj}}}{{Kd{{Dl{Ob}}}}J`Jb}}{{{f{{Dl{e}}}}}{{Fh{c}}}{J`JbCf}{{Kd{{Dl{c}}}}}}{{{f{Af}}}{{Fh{Af}}}}","D":"JEf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5485],[5,"ListType",1532],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1532],[10,"Num",5486],[10,"ToPrimitive",5487],[5,"Series",4767],[8,"PolarsResult",4028,5488],[10,"NumOpsDispatchInner",5209,5489],[6,"GroupsProxy",3623,5490],[5,"BooleanType",1532],[6,"Option",5491],[17,"Item"],[8,"ArrayBox",5185],[10,"Iterator",5492],[5,"PlSmallStr",4028,5493],[0,"mut"],[17,"IsNested"],[5,"FalseT",1532],[10,"PolarsDataType",1532],[17,"Output"],[10,"Fn",5494],[10,"Copy",5495],[5,"AmortSeries",5185],[10,"FnMut",5494],[5,"Float64Type",1532],[5,"Float32Type",1532],[8,"StringChunked",1532],[5,"String",5496],[5,"StringType",1532],[1,"str"],[5,"BinaryType",1532],[1,"u8"],[1,"slice"],[6,"DataType",1532,5497],[8,"ListChunked",1532],[5,"View",5498],[5,"SortOptions",1447],[8,"IdxCa",1532,5499],[5,"SortMultipleOptions",1447],[8,"BinaryChunked",1532],[10,"PolarsIntegerType",1532],[6,"CastOptions",733],[10,"NumOpsDispatchCheckedInner",5234,5500],[1,"usize"],[8,"ChunkLenIter",40],[8,"ArrayRef",4028,5501],[5,"Vec",5502],[5,"CompactString",5503],[5,"MetadataProperties",821],[10,"DoubleEndedIterator",5504],[8,"BooleanChunked",1532],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5505],[8,"Result",5505],[10,"Array",5501],[17,"Array"],[10,"IntoIterator",5506],[5,"Bitmap",5507],[1,"tuple"],[10,"IntoParallelIterator",5508],[10,"TrustedLen",5509],[6,"AnyValue",1532,5510],[8,"IdxSize",4028,5511],[5,"MetadataFlags",821],[5,"ObjectType",1532],[10,"PolarsObjectSafe",1106],[10,"PolarsObject",1106],[1,"f32"],[1,"u64"],[5,"Metadata",821],[5,"RwLockWriteGuard",5512],[5,"Int128Type",1532],[8,"DecimalChunked",1532,5513],[10,"Send",5495],[10,"Sync",5495],[10,"ExactSizeIterator",5514],[10,"PolarsFloatType",1532],[6,"IsSorted",4767,5515],[10,"PolarsIterator",782],[1,"i64"],[5,"Iter",5516],[1,"fn"],[5,"Map",5517],[10,"AsRef",5518],[6,"ChunkedArrayLayout",40],[10,"NumCast",5487],[5,"Scalar",4715],[6,"MetadataReadGuard",821,5519],[5,"IMMetadata",821,5520],[5,"Arc",4028,5521],[10,"MetadataTrait",821,5522],[5,"RwLockReadGuard",5512],[1,"i128"],[5,"UInt32Type",1532],[1,"u32"],[5,"UInt64Type",1532],[5,"Range",5523],[5,"Int64Type",1532],[5,"Int32Type",1532],[1,"i32"],[5,"Field",1532,5524],[10,"ParallelIterator",5508],[10,"IndexedParallelIterator",5508],[6,"QuantileInterpolOptions",4028,5525],[5,"RollingOptionsFixedWindow",4028,5526],[10,"Sized",5495],[17,"IsStruct"],[8,"PlRandomState",1532,5527],[5,"BytesHash",5528],[8,"Array2",5529],[8,"ArrayView1",5529],[6,"Either",5530],[6,"Result",5531],[5,"TypeId",5532],[5,"NullableIdxSize",4028,5511],[10,"FnOnce",5494],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",443,5533],[10,"ChunkedBuilder",471],[5,"BinViewChunkedBuilder",471,5534],[10,"ViewType",5535],[5,"BooleanChunkedBuilder",471,5536],[5,"NullChunkedBuilder",471,5537],[5,"PrimitiveChunkedBuilder",471,5538],[10,"Clone",5539],[8,"StringChunkedBuilder",471,5534],[8,"BinaryChunkedBuilder",471,5534],[10,"NewChunkedArray",471],[5,"AnonymousListBuilder",579,5540],[5,"AnonymousOwnedListBuilder",579,5540],[5,"ListBooleanChunkedBuilder",579,5541],[5,"ListPrimitiveChunkedBuilder",579,5542],[10,"ListBuilderTrait",579],[5,"ListStringChunkedBuilder",579,5543],[5,"ListBinaryChunkedBuilder",579,5543],[5,"ListNullChunkedBuilder",579,5544],[5,"Box",5545],[10,"Hasher",5546],[10,"ChunkedCollectInferIterExt",762],[10,"ChunkedCollectIterExt",762],[10,"Canonical",776],[10,"ChunkedCollectParIterExt",778],[10,"FromParIterWithDtype",778],[5,"BooleanArray",5547],[5,"BoolIterNoNull",782],[5,"SomeIterator",782],[5,"MetadataEnv",821,5548],[10,"MetadataCollectable",821,5549],[5,"Iter",5550],[5,"IterNames",5550],[5,"File",5551],[5,"Mutex",5552],[6,"MetadataMerge",821],[5,"RwLock",5512],[5,"ObjectArray",1106],[6,"ArrowDataType",1532,5553],[10,"Any",5532],[10,"Debug",5505],[5,"BitmapIter",5554],[6,"ZipValidity",5555],[8,"ObjectValueIter",1106],[5,"ObjectChunkedBuilder",1183],[8,"ObjectChunked",1532],[10,"AnonymousObjectBuilder",1206],[5,"ObjectRegistry",1206],[8,"ObjectConverter",1206],[8,"BuilderConstructor",1206],[10,"ChunkAgg",1234],[17,"FuncRet"],[10,"ChunkApply",1234],[10,"ChunkApplyKernel",1234],[10,"ChunkSort",1234],[10,"ChunkUnique",1234],[10,"ChunkCast",1234],[6,"FillNullStrategy",1234],[10,"ChunkCompare",1234],[10,"ChunkExplode",1234],[5,"OffsetsBuffer",5556],[10,"ChunkFillNullValue",1234],[10,"ChunkFilter",1234],[10,"ChunkFull",1234],[10,"ChunkFullNull",1234],[10,"ChunkAnyValue",1234],[10,"IsFirstDistinct",1234],[10,"IsLastDistinct",1234],[10,"ChunkQuantile",1234],[10,"ChunkExpandAtIndex",1234],[10,"ChunkReverse",1234],[10,"ChunkRollApply",1234],[10,"ChunkSet",1234],[10,"ChunkShift",1234],[10,"ChunkShiftFill",1234],[10,"ChunkVar",1234],[10,"ChunkTake",1234],[10,"ChunkTakeUnchecked",1234],[10,"ChunkBytes",1234],[10,"ChunkZip",1234],[10,"BinaryFnMut",1360],[10,"StaticArray",1532,5557],[10,"TernaryFnMut",1360],[10,"Error",5558],[10,"UnaryFnMut",1360],[5,"PrimitiveArray",5559],[6,"SearchSortedSide",1401],[10,"SlicedArray",4028,5560],[5,"NoNull",5269],[5,"RowsEncoded",5561],[5,"BinaryArray",5562],[8,"BinaryOffsetChunked",1532],[5,"NaiveDateTime",5563],[6,"PolarsError",4028,5488],[6,"Cow",5564],[8,"Float32Chunked",1532],[8,"Float64Chunked",1532],[10,"ArrayFromIter",1532,5565],[10,"ArrayFromIterDtype",1532,5565],[10,"AsRefDataType",1532,5497],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5566],[10,"From",5518],[5,"CategoricalChunked",2982,5567],[10,"CategoricalMergeOperation",2982,5568],[10,"LogicalType",1532,5569],[5,"Logical",1532,5569],[5,"OwnedObject",1532,5510],[6,"UnknownKind",1532,5497],[5,"CompatLevel",1532,5497],[6,"TimeUnit",1532,5570],[5,"UInt8Type",1532],[5,"UInt16Type",1532],[5,"Int8Type",1532],[5,"Int16Type",1532],[5,"DateType",1532],[5,"TimeType",1532],[5,"BinaryOffsetType",1532],[5,"DecimalType",1532],[5,"DatetimeType",1532],[5,"DurationType",1532],[5,"CategoricalType",1532],[6,"ArrowTimeUnit",1532],[10,"ArrayCollectIterExt",4028,5565],[8,"Utf8ViewArray",5535],[8,"UInt32Chunked",1532],[5,"Error",5505],[10,"NumericNative",1532],[10,"Into",5518],[5,"ArrowField",4028],[6,"IntegerType",5571],[6,"PrimitiveType",5572],[10,"Borrow",5573],[10,"NoOption",5574],[10,"GetAnyValue",1532,5510],[8,"Int128Chunked",1532],[10,"IntoScalar",1532,5575],[6,"Ordering",5576],[6,"PhysicalType",5571],[6,"ToCompactStringError",5503],[8,"UInt8Chunked",1532],[8,"UInt16Chunked",1532],[8,"UInt64Chunked",1532],[8,"Int8Chunked",1532],[8,"Int16Chunked",1532],[8,"Int32Chunked",1532],[8,"Int64Chunked",1532],[8,"PlIdHashMap",1532,5499],[5,"CategoricalChunkedBuilder",2982,5577],[5,"GlobalRevMapMerger",2982,5568],[6,"RevMapping",3123,5578],[6,"CategoricalOrdering",3123,5578],[5,"CatIter",2982,5567],[1,"u128"],[5,"DataFrame",3318],[5,"StringCacheHolder",3177,5579],[5,"ErrString",3206,5488],[6,"PolarsWarning",3206,5580],[10,"Display",5505],[6,"FloatFmt",3287],[1,"char"],[8,"Schema",4745],[10,"IntoSeries",4767,5581],[6,"NullStrategy",3318],[6,"UniqueKeepStrategy",3318],[8,"PlHashSet",1532,5527],[8,"ArrowSchema",4028,5582],[5,"Row",3881],[5,"GroupBy",3623],[5,"RangeFull",5523],[5,"RangeToInclusive",5523],[5,"RangeTo",5523],[5,"RangeFrom",5523],[5,"RangeInclusive",5523],[5,"RecordBatchIter",3318],[5,"PhysRecordBatchIter",3318],[10,"RangeBounds",5523],[10,"IntoVec",5269],[8,"SchemaRef",4745],[6,"IndexOrder",4028,5583],[8,"RecordBatch",5584],[5,"StructArray",5585],[5,"UnpivotArgsIR",3594],[5,"GroupsIdx",3623,5490],[8,"IdxVec",5586],[6,"GroupByMethod",3623],[5,"SlicedGroups",3623,5490],[5,"GroupsProxyParIter",3623,5490],[10,"UnindexedConsumer",5587],[6,"GroupsIndicator",3623,5490],[8,"IdxItem",3623,5490],[10,"IntoGroupsProxy",3623,5588],[5,"Copied",5589],[5,"Zip",5590],[5,"GroupsProxyIter",3623,5490],[8,"GroupsSlice",3623,5490],[1,"array"],[8,"DynArgs",4028,5591],[10,"IsFloat",5592],[10,"NativeType",5593],[10,"AggList",3865,5594],[10,"TakeExtremum",3865],[10,"PhysicalAggExpr",3878],[6,"AnyValueBuffer",3881,5595],[6,"AnyValueBufferTrusted",3881,5595],[5,"IdHasher",3980,5596],[5,"IdxHash",3980,5596],[5,"HashMap",5597],[10,"BuildHasher",5546],[10,"VecHash",3980,5598],[10,"Allocator",5599],[5,"BorrowedFd",5600],[10,"AsFd",5600],[10,"AsRawFd",5601],[5,"Path",5602],[5,"OsStr",5603],[20,"MaybeUninit",5604],[10,"NumOpsDispatchChecked",4028,5500],[5,"ChunkId",4028,5511],[5,"RollingVarParams",4028,5591],[5,"RollingQuantileParams",4028,5591],[6,"NonExistent",4028,5605],[10,"Ord",5576],[5,"CStr",5606],[10,"Default",5607],[5,"Weak",5521],[10,"Scalar",5608],[10,"PartialEq",5576],[5,"Error",5609],[5,"TryReserveError",5610],[5,"Utf8Error",5611],[6,"Error",5612],[5,"CString",5613],[1,"never"],[5,"OsString",5603],[5,"PathBuf",5602],[10,"ToOwned",5564],[10,"FromData",4637,5614],[5,"Buffer",5615],[10,"FromDataUtf8",4637,5614],[10,"FromDataBinary",4637,5614],[5,"ListArray",5616],[6,"Ambiguous",4028,5605],[10,"NamedFromOwned",4028,5617],[10,"PartialOrd",5576],[10,"Hash",5546],[10,"SeriesTrait",4767,5515],[10,"CloneToUninit",5539],[10,"ChunkAggSeries",4028,5618],[10,"QuantileAggSeries",4028,5619],[10,"IndexToUsize",4028,5620],[10,"NamedFrom",4028,5617],[5,"Pin",5621],[5,"Request",5558],[5,"BorrowedCursor",5622],[5,"IoSliceMut",5623],[6,"SeekFrom",5623],[10,"VarAggSeries",4028,5624],[5,"AllocError",5599],[5,"BTreeMap",5625],[5,"Arguments",5505],[5,"IoSlice",5623],[5,"AnonymousBuilder",4643,5626],[5,"Offsets",5556],[5,"MutableNullArray",4666,5627],[5,"MutableBitmap",5628],[5,"Utf8Array",5629],[5,"Schema",5630],[10,"SchemaExt",4745],[17,"DataType"],[10,"SchemaNamesAndDtypes",4745],[8,"Metadata",5553],[5,"SeriesIter",4767,5631],[8,"SeriesPhysIter",4767,5631],[5,"Rc",5632],[10,"LhsNumOps",5209,5489],[10,"NumOpsDispatch",5209,5489],[6,"NullBehavior",5242],[5,"SuperTypeFlags",5269,5633],[5,"SuperTypeOptions",5269,5633],[10,"Container",5269],[5,"TrustMyLength",5269,5509],[10,"CustomIterTools",5269,5634],[10,"FromIteratorReversed",5635],[10,"FromTrustedLenIterator",5269,5634],[5,"Wrap",5269],[5,"Repeat",5636],[5,"Take",5637],[8,"FillNullLimit",1234],[10,"InitHashMaps",1532],[10,"InitHashMaps2",1532],[5,"TrueT",1532],[15,"IO",3273],[15,"Context",3273],[15,"Count",3862],[15,"Slice",3863],[10,"ListFromIter",4028],[10,"Utf8FromIter",4710],[10,"BinaryFromIter",4710],[6,"BitRepr",4767]],"r":[[0,5596],[4,5579],[13,5579],[16,5579],[32,5579],[443,5533],[471,5534],[472,5534],[473,5536],[476,5537],[477,5538],[478,5534],[579,5540],[580,5540],[581,5543],[582,5541],[584,5544],[585,5542],[586,5543],[826,5520],[832,5549],[833,5548],[837,5519],[838,5522],[1153,5638],[1431,5560],[1447,5560],[1533,5510],[1535,5565],[1536,5565],[1537,5565],[1538,5553],[1540,5497],[1556,5567],[1559,5567],[1560,5577],[1561,5568],[1562,5578],[1564,5497],[1565,5497],[1566,5497],[1567,5497],[1578,5513],[1588,5524],[1589,5524],[1604,5510],[1606,5568],[1610,5499],[1611,5620],[1612,5499],[1613,5499],[1614,5527],[1615,5499],[1640,5575],[1654,5569],[1655,5569],[1673,5510],[1677,5527],[1678,5527],[1679,5499],[1680,5527],[1681,5527],[1682,5527],[1683,5493],[1689,5578],[1691,5557],[1703,5570],[1704,5497],[1731,5497],[1929,5568],[1946,5569],[2052,5497],[2574,5568],[2575,5568],[2587,5497],[2673,5567],[2711,5567],[2982,5567],[2983,5567],[2984,5577],[2985,5568],[2986,5578],[2988,5568],[2992,5578],[3009,5568],[3075,5568],[3076,5568],[3094,5567],[3098,5567],[3123,5578],[3128,5578],[3177,5579],[3183,5579],[3186,5579],[3194,5579],[3196,5578],[3201,5578],[3202,5579],[3203,5579],[3204,5579],[3205,5579],[3212,5488],[3219,5488],[3220,5488],[3221,5580],[3235,5488],[3243,5488],[3250,5580],[3255,5488],[3257,5488],[3258,5488],[3259,5488],[3260,5488],[3261,5580],[3262,5488],[3277,5639],[3278,5639],[3279,5639],[3280,3980],[3623,5490],[3629,5490],[3630,5490],[3631,5490],[3632,5490],[3633,5490],[3634,5490],[3637,5490],[3639,5588],[3651,5490],[3865,5594],[3883,5595],[3884,5595],[3979,5640],[3980,5596],[3981,5596],[3982,5596],[3983,5598],[3986,5598],[3987,5598],[4028,5605],[4029,5521],[4030,5533],[4031,5565],[4032,5501],[4034,5582],[4035,5534],[4036,5536],[4038,5567],[4039,5567],[4040,5577],[4041,5568],[4042,5578],[4043,5618],[4044,5511],[4045,40],[4046,471],[4047,762],[4048,762],[4052,3318],[4054,5591],[4060,5614],[4061,5614],[4062,5614],[4064,5568],[4067,5620],[4068,5511],[4069,5583],[4070,5620],[4071,5581],[4072,5269],[4074,5641],[4075,5641],[4076,5641],[4079,5489],[4081,5543],[4082,5541],[4083,579],[4084,5642],[4085,5542],[4086,5543],[4090,5617],[4091,5617],[4093,471],[4095,5605],[4099,5511],[4100,5511],[4101,5489],[4102,5500],[4106,5493],[4107,5488],[4108,782],[4109,1106],[4110,5488],[4111,5538],[4112,5619],[4113,5525],[4116,5578],[4117,5526],[4118,5591],[4119,5591],[4122,4715],[4125,4767],[4126,5515],[4128,5560],[4130,5579],[4132,5534],[4134,3318],[4135,3594],[4136,5624],[4137,5598],[4189,5568],[4237,5642],[4238,0],[4251,5642],[4281,0],[4430,5620],[4473,5642],[4475,5568],[4476,5568],[4501,5642],[4508,5488],[4509,5488],[4510,5488],[4511,5488],[4523,5567],[4525,5642],[4531,5567],[4608,5642],[4637,5614],[4638,5614],[4639,5614],[4643,5626],[4666,5627],[4697,5578],[4702,5578],[4703,5560],[4706,5579],[4707,5579],[4708,5579],[4709,5579],[4710,5643],[4711,5643],[4769,5515],[4770,1234],[4773,5581],[4774,5515],[4775,5515],[4780,5631],[4781,5631],[4782,5515],[5209,5489],[5210,5489],[5211,5489],[5217,5489],[5234,5500],[5235,5500],[5272,5634],[5273,5634],[5274,5634],[5277,5633],[5278,5633],[5279,5509],[5294,5644],[5295,5644],[5355,5645],[5356,5633],[5399,5633],[5400,5633],[5402,5646],[5430,5633],[5462,5633],[5479,5646]],"b":[[50,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-ChunkedArray%3CT%3E"],[52,"impl-Add-for-%26ChunkedArray%3CT%3E"],[53,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[67,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CT%3E"],[73,"impl-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkedArray%3CBinaryType%3E"],[102,"impl-Container-for-ChunkedArray%3CT%3E"],[103,"impl-ChunkedArray%3CT%3E"],[123,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[125,"impl-Div-for-%26ChunkedArray%3CT%3E"],[126,"impl-Div-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[143,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[144,"impl-Debug-for-ChunkedArray%3CT%3E"],[154,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[158,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[159,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[229,"impl-Container-for-ChunkedArray%3CT%3E"],[230,"impl-ChunkedArray%3CT%3E"],[235,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkedArray%3CBooleanType%3E"],[240,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[242,"impl-ChunkedArray%3CBooleanType%3E"],[243,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[253,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[254,"impl-ChunkedArray%3CBooleanType%3E"],[257,"impl-ChunkedArray%3CT%3E"],[258,"impl-ChunkedArray%3CBooleanType%3E"],[259,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[260,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[261,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[262,"impl-Mul-for-ChunkedArray%3CT%3E"],[267,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[268,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[269,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[270,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[271,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[272,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[273,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[275,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[277,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[278,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[279,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[280,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[281,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[284,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[288,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[289,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[290,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[298,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[299,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[300,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[305,"impl-ChunkedArray%3CStringType%3E"],[306,"impl-ChunkedArray%3CListType%3E"],[307,"impl-ChunkedArray%3CListType%3E"],[308,"impl-ChunkedArray%3CStringType%3E"],[319,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[320,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[321,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[322,"impl-Rem-for-ChunkedArray%3CT%3E"],[341,"impl-ChunkedArray%3CT%3E"],[342,"impl-Container-for-ChunkedArray%3CT%3E"],[345,"impl-Container-for-ChunkedArray%3CT%3E"],[346,"impl-ChunkedArray%3CT%3E"],[349,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[350,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[351,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[352,"impl-Sub-for-ChunkedArray%3CT%3E"],[354,"impl-ChunkedArray%3CBooleanType%3E"],[355,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[359,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[360,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[367,"impl-ChunkedArray%3CListType%3E"],[368,"impl-ChunkedArray%3CT%3E"],[373,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[374,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[375,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[376,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[377,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[378,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[527,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[528,"impl-BinViewChunkedBuilder%3Cstr%3E"],[859,"impl-Flags-for-MetadataProperties"],[860,"impl-MetadataProperties"],[861,"impl-MetadataFlags"],[862,"impl-Flags-for-MetadataFlags"],[925,"impl-MetadataTrait-for-Metadata%3CT%3E"],[926,"impl-Metadata%3CT%3E"],[951,"impl-LowerHex-for-MetadataProperties"],[952,"impl-UpperHex-for-MetadataProperties"],[953,"impl-Debug-for-MetadataProperties"],[954,"impl-Binary-for-MetadataProperties"],[955,"impl-Octal-for-MetadataProperties"],[956,"impl-Debug-for-MetadataFlags"],[957,"impl-UpperHex-for-MetadataFlags"],[958,"impl-LowerHex-for-MetadataFlags"],[959,"impl-Octal-for-MetadataFlags"],[960,"impl-Binary-for-MetadataFlags"],[970,"impl-MetadataProperties"],[971,"impl-Flags-for-MetadataProperties"],[972,"impl-Flags-for-MetadataFlags"],[973,"impl-MetadataFlags"],[984,"impl-MetadataTrait-for-Metadata%3CT%3E"],[985,"impl-Metadata%3CT%3E"],[1028,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1029,"impl-Metadata%3CT%3E"],[1033,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1034,"impl-Metadata%3CT%3E"],[1112,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1113,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1148,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1149,"impl-ObjectArray%3CT%3E"],[1164,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1165,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1175,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1176,"impl-ObjectArray%3CT%3E"],[1177,"impl-ObjectArray%3CT%3E"],[1178,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1180,"impl-ObjectArray%3CT%3E"],[1181,"impl-Array-for-ObjectArray%3CT%3E"],[1184,"impl-ObjectChunkedBuilder%3CT%3E"],[1185,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1187,"impl-ObjectChunkedBuilder%3CT%3E"],[1188,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1770,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1771,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1772,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1773,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1774,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1775,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1776,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1777,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1852,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1853,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1854,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1855,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1856,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1857,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2179,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2180,"impl-PartialEq-for-DataType"],[2189,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2190,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2191,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2192,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2195,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2196,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2197,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2198,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2236,"impl-Display-for-AnyValue%3C\'_%3E"],[2237,"impl-Debug-for-AnyValue%3C\'a%3E"],[2239,"impl-Debug-for-DataType"],[2240,"impl-Display-for-DataType"],[2243,"impl-Display-for-TimeUnit"],[2244,"impl-Debug-for-TimeUnit"],[2256,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2257,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2258,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2259,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2260,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2262,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2263,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2265,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2268,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2269,"impl-From%3C%26Field%3E-for-Field"],[2293,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2294,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2297,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2298,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2299,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2301,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2302,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2303,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2304,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2310,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2311,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2313,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2314,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2315,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2316,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2317,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2318,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2325,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2326,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2327,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2328,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2329,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2330,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2419,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2420,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2421,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2422,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2425,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2426,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2427,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2428,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2564,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2565,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2566,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2567,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2570,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2571,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2572,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2573,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2608,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2609,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2610,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2611,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2612,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2613,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2614,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2615,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2616,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2617,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2630,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2631,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2634,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2635,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2636,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2637,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2640,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2641,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2642,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2643,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2723,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2724,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2725,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2726,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[3029,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3030,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3031,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3032,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3033,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3034,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3049,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3050,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3051,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3052,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3053,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3054,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3069,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3070,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3071,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3072,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3073,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3074,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3085,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3086,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3087,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3088,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3089,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3090,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3245,"impl-Display-for-ErrString"],[3246,"impl-Debug-for-ErrString"],[3340,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3341,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3342,"impl-Add%3C%26Series%3E-for-DataFrame"],[3383,"impl-Div%3C%26Series%3E-for-DataFrame"],[3384,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3385,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3417,"impl-Debug-for-DataFrame"],[3418,"impl-Display-for-DataFrame"],[3450,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3451,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3452,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3453,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3454,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3455,"impl-Index%3C%26str%3E-for-DataFrame"],[3456,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3457,"impl-Index%3Cusize%3E-for-DataFrame"],[3475,"impl-DataFrame"],[3476,"impl-Container-for-DataFrame"],[3482,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3483,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3484,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3485,"impl-Container-for-DataFrame"],[3486,"impl-DataFrame"],[3502,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3503,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3504,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3530,"impl-Container-for-DataFrame"],[3531,"impl-DataFrame"],[3535,"impl-DataFrame"],[3536,"impl-Container-for-DataFrame"],[3539,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3540,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3541,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3561,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3563,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3739,"impl-Display-for-GroupByMethod"],[3740,"impl-Debug-for-GroupByMethod"],[3746,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3747,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3748,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3782,"impl-IntoIterator-for-GroupsIdx"],[3783,"impl-IntoIterator-for-%26GroupsIdx"],[3785,"impl-IntoParallelIterator-for-GroupsIdx"],[3786,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4153,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4154,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4155,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4156,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4159,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4160,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4243,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4244,"impl-Default-for-Arc%3CCStr%3E"],[4245,"impl-Default-for-Arc%3Cstr%3E"],[4246,"impl-Default-for-Arc%3CT%3E"],[4303,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4304,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4305,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4335,"impl-Display-for-PolarsError"],[4336,"impl-Debug-for-PolarsError"],[4337,"impl-Debug-for-PlSmallStr"],[4338,"impl-Display-for-PlSmallStr"],[4341,"impl-Debug-for-Arc%3CT,+A%3E"],[4342,"impl-Display-for-Arc%3CT,+A%3E"],[4343,"impl-Pointer-for-Arc%3CT,+A%3E"],[4352,"impl-From%3CError%3E-for-PolarsError"],[4353,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4354,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4355,"impl-From%3CError%3E-for-PolarsError"],[4357,"impl-From%3C%26str%3E-for-PlSmallStr"],[4358,"impl-From%3CString%3E-for-PlSmallStr"],[4360,"impl-From%3C%26String%3E-for-PlSmallStr"],[4361,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4365,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4366,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4367,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4368,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4369,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4370,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4371,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4374,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4375,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4376,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4377,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4378,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4379,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4380,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4381,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4382,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4394,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4395,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4396,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4397,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4398,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4399,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4400,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4401,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4790,"impl-Add%3CT%3E-for-%26Series"],[4791,"impl-Add%3CT%3E-for-Series"],[4792,"impl-Add-for-%26Series"],[4793,"impl-Add-for-Series"],[4863,"impl-Div%3CT%3E-for-Series"],[4864,"impl-Div%3CT%3E-for-%26Series"],[4865,"impl-Div-for-%26Series"],[4866,"impl-Div-for-Series"],[4878,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4879,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4880,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4881,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4882,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4883,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4900,"impl-Debug-for-Series"],[4901,"impl-Display-for-Series"],[4913,"impl-FromIterator%3C%26u64%3E-for-Series"],[4914,"impl-FromIterator%3C%26u32%3E-for-Series"],[4915,"impl-FromIterator%3Cbool%3E-for-Series"],[4916,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4917,"impl-FromIterator%3C%26f64%3E-for-Series"],[4918,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4919,"impl-FromIterator%3Cf64%3E-for-Series"],[4920,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4921,"impl-FromIterator%3C%26f32%3E-for-Series"],[4922,"impl-FromIterator%3Cf32%3E-for-Series"],[4923,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4924,"impl-FromIterator%3C%26i64%3E-for-Series"],[4925,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[4926,"impl-FromIterator%3C%26bool%3E-for-Series"],[4927,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4928,"impl-FromIterator%3C%26str%3E-for-Series"],[4929,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[4930,"impl-FromIterator%3C%26i32%3E-for-Series"],[4931,"impl-FromIterator%3Ci32%3E-for-Series"],[4932,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4933,"impl-FromIterator%3Cu32%3E-for-Series"],[4934,"impl-FromIterator%3Cu64%3E-for-Series"],[4935,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4936,"impl-FromIterator%3CString%3E-for-Series"],[4937,"impl-FromIterator%3Ci64%3E-for-Series"],[4938,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4939,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4940,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4941,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[4942,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4943,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4944,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4959,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4960,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4961,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4962,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4963,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4964,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5006,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5007,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5008,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5009,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5010,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5011,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5025,"impl-Mul%3CT%3E-for-Series"],[5026,"impl-Mul%3CT%3E-for-%26Series"],[5027,"impl-Mul-for-Series"],[5028,"impl-Mul-for-%26Series"],[5035,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5036,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5037,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5038,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5039,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5040,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5041,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5042,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5043,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5044,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5045,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5046,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5047,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5048,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5049,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5050,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5051,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5052,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5053,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5054,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5055,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5056,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5057,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5058,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5059,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5060,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5061,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5062,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5063,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5064,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5065,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5066,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5067,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5068,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5069,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5070,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5071,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5076,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5077,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5078,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5079,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5080,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5081,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5090,"impl-Rem%3CT%3E-for-%26Series"],[5091,"impl-Rem%3CT%3E-for-Series"],[5092,"impl-Rem-for-%26Series"],[5124,"impl-Sub%3CT%3E-for-Series"],[5125,"impl-Sub-for-Series"],[5126,"impl-Sub-for-%26Series"],[5127,"impl-Sub%3CT%3E-for-%26Series"],[5149,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5150,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5151,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5152,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5302,"impl-SuperTypeFlags"],[5303,"impl-Flags-for-SuperTypeFlags"],[5373,"impl-Binary-for-SuperTypeFlags"],[5374,"impl-UpperHex-for-SuperTypeFlags"],[5375,"impl-Debug-for-SuperTypeFlags"],[5376,"impl-Octal-for-SuperTypeFlags"],[5377,"impl-LowerHex-for-SuperTypeFlags"],[5386,"impl-Flags-for-SuperTypeFlags"],[5387,"impl-SuperTypeFlags"],[5389,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5390,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5393,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5394,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5397,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5398,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAEwOlw7TDtYO1w7YDtkO2g7fDuIO5w7oDg4P","e":"OzAAAAEAAEIQFwIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAsAYwAEAGsAAwBwAAIAdwANAIYAAwCLAAIAjwAEAJUAAACXAAEAmwAFAKMAAwCpAAMArgAFALUAAQC6AAUAwgACAMkABADPAAMA1gACANsAAgDfAAcA7AAMAP4AAwAEAQYADAEbACsBAwAwAQAAMgEEADgBAQA+AQAAQAEEAEYBAABLAQUAUwEBAFcBAwBcAQkAbAEBAHIBAAB2AQgAgAEIAIoBAACMAQUAlAEAAJYBIwC7ASkA6QECAO8BJwAdAgUAJwIAACkCJgBSAkwApgIMALoCJADiAg4A8gIBAPUCGQASAwkAHgMBACIDAQAlAxUAPAMJAEcDCgBcAwAAXwMAAGQDHgCHAxIAnAMAAJ4DCQCqAwMAsAMBALQDDQDMAwEA1QMHAN4DBwDzAwEA9wMAAPoDAwACBAUACQQEABUECwAoBAQALwQNAD8EBgBJBAgAUwQBAFcEFwBwBAcAeQQAAHwEAQB/BAEAhAQQAJYEAACYBAAAmgQCAJ4EAgCiBAEApQQIAK8EAACxBAUAuQQBALwEAAC+BAEAwQQDAMYEAwDLBAIAzwQDANUEAADYBAAA4AQAAOUEAADoBAEA7QQBAPAEAADzBAAA/QQBAAcFAgANBQYAFgUCABsFAQAeBQAAIAUBACYFAQApBQEAMAUBADYFAAA5BQAAPAUAAD4FAABABQAAQgUAAEcFBABOBQEAUQUHAFoFAQBdBQAAYQUAAGMFAwBoBQEAawUFAHcFFgCPBQEAkwUEAJkFAwCgBQcAqwURAL8FCwDMBQAAzgUEAN8FCQD1BQ0ABQYCAAkGBQARBgAAEwYNACQGAAAmBgAAKwYBAC4GAAAwBgIANAYAADYGAAA5BgAAPAYAAD4GAQBBBgAAQwYCAEcGDABVBgAAVwYBAFoGAABcBgEAXwYAAGEGAQBkBgAAZgYBAGkGAwBwBgAAdAYBAHgGAAB7BgAAfQYAAH8GAwCEBgAAhwYIAJEGAgCWBgQAnAYBAKAGAACiBgAApwYCAKsGAQCuBgAAsAYBALMGAAC1BgEAuAYAALoGAQC9BgAAvwYBAMIGAADEBgAAxwY7AAkHBAAQBwkAGwcEACEHAwAmBwQALAcAAC4HXwCPB20A/gd+AH4IAACBCEcA0QgEANcIAQDaCAAA3QgCAPYIAQD5CBcAFQkjADsJBgBECR4AaQlAAKwJAADQCQoA3QkAAN8JAgDjCQEA5gkAAOsJBwD0CQAA9wkCAPwJAwABCgAAAwodACIKCQAtCg0APAoeAFwKBwBlChoAgQoVAJgKCwClCgAAqgoAAKwKAACxCh0A0QoEANcKUQAqCy0AWQtMAKcLBACtCwEAsAsCALQLBAC6CyQA5gsCAOoLCQD4CwMA/QsXABcMAQAaDAQAIAwNAC8MBQA2DAAAOAwXAFEMAQBXDAIAXAwBAGAMCQBrDAQAcQwBAHYMAAB4DAIAfAwBAH8MAACBDAEAhwwEAI0MBACTDBAApQwKALEMAACzDAIAuAwFAL8MJQDmDAUA7QwJAPoMAAD9DAoACQ0GABUNFAAsDRIAQA0AAEkNAQBNDQIAUQ0AAFMNAABYDQMAaQ0AAHANAABzDQEAew0MAI4NAQCVDQAAlw0AAJsNAwClDQEArw0CALcNAAC6DQAAwA0AAMkNAgDNDQAA0Q0FAN4NBADmDQYA7w0KAPsNAAAADgQADA4OABwOAgAgDgoALA4BAC8OAwA0DgMAOQ4JAEQOBwBNDgEAUA4cAG4OKACYDgYAow4CAKgOAACrDgIAsA4AALUOBwDFDg0A1A4BANsOAwDgDgEA5A4CAOkOAADrDiAADw8MAB4PBQAlDwcALg8WAEcPDgBXDw4AZw8AAGkPAABrDwMAcg8GAHwPDgCNDwEAkA8RAKQPBACsDwUAtA8JAL8PAgDEDwcAzQ8NANwPAwDhDxYA+Q8HAAIQBQAJEAEADBAUACQQEQA3EAAAORAGAEIQHQBiEAMAZxAdAIYQBwCPEAEAkxAAAJgQIgC+EAMAwxAIAM4QAwDTEDEABhEBAAkRAgAOEQAAFhEAACgRAAArEQcAOREAADwRAwBEEQAARhEGAE8REABwEQMAdREDAHoRAAB8EQEAlhEDAJ0RBACkEQAApxEHALERAACzEQEAuBEuAO8RAgDzEQwAARIAAAMSDAAUEg0AJBIGACwSAAAuEh0ATRIAAE8SCwBcEgAAXhIBAGcSEgB7EgAAfRIXAJYSAACYEgIAnBIAAJ4SAACgEgUApxIEAK0SBQC3EgQAwRIAAMcSAgDPEgUA1hIJAOMSAwDoEgAA7BICAPASAwD2EhIADRMDABITAQAXEwIAJBMDACsTAAAvEwEAMhMgAFYTAABYEwEAYBMAAGITAQBlEwAAZxMAAG0TAQBwEwMAeBMDAIQTAwCJEwAAixMAAI8TAQCSEwEAmhMAAKITAwCoEwAArBMBAK8TIQDTEwMA2RMBAN0TAQDjEwIA6BMAAOoTAADuEwIA9RMBAPgTAAD6EwEA/RMAAAMUAAAFFAMAFRQBABgUDwApFAUANhQAADsUAwBAFAAAQxQLAFAUAABSFAAAVBQEAFoUGgB4FAIAfRQPAI4UAQCRFAQAmBQDAJ4UCACpFAAArRQBALEUAQC4FAAAuxQTANAUAgDXFA4A5xQEAO8UCwD8FAcACBUAAAsVAAAOFQEAERUCABUVAwAaFQkALBUEADQVAAA2FQMAPBUBAD8VAQBDFQIASBUAAE0VAgBSFQQAWBUJAGMVBABpFQQA"}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNHHFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get","get_range","get_ranges","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","batched_async","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","new_async","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","check_schema","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","serialize","","set_low_memory","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","use_statistics","","","vzip","","","","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","read_this_row_group","to_deserializer","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::options"],[414,"polars_io::csv"],[416,"polars_io::csv::read"],[677,"polars_io::csv::read::buffer"],[751,"polars_io::csv::read::buffer::Buffer"],[754,"polars_io::csv::read::schema_inference"],[781,"polars_io::csv::write"],[926,"polars_io::file_cache"],[947,"polars_io::ipc"],[1186,"polars_io::json"],[1284,"polars_io::mmap"],[1306,"polars_io::ndjson"],[1308,"polars_io::ndjson::core"],[1412,"polars_io::parquet"],[1415,"polars_io::parquet::metadata"],[1468,"polars_io::parquet::read"],[1610,"polars_io::parquet::read::_internal"],[1612,"polars_io::parquet::write"],[1836,"polars_io::partition"],[1837,"polars_io::path_utils"],[1844,"polars_io::pl_async"],[1866,"polars_io::predicates"],[1934,"polars_io::prelude"],[1945,"polars_io::utils"],[1956,"polars_io::utils::byte_source"],[2037,"polars_io::utils::compression"],[2055,"polars_io::utils::slice"],[2074,"dyn_clone::sealed"],[2075,"polars_io::options"],[2076,"core::result"],[2077,"serde::de"],[2078,"polars_io::shared"],[2079,"polars_core::frame"],[2080,"polars_error"],[2081,"core::fmt"],[2082,"core::hash"],[2083,"std::io"],[2084,"polars_arrow::record_batch"],[2085,"core::option"],[2086,"serde::ser"],[2087,"core::any"],[2088,"polars_io::avro::read"],[2089,"polars_arrow::datatypes::schema"],[2090,"polars_io::avro::write"],[2091,"polars_core::schema"],[2092,"alloc::string"],[2093,"alloc::vec"],[2094,"polars_io::cloud::glob"],[2095,"object_store"],[2096,"alloc::sync"],[2097,"polars_io::cloud::polars_object_store"],[2098,"object_store::path"],[2099,"tokio::io::async_write"],[2100,"core::marker"],[2101,"polars_io::cloud::adaptors"],[2102,"std::io::error"],[2103,"crossterm::command"],[2104,"url"],[2105,"bytes::bytes"],[2106,"core::ops::range"],[2107,"core::ops::function"],[2108,"parquet_format_safe::thrift::varint::decode"],[2109,"object_store::aws::builder"],[2110,"object_store::azure::builder"],[2111,"object_store::gcp::builder"],[2112,"core::convert"],[2113,"core::iter::traits::collect"],[2114,"polars_io::csv::read::reader"],[2115,"alloc::boxed"],[2116,"polars_io::csv::read::read_impl::batched"],[2117,"polars_io::csv::read::options"],[2118,"std::path"],[2119,"polars_utils::pl_str"],[2120,"std::fs"],[2121,"polars_core::datatypes::dtype"],[2122,"polars_core::series"],[2123,"polars_utils::aliases"],[2124,"polars_io::csv::write::writer"],[2125,"polars_io::csv::write::options"],[2126,"core::num::nonzero"],[2127,"polars_io::file_cache::entry"],[2128,"polars_io::ipc::ipc_stream"],[2129,"polars_io::ipc::write"],[2130,"futures_io::if_std"],[2131,"polars_io::ipc::ipc_file"],[2132,"polars_io::ipc::ipc_reader_async"],[2133,"polars_arrow::io::ipc::read::file"],[2134,"polars_utils::mmap::private"],[2135,"polars_arrow::array::struct_"],[2136,"polars_arrow::array"],[2137,"polars_arrow::datatypes"],[2138,"polars_arrow::datatypes::field"],[2139,"polars_arrow::array::growable::structure"],[2140,"polars_arrow::array::struct_::mutable"],[2141,"polars_arrow::bitmap::immutable"],[2142,"polars_arrow::scalar"],[2143,"polars_arrow::array::struct_::iterator"],[2144,"polars_arrow::bitmap::utils::iterator"],[2145,"polars_arrow::bitmap::utils::zip_validity"],[2146,"polars_parquet::parquet::metadata::file_metadata"],[2147,"polars_parquet::parquet::metadata::column_order"],[2148,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2149,"core::iter::traits::exact_size"],[2150,"polars_parquet::arrow::read::statistics"],[2151,"parquet_format_safe::parquet_format"],[2152,"polars_parquet::parquet::metadata::schema_descriptor"],[2153,"polars_parquet::parquet::error"],[2154,"polars_io::parquet::read::reader"],[2155,"polars_io::parquet::read::read_impl"],[2156,"polars_io::parquet::read::options"],[2157,"polars_parquet::parquet::metadata::row_metadata"],[2158,"polars_parquet::arrow::read::deserialize::utils::filter"],[2159,"polars_io::parquet::write::writer"],[2160,"polars_io::parquet::write::batched_writer"],[2161,"polars_io::parquet::write::options"],[2162,"polars_parquet::arrow::write"],[2163,"polars_parquet::parquet::write"],[2164,"core::iter::traits::iterator"],[2165,"polars_parquet::arrow::write::file"],[2166,"std::sync::mutex"],[2167,"core::future::future"],[2168,"tokio::runtime::task::join"],[2169,"polars_core::datatypes::field"],[2170,"avro_schema::file"],[2171,"polars_io::cloud::object_store_setup"],[2172,"polars_io::csv::read::parser"],[2173,"polars_io::file_cache::cache"],[2174,"polars_io::file_cache::utils"],[2175,"polars_io::parquet::read::utils"],[2176,"polars_io::parquet::read::predicates"],[2177,"polars_io::parquet::read::mmap"],[2178,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEjDj21020`2220102102211020101021020222`21021021021``0101210210210210211GfGd1`Gh2Gj0`21223133``2232223223300`00223332232112323233322Dh4234230142301420000304230423042030142301423042301423014233300044422203042301423142030423014230142030423042301423014230142301420000``Ij0``````IfIh2``01IbId324Hd00I`Hn24365710243657`443657436574365743``34361024365710243657436571024365743343657444333666555777424365710243655744436574`410243657102436574443442555103444344444`43436574443657310243657102436574310243657410243657443343344443443444344444434433Jj`0`00`0000000000000`00AG`AGbAGd32103210321032103321032103`210332103210321032103AGf00`Jf000000000`0000``000000000Kj```000``KfKh21Kb0Kd324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```L`00000`0`000000000```````````Mb0LlLnM`3LbLd0MlMd3MnMj4Lf987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:7434621554697:46987:74362150987:4362150987:4362150987:4362150987:4625215144468468468807`Nl`0```Nd1NfNjNh342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001K`0`0`00000000000Hh01111````Ob00000000Oj10111111001010111110101110110010111110011111111111111111111111111010110111110100000000000111``````A@nAAb1011111110101`0010010010101111000111110110101101ABj`00````00ABh1`ABbABfABd21340213421343434402134021343402134343334442103402134121340213402134003`020213210213422134021340213402134213021342212121212121```ACh`0`00````0`00`ACf1ACjAClACnAD`ACbACd16754320167543267543267543267543266672016754320167543267543220167543220675432666777555444333222016754320167543220675432016754320167543222622126675432166754326016754320167543254301675432016754321111060``````````AE`0000000`00AEd1111`11`````AEjAEl`Hf21212121211212121212022121222221212102121121AEh233332323232322```AfAl10111`````````````AFd``0`AFb0`0AFfAFh321032222310321032103221033332AFj21402140214214321433321432143214342143AFl`00000000000`0000AFn00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{h}}g}{{A`{eEl}}}{}{}{{Fn{{b{hc}}}{{Fl{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{h}}c}{{A`{nEl}}}Gb}```````````````````````````````````````````````````````{{bd}f}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{b{b{hc}}}f{}}0000{bf}0000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}{{{b{{Fh{G`}}}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Ih}1{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{J`Ih}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Ib{Bl{Jb}}}{{Aj{{Hd{Jd}}}}}}`{bC`}0000000{{{b{hIb}}{b{Jf}}}f}{{}c{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{J`}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jh}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Jb}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJj}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJj}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jj}}}Jh}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jj}}}}}}{{}c{}}000{Jj{{Aj{Jl}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}0004444````{{bd}f}>={{{b{Jf}}}Jf}{{b{b{hc}}}f{}}{bf}{{}Jf}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{{Jn{Jh}}}}}Jh}{{{b{Jf}}{b{hAn}}}B`}{cc{}}{{{b{Jf}}}n}{{{b{Jf}}}Hl}{{{b{Df}}AdAd}Jh}{{{b{K`}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}{{}c{}}{bc{}}{c{{A`{e}}}{}{}}{{{b{K`}}{b{Ib}}}{{Aj{Jf}}}}{{}{{A`{c}}}{}}{bC`}5{{JfHl}Jf}`````````{{bd}f}00`{{{Kb{c}}{b{D`}}}{{Aj{{Kd{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{b{b{hc}}}f{}}00{bf}00``{{}Kf}{{}Kh}{{}Kj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kf}}}Ab}{c{{A`{Kh}}}Ab}{c{{A`{Kj}}}Ab}{nf}0000{{{b{Kf}}{b{Kf}}}Ad}{{{b{Kh}}{b{Kh}}}Ad}{{{b{Kj}}{b{Kj}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Kb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Kd{c}}}}}{{Aj{f}}}Bf}``{{{b{Kf}}{b{hAn}}}B`}{{{b{Kh}}{b{hAn}}}B`}{{{b{Kj}}{b{hAn}}}B`}{cc{}}0000{{{b{Kf}}{b{hc}}}fBb}{{{b{Kh}}{b{hc}}}fBb}{{{b{Kj}}{b{hc}}}fBb}{{{Kb{c}}Ad}{{Kb{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Kb{c}}n}{{Kb{c}}}Bf}{c{{Kb{c}}}Bf}````{{{b{Kf}}c}A`Bn}{{{b{Kh}}c}A`Bn}{{{b{Kj}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Kb{c}}Kl}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Db}}}{{Kb{c}}}Bf}0{{{Kb{c}}{Bl{n}}}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Ad}}}{{Kb{c}}}Bf}{{{Kb{c}}Db}{{Kb{c}}}Bf}0{{{Kb{c}}G`}{{Kb{c}}}Bf}{{{Kb{c}}Kj}{{Kb{c}}}Bf}15{{{b{h{Kd{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kn}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{L`}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{L`}}}{{Aj{Jd}}}}0{bC`}{{{b{L`}}Kn}f}{{{b{L`}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Lb{c}}}}}{{Aj{Cf}}}Bd}{{{Ld{c}}{b{D`}}}{{Aj{{Lf{c}}}}}Bf}{{{Ld{c}}{b{D`}}}{{Aj{{`{c}}}}}{LhEhLj}}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{{b{Mb}}}Mb}{{b{b{hc}}}f{}}000{bf}000`{{{b{Md}}{Bl{{b{Mf}}}}}{{Aj{Mh}}}}{{{b{Md}}{Bl{{b{Mf}}}}LnAd}{{Aj{Ah}}}}{{}Mj}{{}Ln}{{}M`}{{}Mb}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Ll}}}Ab}{c{{A`{M`}}}Ab}{c{{A`{Mb}}}Ab}{nf}0000000000{{{b{Ll}}{b{Ll}}}Ad}{{{b{M`}}{b{M`}}}Ad}{{{b{Mb}}{b{Mb}}}Ad}{{b{b{c}}}Ad{}}00000{{{Ml{c}}}{{Aj{Ah}}}Hh}{{{Lb{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Ld{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lf{c}}}}}{{Aj{f}}}Bf}{{{Ml{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Ll}}{b{hAn}}}B`}{{{b{M`}}{b{hAn}}}B`}{{{b{Mb}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Md}}}}{{{b{Ll}}{b{hc}}}fBb}{{{b{M`}}{b{hc}}}fBb}{{{b{Mb}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{Ml{c}}{Bl{Jb}}}{{Ml{c}}}Hh}{{{b{Md}}}{{Aj{Mf}}}}{c{{Ml{c}}}Hh}{c{{Lb{c}}}Bd}{c{{Mn{c}}}Bf}{{}Mj}{c{{Ld{c}}}Bf}{c{{Ld{c}}}{LhEhLj}}{{{b{h{Ml{c}}}}}{{Aj{N`}}}Hh}{{{b{h{Lb{c}}}}}{{Aj{D`}}}Bd}{{{b{Ll}}c}A`Bn}{{{b{M`}}c}A`Bn}{{{b{Mb}}c}A`Bn}{{{Ml{c}}Ad}{{Ml{c}}}Hh}{{{Lb{c}}Ad}{{Lb{c}}}Bd}{bc{}}000{{{b{M`}}c}{{Ld{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{Ml{c}}{Bl{{Dd{Db}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{Db}}}}}{{Lb{c}}}Bd}{{{Mn{c}}Nb}{{Mn{c}}}{}}{{{Ld{c}}Nb}{{Ld{c}}}Bf}{{{Mn{c}}{Bl{Mb}}}{{Mn{c}}}{}}{{Mj{Bl{Mb}}}Mj}{{{Ld{c}}{Bl{Mb}}}{{Ld{c}}}Bf}{{MjJb}Mj}{{{Ml{c}}{Bl{{Dd{Jl}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{n}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{n}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Ml{c}}{Bl{{Dd{n}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{n}}}}}{{Lb{c}}}Bd}{{Ln{Bl{{Dn{{Fh{J`}}}}}}}Ln}{{{Ml{c}}{Bl{j}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{j}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{j}}}}}}{{Lnc}Ln{{Gn{{Bl{n}}}}}}{{{b{h{Lf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{M`}}Ahc}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nd}}}Nd}{{b{b{hc}}}f{}}{bf}{{}Nd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nd}}}Ab}{nf}0000{{{b{Nd}}{b{Nd}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nh{c}}}{{Aj{Ah}}}Hh}{{{b{Nd}}{b{hAn}}}B`}{cc{}}0000{{{b{Nd}}{b{hc}}}fBb}{{{Nh{c}}{Bl{Kl}}}{{Nh{c}}}Hh}{{}n}0000{{}c{}}0000`{c{{Nf{c}}}Bf}{c{{Nj{c}}}Bf}{c{{Nh{c}}}Hh}{{{b{{Fh{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{Nd}}c}A`Bn}{{{Nh{c}}Ad}{{Nh{c}}}Hh}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{Nh{c}}Kl}{{Nh{c}}}Hh}5{{{Nf{c}}Nl}{{Nf{c}}}Bf}{{{Nh{c}}Nl}{{Nh{c}}}Hh}{{{Nh{c}}{Bl{{Dd{J`}}}}}{{Nh{c}}}Hh}{{{Nh{c}}Hl}{{Nh{c}}}Hh}{{{Nh{c}}{b{D`}}}{{Nh{c}}}Hh}{{{b{h{Nj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{{{b{K`}}}{{b{{Fh{G`}}}}}}{n{{b{hc}}}{}}{nf}{{{b{hc}}}K`Hh}{cc{}}{{}n}{{}c{}}{K`Nn}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{Jd}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{Kl}}}{{Aj{D`}}}O`}``{{bd}f}{{{b{Ob}}n}{{E`{ObOb}}}}{Ob{{Dn{Od}}}}{cOb{{Hb{}{{H`{f}}}}}}{cOb{{Hb{}{{H`{{Bl{f}}}}}}}}{{Ofc}Ob{{Hb{}{{H`{{Bl{f}}}}}}}}{{Ofc}Ob{{Hb{}{{H`{f}}}}}}{{{b{Ob}}}{{b{Oh}}}}{{{b{hOb}}}{{b{hOh}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{Ob{{Hj{Od}}}}{{{b{Ob}}n}Ad}{{{b{Ob}}}Ob}{{b{b{hc}}}f{}}{bf}{{{Oj{c}}}{{Aj{n}}}Hh}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ob}}}{{b{Of}}}}{{{b{Ob}}{b{{b{Od}}}}}Ad}{{{b{Ob}}{b{Ob}}}Ad}{{{b{Ob}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}}{{Aj{Ah}}}Hh}{{{b{Ob}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0{OnOb}{A@`Ob}{c{{Aj{{Oj{Jd}}}}}{{Gn{Jb}}}}{{nOf}Ob}{{{b{Of}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{}n}0{{}c{}}0{Ob{{E`{{Dd{Ol}}{Dd{{Hj{Od}}}}{Bl{A@b}}}}}}{{{b{Ob}}}}{{{b{Ob}}}{{A@j{{Dd{{Hj{A@d}}}}A@fA@h}}}}{{{b{Ob}}}n}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{c{{Oj{c}}}Hh}{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}Ob}{OfOb}{{Ofn}Ob}{{{b{Ob}}}Ob}{{{b{hOb}}{Bl{A@b}}}f}{{{b{hOb}}nn}f}0{{bnn}c{}}011{{Obnn}Ob}0{{{b{Ob}}n}{{E`{{Hj{Od}}{Hj{Od}}}}}}0{{{b{hOb}}}{{Bl{A@b}}}}{{{b{Ob}}}{{Hj{Od}}}}{bc{}}{{{b{Ob}}{b{Ob}}}A@b}{{{b{Ob}}b}A@b}10{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}{{A`{ObA@l}}}}{bC`}0{{{b{Ob}}}{{Bl{{b{A@b}}}}}}0{{{b{Ob}}}{{b{{Fh{{Hj{Od}}}}}}}}{{{b{Ob}}}A@f}{{}c{}}0{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{n}}}{{Oj{c}}}Hh}0{{{Oj{c}}{Bl{e}}}{{Oj{c}}}Hh{{Gn{Jb}}}}{{{Oj{c}}{Bl{{Dn{Hf}}}}}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{{Dn{{Fh{J`}}}}}}}{{Oj{c}}}Hh}4{{{Oj{c}}{Bl{{b{hj}}}}}{{Oj{c}}}Hh}{{{Oj{c}}Hl}{{Oj{c}}}Hh}{{{Oj{c}}{b{D`}}}{{Oj{c}}}Hh}{{{b{Ob}}{Bl{A@b}}}{{Hj{Od}}}}{{Ob{Bl{A@b}}}Ob}0``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{A@n}}}A@n}{{b{b{hc}}}f{}}{bf}{{{b{A@n}}n}AA`}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Ol}}c}{{A`{AAbA@l}}}{{AAf{}{{H`{{b{AAd}}}}}}}}`{nf}0{{{b{AAb}}{b{AAb}}}Ad}{{{b{AAb}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@n}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AAhAAb}1{{}n}0{{}c{}}0{{{b{A@n}}}{{b{{Bl{{Dd{AAj}}}}}}}}```````{{{b{A@n}}}{{b{AAl}}}}`{bc{}}{c{{A`{e}}}{}{}}0{AAn{{A`{A@nAB`}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{ABb{c}}n}{{Aj{ABd}}}Hh}{{ABfn}{{Aj{ABd}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{ABb{c}}{b{Cf}}}{{Aj{{ABb{c}}}}}Hh}{{ABf{b{Cf}}}{{Aj{ABf}}}}{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{b{b{hc}}}f{}}0{bf}0{{}ABj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABh}}}Ab}{c{{A`{ABj}}}Ab}{nf}0000{{{b{ABh}}{b{ABh}}}Ad}{{{b{ABj}}{b{ABj}}}Ad}{{b{b{c}}}Ad{}}00000{{{ABb{c}}}{{Aj{Ah}}}Hh}{ABf{{Aj{Ah}}}}{{{b{ABd}}n}Ad}{{{b{ABh}}{b{hAn}}}B`}{{{b{ABj}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABl}}}{{Aj{ABf}}}}{{{b{h{ABb{c}}}}}{{Aj{{b{ABl}}}}}Hh}{{{b{hABf}}}{{Aj{{b{ABl}}}}}}{{{b{ABh}}{b{hc}}}fBb}{{{b{ABj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{ABd}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jl}}}}}}{Bl{{b{j}}}}}Ah}`{c{{ABb{c}}}Hh}{{{b{hABd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{ABb{c}}}}}{{Aj{n}}}Hh}{{{b{hABf}}}{{Aj{n}}}}`{{{ABb{c}}ABj}{{ABb{c}}}Hh}{{ABfABj}ABf}{{{b{ABd}}}{{b{N`}}}}{{{b{h{ABb{c}}}}}{{Aj{N`}}}Hh}{{{b{hABf}}}{{Aj{N`}}}}{{{b{ABh}}c}A`Bn}{{{b{ABj}}c}A`Bn}{{{ABb{c}}Ad}{{ABb{c}}}Hh}0{{ABfAd}ABf}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000054`{{}c{}}0000{{{ABb{c}}{Bl{{Dd{Db}}}}}{{ABb{c}}}Hh}{{{ABb{c}}{Bl{{Dd{Jl}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{Jl}}}}}ABf}{{{ABb{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{J`{Dn{Df}}}}}}}ABf}{{{ABb{c}}{Bl{{Dn{Hf}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dn{Hf}}}}}ABf}{{{ABb{c}}{Bl{{Dd{n}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{n}}}}}ABf}{{{ABb{c}}{Bl{j}}}{{ABb{c}}}Hh}{{ABf{Bl{j}}}ABf}{{{ABb{c}}{Bl{{E`{nn}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{nn}}}}}ABf}{{{Bl{{b{Hf}}}}{b{ABn}}{b{Cf}}}{{Aj{Ad}}}}{{{Dd{{E`{{b{AAd}}Nn}}}}Ol{Bl{AC`}}}{{Aj{{Hj{Od}}}}}}````````````````{{bd}f}00000{{{ACb{c}}{b{D`}}}{{Aj{{ACd{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{b{b{hc}}}f{}}00000{bf}00000``{{}ACf}{{}ACh}{{}AD`}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ACf}}}Ab}{c{{A`{ACh}}}Ab}{c{{A`{ACj}}}Ab}{c{{A`{ACl}}}Ab}{c{{A`{ACn}}}Ab}{c{{A`{AD`}}}Ab}`{nf}00000009{{{b{{ACd{c}}}}{b{Ah}}}{{`{{ADd{}{{H`{{Aj{{ADb{A@l}}}}}}}}}}}Bf}{{{b{ACf}}{b{ACf}}}Ad}{{{b{ACh}}{b{ACh}}}Ad}{{{b{ACj}}{b{ACj}}}Ad}{{{b{ACl}}{b{ACl}}}Ad}{{{b{ACn}}{b{ACn}}}Ad}{{{b{AD`}}{b{AD`}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{ACd{c}}}}}{{Aj{Kn}}}Bf}{{{ACb{c}}{b{hAh}}}{{Aj{Kn}}}Bf}{{{b{ACf}}{b{hAn}}}B`}{{{b{ACh}}{b{hAn}}}B`}{{{b{ACj}}{b{hAn}}}B`}{{{b{ACl}}{b{hAn}}}B`}{{{b{ACn}}{b{hAn}}}B`}{{{b{AD`}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}AD`}{{{b{{ACd{c}}}}}{{b{{ADh{{ADf{c}}}}}}}Bf}{{{b{ACf}}{b{hc}}}fBb}{{{b{ACh}}{b{hc}}}fBb}{{{b{ACj}}{b{hc}}}fBb}{{{b{ACl}}{b{hc}}}fBb}{{{b{ACn}}{b{hc}}}fBb}{{{b{AD`}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{AD`}}}Ad}0```{c{{ACb{c}}}{BfBf}}``{{{b{ACf}}c}A`Bn}{{{b{ACh}}c}A`Bn}{{{b{ACj}}c}A`Bn}{{{b{ACl}}c}A`Bn}{{{b{ACn}}c}A`Bn}{{{b{AD`}}c}A`Bn}{{{ACb{c}}Ad}{{ACb{c}}}Bf}`{bc{}}00000{{{b{ACf}}c}{{ACb{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{G`{{Aj{ACj}}}}{ADj{{Aj{ACl}}}}{ADl{{Aj{ACn}}}}{bC`}0000000{{}c{}}0000000{{{ACb{c}}ACh}{{ACb{c}}}Bf}{{{ACb{c}}{Bl{n}}}{{ACb{c}}}Bf}0{{{ACb{c}}AD`}{{ACb{c}}}Bf}{{{b{h{ACd{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ACf}}Ahc}{{Aj{f}}}Bf}{{{b{{ACd{c}}}}{Dd{{ADb{A@l}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Il}}e{b{g}}n}{{Aj{f}}}{{Gn{J`}}}{{Hb{}{{H`{c}}}}}{CbLjADn}}`{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Jb}}}}}}}}{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Jb}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{Il}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{Il}}}}{{{b{Il}}}Jb}``{{{b{AE`}}c}{}AEb}{{{b{AE`}}c}{}{AEbLj}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AE`}}}}{{}n}{{}c{}}{{{b{AEd}}}Kn}{{{b{AE`}}c}AEf{AEbLj}}{{{b{AE`}}e}{{AEf{c}}}Lj{{Fn{}{{Fl{c}}}}Lj}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{ADje}{}AEb{{Fn{}{{Fl{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AEh}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{b{b{hc}}}f{}}0{bf}0{{{b{AEl}}}{{b{{Fh{AEj}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEj}}}Ab}{c{{A`{AEl}}}Ab}{nf}0{{{b{AEj}}}{{b{Jh}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jl}}}}{{{b{AEj}}}{{b{J`}}}}{{{b{AEj}}{b{hAn}}}B`}{{{b{AEl}}{b{hAn}}}B`}{cc{}}0{JlAEj}{AEnAEj}{{{b{AEj}}}{{Bl{{b{Jl}}}}}}00{{{b{AEl}}{b{Df}}}{{Aj{{b{AEj}}}}}}{{}n}0{{}c{}}0{{{b{Hf}}}{{Bl{{Dd{J`}}}}}}{{AEn{Bl{Jl}}{Bl{Jl}}{Bl{Jl}}}AEj}{{Hl{Dd{AEj}}{Bl{n}}}AEl}{{{b{AEj}}}{{Bl{n}}}}{{{b{AEl}}}{{Bl{n}}}}{{{b{AEl}}}{{b{Hl}}}}{{{b{AEj}}c}A`Bn}{{{b{AEl}}c}A`Bn}{{{b{AEh}}{b{AEl}}}{{Aj{Ad}}}}{{{b{hAEl}}{b{{Fh{n}}}}}f}=={{{b{AEj}}}{{Bl{Jl}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAEl}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{K`}}}{BdHhAF`}}{{{Bl{{b{{Fh{J`}}}}}}{b{D`}}{Bl{{b{{Fh{Jl}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AFb}}}AFb}{{b{b{hc}}}f{}}{bf}{{}AFd}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AFb}}{b{hAn}}}B`}{cc{}}00{AFfAFd}{AFhAFd}{NnAFd}3{{{b{AFj}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFf}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFh}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFd}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFj}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFf}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFh}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFd}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFj}}}{{Aj{n}}}}{{{b{AFf}}}{{Aj{n}}}}{{{b{AFh}}}{{Aj{n}}}}{{{b{AFd}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AFb}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AFd}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AFd}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Fh{G`}}}}}{{Bl{AFl}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}};:9>````76432{{{b{AFn}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Ff{n}}}AFn}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"COj","p":[[1,"reference"],[5,"Private",2074],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2075],[5,"HiveOptions",0,2075],[1,"usize"],[6,"Result",2076],[10,"Deserializer",2077],[1,"bool"],[10,"SerReader",1934,2078],[5,"DataFrame",2079],[8,"PolarsResult",2080],[10,"SerWriter",1934,2078],[5,"Formatter",2081],[8,"Result",2081],[10,"Hasher",2082],[10,"Read",2083],[10,"Write",2083],[10,"ArrowReader",0,2078],[8,"RecordBatch",2084],[6,"Option",2085],[10,"Serializer",2086],[5,"TypeId",2087],[10,"WriteDataFrameToFile",0,2078],[5,"AvroReader",86,2088],[8,"ArrowSchema",2089],[10,"Seek",2083],[6,"AvroCompression",86],[5,"AvroWriter",86,2090],[5,"Error",2081],[8,"Schema",2091],[5,"String",2092],[5,"Vec",2093],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",153,2094],[10,"ObjectStore",2095],[5,"Arc",2096],[1,"tuple"],[5,"PolarsObjectStore",153,2097],[5,"Path",2098],[10,"AsyncWrite",2099],[10,"Unpin",2100],[5,"CloudWriter",153,2101],[5,"Error",2102],[10,"Command",2103],[8,"Result",2102],[5,"Url",2104],[5,"Bytes",2105],[5,"Range",2106],[1,"slice"],[5,"ObjectMeta",2095],[17,"Output"],[10,"FnOnce",2107],[1,"u8"],[10,"VarInt",2108],[6,"AmazonS3ConfigKey",227,2109],[6,"AzureConfigKey",227,2110],[6,"GoogleConfigKey",227,2111],[6,"CloudType",227],[10,"AsRef",2112],[10,"Into",2112],[17,"Item"],[10,"IntoIterator",2113],[5,"CsvReader",416,2114],[10,"PhysicalIoExpr",1866],[10,"MmapBytesReader",1284],[5,"Box",2115],[8,"SchemaRef",2091],[5,"OwnedBatchedCsvReader",416,2116],[5,"BatchedCsvReader",416,2116],[5,"CsvReadOptions",416,2117],[5,"CsvParseOptions",416,2117],[6,"CsvEncoding",416,2117],[6,"CommentPrefix",416,2117],[6,"NullValues",416,2117],[5,"Path",2118],[10,"Fn",2107],[5,"PlSmallStr",2119],[5,"PathBuf",2118],[5,"File",2120],[5,"SchemaInferenceResult",754],[6,"DataType",2121],[6,"Buffer",677],[5,"Series",2122],[8,"PlHashSet",2123],[6,"ReaderBytes",1284],[5,"CsvWriter",781,2124],[5,"BatchedWriter",781,2124],[5,"CsvWriterOptions",781,2125],[5,"SerializeOptions",781,2125],[6,"QuoteStyle",781,2125],[8,"NonZeroUsize",2126],[1,"u64"],[5,"FileCacheEntry",926,2127],[5,"IpcStreamReader",947,2128],[5,"IpcWriter",947,2129],[5,"BatchedWriter",947,2129],[10,"AsyncWrite",2130],[10,"Send",2100],[5,"IpcScanOptions",947,2131],[5,"IpcReadOptions",947,2132],[5,"IpcWriterOptions",947,2129],[6,"IpcCompression",947,2129],[5,"IpcReaderAsync",947,2132],[5,"FileMetadata",2133],[1,"i64"],[5,"IpcStreamWriterOption",947,2128],[5,"IpcReader",947,2131],[5,"IpcStreamWriter",947,2128],[8,"ArrowSchemaRef",2089],[5,"CompatLevel",2121],[5,"JsonWriterOptions",1186],[5,"JsonWriter",1186],[5,"JsonReader",1186],[5,"BatchedWriter",1186],[6,"JsonFormat",1186],[5,"MemSlice",2134],[10,"BufRead",2083],[5,"StructArray",1308,2135],[10,"Array",2136],[6,"ArrowDataType",2137],[10,"Any",2087],[5,"JsonLineReader",1308],[5,"Field",2138],[5,"GrowableStruct",2139],[5,"MutableStructArray",2140],[5,"Bitmap",2141],[10,"Scalar",2142],[5,"StructValueIter",2143],[5,"BitmapIter",2144],[6,"ZipValidity",2145],[6,"PolarsError",2080],[5,"FileMetadata",1415,2146],[6,"ColumnOrder",2147],[5,"ParquetStatistics",1415],[5,"ColumnChunkMetadata",2148],[10,"ExactSizeIterator",2149],[5,"MutableStatistics",2150],[5,"KeyValue",2151],[5,"SchemaDescriptor",2152],[5,"FileMetaData",2151],[6,"ParquetError",2153],[5,"ParquetReader",1468,2154],[5,"BatchedParquetReader",1468,2155],[5,"ParquetAsyncReader",1468,2154],[5,"ParquetOptions",1468,2156],[6,"ParallelStrategy",1468,2156],[8,"FileMetadataRef",1415],[5,"RowGroupMetadata",2157],[6,"Filter",2158],[5,"ParquetWriter",1612,2159],[5,"BatchedWriter",1612,2160],[5,"ParquetWriteOptions",1612,2161],[6,"ParquetCompression",1612,2161],[5,"GzipLevel",1612,2161],[5,"BrotliLevel",1612,2161],[5,"ZstdLevel",1612,2161],[5,"StatisticsOptions",1612,2162],[8,"RowGroupIterColumns",1612,2163],[10,"Iterator",2164],[5,"FileWriter",2165],[5,"Mutex",2166],[1,"u32"],[1,"i32"],[10,"Sync",2100],[5,"RuntimeManager",1844],[10,"Future",2167],[10,"GetSize",1844],[5,"JoinHandle",2168],[10,"StatsEvaluator",1866],[5,"ColumnStats",1866],[5,"BatchStats",1866],[5,"Field",2169],[10,"Sized",2100],[6,"DynByteSourceBuilder",1956],[6,"DynByteSource",1956],[5,"MemSliceByteSource",1956],[5,"ObjectStoreByteSource",1956],[10,"ByteSource",1956],[6,"SupportedCompression",2037],[6,"SplitSlicePosition",2055],[5,"Utf8Field",677],[5,"CategoricalField",677],[5,"DatetimeField",677],[15,"Datetime",751]],"r":[[0,2078],[1,2075],[2,2075],[3,2078],[4,2078],[5,2078],[87,2088],[88,2090],[89,2170],[153,2094],[154,2101],[155,2097],[156,2097],[165,2171],[194,2094],[206,2171],[230,2109],[235,2110],[259,2111],[418,2116],[419,2117],[420,2117],[421,2117],[422,2117],[423,2114],[427,2117],[428,2116],[474,2172],[475,2172],[556,754],[782,2124],[783,2124],[784,2125],[788,2125],[789,2125],[926,2173],[927,2174],[928,2127],[935,2173],[937,2174],[947,2129],[948,2129],[949,2132],[950,2131],[951,2132],[952,2131],[953,2128],[954,2128],[955,2128],[956,2129],[957,2129],[1309,2135],[1415,2146],[1433,2150],[1469,2155],[1472,2156],[1473,2154],[1474,2156],[1475,2154],[1555,2175],[1610,2176],[1611,2177],[1612,2160],[1614,2161],[1616,2161],[1619,2161],[1620,2161],[1621,2159],[1622,2163],[1624,2162],[1627,2161],[1934,2078],[1935,2078],[1936,0],[1944,1836],[1945,2178],[1946,2178],[1947,2178],[1948,2178],[1952,2178],[1953,2178],[1954,2178]],"b":[[1313,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1314,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1315,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1316,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1336,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1337,"impl-PartialEq-for-StructArray"],[1343,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1344,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1364,"impl-Array-for-StructArray"],[1365,"impl-StructArray"],[1368,"impl-Array-for-StructArray"],[1369,"impl-StructArray"],[1381,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1382,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1383,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1384,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1392,"impl-StructArray"],[1393,"impl-Array-for-StructArray"],[1409,"impl-Array-for-StructArray"],[1410,"impl-StructArray"],[1994,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[1995,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[1996,"impl-From%3CMemSlice%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB0GuAAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnAA8AuQACAL8AAwDFAAIAzQAAANAAAADVAA4A6gABAPYAAAACAQEABQEBABsBEAAvATYAawEDAHABCAB+ARwAowEEAKwBAQCwASoA3QE4ABcCBAAjAgAAJQIRAEACAABCAgIASQIrAHYCCACAAgcAmAIAAKYCEgC6AhcA1gIEAN8CIAABAwEABQMAAAcDBgAPAwAAFwMXADEDIQBUAwAAVgMCAF4DAgBiAwAAZAMFAHADAgB3AwMAfAMWAJ8DBwCoAwIArAMBALADBAC2AwAAuQMAALwDAAC+AwAAwQMDAMYDIwDrAzYAIwQDADIEDgBOBAYAVwQ1AI8EAQCVBAEAmQQAAJwEAACfBAEAogQBAKkEJADPBAAA1QQAANcEBADjBBkA/wQBAAUFAQAIBQgAEgUAABQFCQAfBQEAIgUJAC0FDQA8BQEAQAUBAEMFAABFBQIASwUAAE0FAABVBQAAVwUCAF0FAQBgBQ0AbwUBAHIFAAB1BQEAeQUJAIQFAACJBQAAiwUHAJYFAwCcBQQAogUAAKQFAQCyBQIAtgUDALsFAQC+BQAAwQUAAMMFAADHBQ4A1wUlAAIGCQARBgAAEwYCABcGAAAZBgEAHAYBAB8GAgAjBhIAOAYFAD8GBQBGBgAASAYBAEsGAwBQBgAAUgYBAFUGAABXBgEAWgYBAF0GKACIBjsAxgYFANQGDwDsBgEA7wYBAPIGAAD0BgUA/AYpACsHAQAuBwAANQcCADkHBAA/BwEAQgcAAEQHBgBNBwQAUwcJAF4HBwBoBwIAcwcBAH0HAwCEBw0AkwcAAJUHAACZBw0AqAcBAKsHAACtBxoAywcCANAHDgDjBxMA+AcDAP0HAgABCAAABAgNABMIAAAWCAQA"}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPGPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","","","try_to_compact_string","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","get_output","init","","","into","","","new","","serialize","to_owned","try_from","","","try_into","","","try_serialize","","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_full_days","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1621,"polars_lazy::dsl::AggExpr"],[1628,"polars_lazy::dsl::BooleanFunction"],[1631,"polars_lazy::dsl::Expr"],[1666,"polars_lazy::dsl::FunctionExpr"],[1711,"polars_lazy::dsl::StringFunction"],[1731,"polars_lazy::dsl::TemporalFunction"],[1733,"polars_lazy::dsl::binary"],[1754,"polars_lazy::dsl::cat"],[1755,"polars_lazy::dsl::dt"],[1811,"polars_lazy::dsl::function_expr"],[2028,"polars_lazy::dsl::function_expr::BooleanFunction"],[2031,"polars_lazy::dsl::function_expr::FunctionExpr"],[2076,"polars_lazy::dsl::function_expr::StringFunction"],[2096,"polars_lazy::dsl::function_expr::TemporalFunction"],[2098,"polars_lazy::dsl::function_expr::cat"],[2100,"polars_lazy::dsl::function_expr::pow"],[2104,"polars_lazy::dsl::function_expr::rolling"],[2138,"polars_lazy::dsl::function_expr::rolling_by"],[2171,"polars_lazy::dsl::function_expr::trigonometry"],[2215,"polars_lazy::dsl::functions"],[2290,"polars_lazy::dsl::python_udf"],[2352,"polars_lazy::dsl::string"],[2413,"polars_lazy::dsl::udf"],[2419,"polars_lazy::frame"],[2903,"polars_lazy::frame::pivot"],[2905,"polars_lazy::prelude"],[3528,"polars_lazy::prelude::DslPlan"],[3579,"polars_lazy::prelude::LiteralValue"],[3582,"dyn_clone::sealed"],[3583,"polars_plan::dsl::meta"],[3584,"polars_plan::dsl::expr"],[3585,"polars_plan::dsl::struct_"],[3586,"polars_utils::pl_str"],[3587,"alloc::sync"],[3588,"polars_error"],[3589,"core::result"],[3590,"polars_plan::dsl::selector"],[3591,"core::convert"],[3592,"polars_plan::dsl::array"],[3593,"polars_plan::dsl::list"],[3594,"polars_plan::dsl::expr_dyn_fn"],[3595,"polars_core::series"],[3596,"core::option"],[3597,"core::ops::function"],[3598,"core::marker"],[3599,"polars_plan::plans::visitor"],[3600,"polars_plan::dsl::function_expr"],[3601,"polars_core::datatypes::dtype"],[3602,"polars_core::chunked_array::ops::sort::options"],[3603,"polars_plan::dsl::function_expr::schema"],[3604,"polars_core::datatypes::field"],[3605,"core::any"],[3606,"alloc::vec"],[3607,"polars_plan::dsl::binary"],[3608,"core::clone"],[3609,"polars_plan::dsl::udf"],[3610,"polars_core::chunked_array::cast"],[3611,"polars_plan::dsl::cat"],[3612,"polars_plan::dsl::arity"],[3613,"polars_plan::dsl::function_expr::boolean"],[3614,"polars_plan::dsl::function_expr::cat"],[3615,"polars_plan::dsl::function_expr::datetime"],[3616,"polars_plan::dsl::function_expr::pow"],[3617,"polars_plan::dsl::function_expr::strings"],[3618,"polars_plan::dsl::function_expr::struct_"],[3619,"polars_plan::dsl::functions::temporal"],[3620,"polars_plan::dsl::options"],[3621,"core::iter::traits::collect"],[3622,"polars_lazy::dsl::eval"],[3623,"polars_core::utils"],[3624,"polars_time::windows::duration"],[3625,"polars_time::windows::group_by"],[3626,"polars_core::datatypes::time_unit"],[3627,"serde::de"],[3628,"polars_plan::plans"],[3629,"polars_core::series::ops"],[3630,"polars_plan::dsl::dt"],[3631,"polars_lazy::dsl::list"],[3632,"polars_arrow::legacy::kernels::ewm"],[3633,"polars_core::chunked_array::ops"],[3634,"core::fmt"],[3635,"polars_plan::plans::apply"],[3636,"polars_ops::frame::join::iejoin"],[3637,"polars_plan::dsl::function_expr::business"],[3638,"polars_plan::dsl::function_expr::range"],[3639,"polars_plan::dsl::function_expr::list"],[3640,"polars_plan::dsl::function_expr::array"],[3641,"polars_plan::dsl::function_expr::binary"],[3642,"alloc::string"],[3643,"polars_plan::plans::options"],[3644,"polars_schema::schema"],[3645,"core::hash"],[3646,"polars_ops::series::ops::interpolation::interpolate"],[3647,"polars_ops::series::ops::is_between"],[3648,"polars_plan::dsl::name"],[3649,"polars_plan::plans::lit"],[3650,"polars_core::utils::supertype"],[3651,"polars_plan::dsl::python_udf"],[3652,"polars_utils::idx_vec"],[3653,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3654,"polars_ops::series::ops::rank"],[3655,"polars_time::group_by::dynamic"],[3656,"polars_core::chunked_array::ops::rolling_window"],[3657,"polars_core::datatypes"],[3658,"polars_core::chunked_array"],[3659,"polars_time::chunkedarray::rolling_window"],[3660,"polars_core::chunked_array::ops::search_sorted"],[3661,"serde::ser"],[3662,"polars_core::series::series_trait"],[3663,"polars_plan::dsl::string"],[3664,"polars_ops::chunked_array::list::to_struct"],[3665,"compact_str"],[3666,"polars_ops::series::ops::business"],[3667,"polars_arrow::legacy::kernels::time"],[3668,"polars_plan::dsl::function_expr::rolling"],[3669,"polars_plan::dsl::function_expr::rolling_by"],[3670,"polars_plan::dsl::function_expr::trigonometry"],[3671,"polars_core::frame"],[3672,"rayon::iter"],[3673,"pyo3::types::any"],[3674,"pyo3::instance"],[3675,"polars_utils::arena"],[3676,"polars_plan::plans::ir"],[3677,"polars_plan::plans::aexpr"],[3678,"polars_plan::frame::opt_state"],[3679,"polars_plan::plans::anonymous_scan"],[3680,"polars_lazy::scan::anonymous_scan"],[3681,"polars_core::schema"],[3682,"polars_utils::index"],[3683,"polars_lazy::frame::exitable"],[3684,"polars_utils::aliases"],[3685,"polars_lazy::scan::csv"],[3686,"polars_lazy::scan::ipc"],[3687,"polars_lazy::scan::ndjson"],[3688,"polars_lazy::scan::parquet"],[3689,"polars_lazy::scan::file_list_reader"],[3690,"polars_io::cloud::options"],[3691,"polars_ops::frame::join::args"],[3692,"bitflags::iter"],[3693,"std::path"],[3694,"polars_plan::plans::ir::scan_sources"],[3695,"polars_io::options"],[3696,"polars_io::csv::write::options"],[3697,"polars_io::ipc::write"],[3698,"polars_io::json"],[3699,"polars_io::parquet::write::options"],[3700,"core::num::nonzero"],[3701,"polars_io::csv::read::options"],[3702,"chrono_tz::timezones"],[3703,"core::cmp"],[3704,"polars_core::frame::group_by::proxy"],[3705,"polars_core::datatypes::any_value"],[3706,"std::io"],[3707,"polars_io::parquet::write::writer"],[3708,"chrono::naive::datetime"],[3709,"polars_plan::dsl::functions::selectors"],[3710,"polars_plan::dsl::functions::horizontal"],[3711,"polars_plan::dsl::functions::arity"],[3712,"polars_plan::dsl"],[3713,"polars_plan::dsl::functions::range"],[3714,"polars_plan::dsl::functions::index"],[3715,"polars_plan::dsl::functions::coerce"],[3716,"polars_plan::dsl::functions::syntactic_sugar"],[3717,"polars_plan::dsl::functions::business"],[3718,"polars_plan::dsl::functions::concat"],[3719,"polars_plan::dsl::functions::correlation"],[3720,"polars_plan::dsl::functions::repeat"],[3721,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gb0Ef311555Hl6`666Gj0Gf68`8`8608``Gh91``9977192221962999999111`119499G`82`3:55::::8`9:8Hj```;4449Gl0``<<:59<7<:``<:<3Gd`288=666=5:;<==`999999959999952`616;=:;667=``;==88=688:=:=:`555:=85=855518:35=`988;=5`85Hh77>>>9>`2>;6>>>>>><`2>7>>6>7>0`>>=6>>>6`<``>>>>>><7<<`77757;>`777777`>``=<2;>7>`<`66777>6>>6666666>96`>>`>7`>;66`<<``26967FhFjFlFn?j9>BfGb8=<>9CjGnH`HbHdHf=HjHlHnAhF`hl1111??3??`AlAnj`:>0210`00`000`0`00000002102100`0`Dd;1DhDl``3`3`99Ff6358Nd8FhFjFlFn69G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNdlFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF```````AlAnj00021`0`000`0If01````>=<1Bf00?><;:972Ff5Dd5hNdlFhFjFlFnDl<G`Ef<<GbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNdlFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`DljG`EfBf0000GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj00FfAlDd4hNdlFhFjFlFnDl;G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jAn1`1```1Dl22G`EfBf0GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhj000G`00Ef00Gb00Gd00Gf00Gh00Gj00Gl00Hb00Hd00Hf00Hh00Hj00Hl00Hn00Ah00K`0j000800000l001111`An22Bf33DhFbEnKj77G`Ef06Gb0Gd0Gf0Gh0Gj0Gl0Cj0GnH`HbHdHfHhHjHlHnAhF``67`jFfAlDdAnhNdlFhFjFlFnDl<<<<<<<<<<<<<<G`Ef0Bf00000000000GbGdGfGhGjGlCj0000GnH`HbHdHfHh0HjHlHnAh0000F`Bf1`j`An101Al12FfJdBdDdDhKj88hDl::G`EfGbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj0GnH`25`FfAlDd6hNdlFhFjFlFnDl=G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`0``j0FfAlDdAnhNdlFhFjFlFnDl<G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jMnAnhEf411044444444`4`4114Al3lNd7`57`577`777777707`7Dd0Bf090209`99`191111`479``79``4799GnH`0`69;`Hb21<2<7:<<=<<1<<<44321>=<<`<`<?=<FjFn;>>>>>`>;>77>`>>`>>>`>>8`>>6>>?9<>>>>``>>>>>>>>>>>>>>>>>>>;>>Hf06?==??54DljG`>99999GbGdGfGhGjGlCj=Hd;HhHjHlHnAhAn0?0Al1j0000000201200`0120080`003Nd0`231`BfEf5333`FhFl`GnH`197863Fj3FnDl:G`89GbGdGfGhGjGlCj<;HbHdHfHhHjHlHnAhF`jDd1EfGbGdGfGhGjGlCjAlAnNd<<Ff3<2h2lFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNdlFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`Dd0j1DhEnBd3EfGbGdGfGhGjGlCjFfAl>AnhNdlFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF``hAnAl1j01200061206Ff2Dd45NdlFhFjFlFnDl9G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AJbAJdAJf2102AJhAJjAJlAJnAK`AKb0AKdAKf4AKhAKjAKlAKn3AL`528ALb1ALd11098432323570;5ALfALhALjALlALnAM`AMbAMdAMfAMhAMjAMl087;87;7;AMnAN`8ANbANdANf0?1ANhANjANlANn4ALfAO`AObAOdAOfAOhAOj:=;AOlAOnB@`B@bB@dB@f54B@h321B@jB@lB@n03721BA`0`Ed0000000000000000000``Jl000000000000000000000000000000000000000000000000000000CjGb0001111111Gj0Gf33`303`Gh41441422214244444411111444124444444222Gl055355`551Gd644463665555555355555341464466664663336363331365633446666`16366666616466364666366636666664444246`4444446`1646`33444636633333336366646331334`````AJhAJjAJlALfALhALjALlALnAM`AMbAMdAMfAMhAMjAMl087;87;7;AMnAN`8ANbANdANf0?1ANhANjANlANn4ALfAO`AObAOdAOfAOhAOj:=;AOlAOnB@`B@bB@dB@f54B@h321B@jB@lB@n03721BA`0`GdGh0`0AAf000`00000000000000000000000000000AAh000`0000000000000000000000000000AAj00000000000000`0000000000000000000000000000````Gn``````````````````````````0H``````10`````````100`1010```````10````10101`````ABfNlABl210212222102102210222222102201102102102210210210102102`A@h00000000000000000000000000000000000000000000000000000000000`F`0000`ACj00000````````0`000000```0ADfAB`AChAD`ADjADlADnAE`86658ACl77699999999087654321908765432197731877876543219876543219876543219AEb053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AFb99299843999999916475372646464;9293`9916453;992916475399999997;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;2:9876543;;9999993292:9876543;24664999999696666666464646616644969119966164919664464646966916496699`````AEj0AHhAHj0Jh3`011120``1`00111300030311111`0````3``AGn0133``20032``12``4`114211122222221`AEhOfInAF`84AGbAGdAGf:OdAGh;AHlABd<888ACn0007;:9AIf9AEj>9AId98AHh87AHj76JhAEhOfIn8AF`8AGnAGb9AGdAGf:OdAGh;AHlABd<;:98AEj8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AIf:198AId87AHh76AHj65JhAEhOfIn7AF`9AGnAGb9AGdAGf:OdAGh;AHlABd<3<<;:98AEj8765?43>21=1=<;:AIf:198AId87AHh76AHj65JhAEhOfInAF`9AGnAGbAGdAGf:OdAGh;AHlABd;;;:::999888AEj00888777666555333222111<<;::ACn:1199876AHh65AHj545?>=AIf==4<;AId;:398276Jh73AI`AEhOfInAF`;AGnAGbAGdAGf=OdAGh>AHlABd86;6;:;:9?8AEj87?65AHh54AHj43Jh?>=AIf=4<;AId;:498376225??3=?>AEhNfIn36?>=;6<00040AGn111AF`ACn5Of8=444608`=AI`AGh33:8264>5AGbAGdAGfAHhOd5AHjAHlABdJh8=2=AEh:>>140<In?AEjAGn<;:98=76542105;=22223?2AIfAF`32>AId>=<;AGh;;:987Of74365AGb3AGdAGfAHhOd6AHjAHlABdJhInAEjAGnAEh=3AIfAF`43>AId>=<;AGh;:9824Of84376AGb3AGdAGfAHhOd6AHjAHlABdJhIn0=>=8;BAb0BAdBAfBAhBAjBAlBAnBB`BBb0BBdBBfBBh15;4BBj:BBl4:BBnBC`0>BCbBAb240<4BCd<13;624733:>BAf0;>BCf00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}0{b{{b{c}}}{}}000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{G`}}}G`}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Cj}}}Cj}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000{bf}00000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjId}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}2{{IfjIhB`}j}0{{j{Dn{Ij}}{Bl{c}}B`B`}j{{Il{n}}}}{{jjInJ`}j}{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Jd}}}}}}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Gn}{{}H`}{{}Hd}{{}Hf}{{}Hh}{{}Hj}{{}Hn}{jj}{Ih{{b{c}}}{}}00000000000000{{{b{{Bf{c}}}}}b{}}1111111111111111111{Ih{{b{Cdc}}}{}}000000000000000000000000000000000{c{{Af{Dl}}}Jf}{c{{Af{j}}}Jf}{c{{Af{G`}}}Jf}{c{{Af{Ef}}}Jf}{c{{Af{{Bf{{Ab{Jh}}}}}}}Jf}{c{{Af{{Bf{{Ab{En}}}}}}}Jf}{c{{Af{{Bf{Bh}}}}}Jf}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jf}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jf}{c{{Af{Gb}}}Jf}{c{{Af{Gd}}}Jf}{c{{Af{Gf}}}Jf}{c{{Af{Gh}}}Jf}{c{{Af{Gj}}}Jf}{c{{Af{Gl}}}Jf}{c{{Af{Cj}}}Jf}{c{{Af{Hb}}}Jf}{c{{Af{Hd}}}Jf}{c{{Af{Hf}}}Jf}{c{{Af{Hh}}}Jf}{c{{Af{Hj}}}Jf}{c{{Af{Hl}}}Jf}{c{{Af{Hn}}}Jf}{c{{Af{Ah}}}Jf}{{AnClJj}j}{{jClJj}j}{{jj}}{{jc}j{{Aj{j}}}}{Ihf}000000000000000000000000000000000{jj}{Anj}1`{jJl}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jIjB`}j}{{{b{Dl}}{b{Dl}}}B`}9{{{b{j}}{b{j}}}B`}{{{b{G`}}{b{G`}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`Jn}{{{b{{Bf{Bh}}}}{b{{Bf{Bh}}}}}B`}{{{b{Gb}}{b{Gb}}}B`}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Hd}}{b{Hd}}}B`}{{{b{Hf}}{b{Hf}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000{{K`jB`}j}0{{jKb}j}{{jjIn}j}11`{{jc}j{{Il{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}0{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}};;{{jKd}j}<{{}j}{Anj}77{{}{{Bf{{Ab{Bd}}}}}}8{{jj}j}{{{b{Dh}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Fb}}{b{CdKf}}}{{Af{fKh}}}}{{{b{En}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Kj}}{b{CdKf}}}{{Af{fKh}}}}{{{b{j}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{G`}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Ef}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{{Bf{c}}}}{b{CdKf}}}{{Af{fKh}}}{}}{{{b{Gb}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gd}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gf}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gh}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gj}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gl}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Cj}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{Gn}}{b{CdKf}}}{{Af{fKh}}}}{{{b{H`}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hb}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hd}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hf}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hh}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hj}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hl}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Hn}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Ah}}{b{CdKf}}}{{Af{fKh}}}}{{{b{F`}}{b{CdKf}}}{{Af{fKh}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{{{b{E`}}}j}{Idj}{Klj}3{Knj}{L`j}{Lbj}{B`j}{Ijj}{Elj}{Clj}{Ldj}{Ebj}{Dlj}=={LfEf}{Lh{{Bf{{Ab{Dh}}}}}}{Gb{{Bf{{Ab{Dh}}}}}}{Gf{{Bf{{Ab{Dh}}}}}}{Gl{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Lj{{Bf{{Ab{Dh}}}}}}{Ll{{Bf{{Ab{Dh}}}}}}{Ln{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{cc{}}{M`{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}222222{GbCj}{GjCj}{GdCj}{M`Cj}6666666{HjHh}777{{{b{E`}}}Ah}8{jAh}{nAh}{MbAh};{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}Md}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jIhIh}j}{{AljB`}j}43{Ffj}{{{b{Jd}}{b{{Mf{Cn}}}}Mh{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Mf{Cn}}}}Mh{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}Ih}{{{b{Dh}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{{b{Kj}}{b{{Mf{Cn}}}}}{{Af{{Ab{{Mf{Cn}}}}Ad}}}}99{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fMj}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fMj}{{{b{G`}}{b{Cdc}}}fMj}{{{b{Ef}}{b{Cdc}}}fMj}{{{b{Gb}}{b{Cdc}}}fMj}{{{b{Gd}}{b{Cdc}}}fMj}{{{b{Gf}}{b{Cdc}}}fMj}{{{b{Gh}}{b{Cdc}}}fMj}{{{b{Gj}}{b{Cdc}}}fMj}{{{b{Gl}}{b{Cdc}}}fMj}{{{b{Cj}}{b{Cdc}}}fMj}{{{b{Hb}}{b{Cdc}}}fMj}{{{b{Hd}}{b{Cdc}}}fMj}{{{b{Hf}}{b{Cdc}}}fMj}{{{b{Hh}}{b{Cdc}}}fMj}{{{b{Hj}}{b{Cdc}}}fMj}{{{b{Hl}}{b{Cdc}}}fMj}{{{b{Hn}}{b{Cdc}}}fMj}{{{b{Ah}}{b{Cdc}}}fMj}{{Anj}j}{{j{Bl{Ih}}}j}{{j{Bl{j}}{Bl{Ih}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}Ih}000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jMl}j}{{jj}j}{{}c{}}000000000000000000000000000000000{{{b{j}}}}{MnAn}{AnAn}{h{{Af{{`{N`}}Ad}}}}{{{b{Ef}}}B`}{{jccNb}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{Ndj}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjNf}{{jIj}j}:;;:;;{{Ndc}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nh{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{Nd{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Nj}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jNlB`}j}1111{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jNd}`44`{j}{{jc}j{{Aj{j}}}}0;{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Gn}{{}H`}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{Nn{{b{j}}}}}}}f}{{j{b{Cd{Nn{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{O`{eD`}}}}Hj}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjId}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{Nd{b{E`}}}j}05`{{j{Dn{Ij}}{Bl{c}}B`B`B`}j{{Il{n}}}}{{jIh{Bl{c}}B`B`B`}j{{Il{n}}}}{{{b{E`}}jOb}j}{{jjOb}j}9{{jOd{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}Hl}j}`{Alj}{Anj}{jj}00{{jOf}j}{{jjHb}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}Oh}j}{{jIhc}j{{Ch{{b{Cd{Ol{Oj}}}}}{{Bj{{Bl{Ij}}}}}}C`CbOn}}{{jOh}j}{{jjA@`}j}101010{{jObIjOh}j}{{jjObIjA@`}j}{{jIhB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLb}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@b}j{{Aj{j}}}}``{{{b{Dl}}c}AfA@d}{{{b{j}}c}AfA@d}{{{b{G`}}c}AfA@d}{{{b{Ef}}c}AfA@d}{{{b{{Bf{Bh}}}}c}AfA@d}{{{b{{Bf{{Ab{Dh}}}}}}c}AfA@d}{{{b{{Bf{{Ab{Bd}}}}}}c}AfA@d}{{{b{{Bf{{Ab{En}}}}}}c}AfA@d}{{{b{{Bf{{Ab{Jh}}}}}}c}AfA@d}{{{b{Gb}}c}AfA@d}{{{b{Gd}}c}AfA@d}{{{b{Gf}}c}AfA@d}{{{b{Gh}}c}AfA@d}{{{b{Gj}}c}AfA@d}{{{b{Gl}}c}AfA@d}{{{b{Cj}}c}AfA@d}{{{b{Hb}}c}AfA@d}{{{b{Hd}}c}AfA@d}{{{b{Hf}}c}AfA@d}{{{b{Hh}}c}AfA@d}{{{b{Hj}}c}AfA@d}{{{b{Hl}}c}AfA@d}{{{b{Hn}}c}AfA@d}{{{b{Ah}}c}AfA@d}{{Anc}j{{Aj{j}}}}0{{jA@f}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIdB`}j}8{{AlId}j}{{AnId}j}{{jId}j}{jA@h}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{Nd{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{Ih}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjInJ`}j}```{{AnIh}j}{{{b{j}}{b{{Mf{Cn}}}}Mh}{{Af{DfAd}}}}={Ndj}{bc{}}00000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMb}00000000{{Al{Bl{{Ab{Bn}}}}}j}{{AnA@j{Bl{{Ab{Bn}}}}Ih}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Nh{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nh{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nh{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}}{{{b{Dh}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{b{{Af{A@lA@n}}}}00000000{bAA`}000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlId}j}{{AnId}j}{{jId}j}`{{}c{}}000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Gnj}Gn}0{{H`j}H`}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{H`jjj}H`}{{Gnjjj}Gn}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{GnJb}Gn}{{Gn{Bl{n}}}Gn}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{cc{}}87{{}Ih}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAA`}3``{{Jlj{Ej{B`}}{Dn{El}}AAb}j}{Jlj}=<{{JlJb}j}1{{JljJb}j}{{Jln}j}333=<;3:3983333333333{{Jlj}j}44{{Jl{Bl{n}}jAAd}j}15{{Jl{b{E`}}}j}65066666662:98;6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAf}}}AAf}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAf}}}Jf}{Ihf}{{{b{AAf}}{b{AAf}}}B`}{{{b{AAf}}{b{CdKf}}}{{Af{fKh}}}}0{cc{}}{{{b{AAf}}{b{Cdc}}}fMj}{{}Ih}{{}c{}}{{{b{AAf}}c}AfA@d}{bc{}}{bMb}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@lA@n}}}}{bAA`}7````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAh}}}AAh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAh}}}Jf}{Ihf}{{{b{AAh}}{b{AAh}}}B`}{{{b{AAh}}{b{CdKf}}}{{Af{fKh}}}}0{cc{}}{{{b{AAh}}{b{Cdc}}}fMj}{{}Ih}{{}c{}}{{{b{AAh}}c}AfA@d}{bc{}}{bMb}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@lA@n}}}}{bAA`}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAj}}}AAj}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAj}}}Jf}{Ihf}{{{b{AAj}}{b{AAj}}}B`}{{b{b{c}}}B`{}}00{{{b{AAj}}{b{CdKf}}}{{Af{fKh}}}}0{cc{}}{{{b{AAj}}{b{Cdc}}}fMj}{{}Ih}{{}c{}}{{{b{AAj}}c}AfA@d}{bc{}}{bMb}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@lA@n}}}}{bAA`}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{AAn{{Dn{AAl}}}}}{{ABb{}{{I`{AB`}}}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cABd}{{AAn{AB`}}}{{Bb{{A`{AB`}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjId}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jjInJ`}j}0{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjId}j}{{{b{E`}}jOb}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHb}j}0``{{jjIdB`}j}6{{jjInJ`}j}0``````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Nl}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ABf}}AAl}{{Af{AAlAd}}}}{{{b{ABf}}}ABf}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}00{Ih{{b{Cdc}}}{}}00{c{{Af{ABf}}}Jf}{Ihf}00{{{b{ABf}}{b{ABf}}}B`}{{b{b{c}}}B`{}}00{{{b{ABf}}{b{CdKf}}}{{Af{fKh}}}}{cc{}}00{{{ABj{ABh}}}ABf}{{{b{ABl}}{b{{Mf{Cn}}}}Mh{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Nl}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{}Ih}00{{}c{}}00{{{ABj{ABh}}{Bl{Cn}}B`B`}Nl}{{{Bl{Cn}}}ABl}{{{b{ABf}}c}AfA@d}{bc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Nl}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{ABl}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{bAA`}00999`{{A@hB`}j}{A@hj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{A@hjB`}j}{{A@hj}j}1{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{{A@hjIh}j}4{{A@h{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}Ih}{{}c{}}{{A@h{b{E`}}B`}j}{{A@h{Bl{Cn}}{Bl{Ih}}}j}:>>{{A@hIhABn}j}0{{A@hjjB`}j}0{{A@hjjB`Cl}j}{A@hj}{{A@hjj}j}?;;?;??????{{A@hCnHdj}j}{{A@hj}j}{{A@hHd}j}{{A@h{Bl{Jb}}{Bl{n}}Hdj}j}{{A@hIh}j}{{A@hjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAA`}{{}c{}}8`````````````````````````````````{{bd}f}00000000{{AB`c}{{AAn{AAl}}}{{Bn{AC`{b{Cd{ACd{ACb}}}}{b{Cd{ACd{ACf}}}}}{{Bj{{AAn{f}}}}}}}}{{AB`B`}AB`}{{AChc}AB`{{Bb{{A`{j}}}}}}{{}ACj}{{AClB`}ACl}{{{Ab{ACn}}AD`}{{AAn{AB`}}}}{{AB`AB`cc}AB`{{Aj{j}}}}{{AChcADb}AB`{{Bn{AAl}{{Bj{{AAn{AAl}}}}}}C`Cb}}{{ACjACj}ACj}{{{b{CdACj}}ACj}f}10{{{b{ACj}}}Lb}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{AB`ADdcDb}AB`{{Bb{{A`{j}}}}}}{AB`AB`}``{{{b{ADf}}}f}{{AB`{ADh{{b{E`}}Cn}}B`}AB`}{{AB`CnB`}AB`}{{{b{ADf}}}ADf}{{{b{AB`}}}AB`}{{{b{ACh}}}ACh}{{{b{AD`}}}AD`}{{{b{ADj}}}ADj}{{{b{ADl}}}ADl}{{{b{ADn}}}ADn}{{{b{AE`}}}AE`}{{{b{ACj}}}ACj}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AEb}}}{{Bl{{b{AEd}}}}}}0{{{b{ADj}}}{{Bl{{b{AEd}}}}}}{{{b{ADn}}}{{Bl{{b{AEd}}}}}}``{{AClAEf}ACl}{AB`{{AAn{AAl}}}}{AB`{{AAn{ADf}}}}{{{b{CdAB`}}}{{AAn{ADb}}}}{ACjACj}{{{b{AEb}}{Dn{AB`}}}{{AAn{AB`}}}}0{{{b{ADj}}{Dn{AB`}}}{{AAn{AB`}}}}{{{b{ACj}}ACj}B`}{AB`AB`}{{AB`AB`{Bl{n}}}AB`}{{}AB`}{{}AD`}{{}ADl}{{}AE`}{{}ACj}{Ih{{b{c}}}{}}000000000{Ih{{b{Cdc}}}{}}000000000{{{b{AB`}}}{{AAn{Mb}}}}000{{ACjACj}ACj}{Ihf}{{{b{CdADf}}}f}11{{AB`e}AB`{{Aj{Ah}}}{{Ib{}{{I`{c}}}}}}22222220{{AB`{Bl{{Dn{j}}}}}AB`}8{{{b{AB`}}B`}{{AAn{Mb}}}}{{AB`e}AB`{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdACj}}c}f{{Ib{}{{I`{ACj}}}}}}{{{b{ADf}}}{{Bl{{AAn{AAl}}}}}}{{AB`Ih}{{AAn{AAl}}}}{{{b{ADf}}}{{AAn{AAl}}}}{{AB`c}AB`{{Aj{j}}}}0{{AB`j}AB`}{AClAB`}{AEb{{AAn{AB`}}}}0{ADj{{AAn{AB`}}}}{ADn{{AAn{AB`}}}}210{AB`AB`}{{{b{ACj}}{b{CdKf}}}{{Af{fKh}}}}0000{{AClB`}ACl}{cc{}}0{JhAB`}1{AChAB`}2222222{Lb{{Bl{ACj}}}}{LbACj}00{cACj{{Ib{}{{I`{ACj}}}}}}{{{b{E`}}}{{Bl{ACj}}}}{{AB`AB`cc}AB`{{Aj{j}}}}{{{b{AB`}}}ACj}{{{b{AEb}}}B`}0{{{b{ADj}}}B`}`{{AB`e}ACh{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{AB`jcAEh}ACh{{Bb{{A`{j}}}}}}1{{ACh{Bl{Ih}}}AB`}``{{AClAEj}ACl}```{{}Ih}0000000008{{{b{CdACj}}ACj}f}{{ACjACj}ACj}{{{b{ACj}}ACj}B`}{{}c{}}000000000{ACj}{{{b{ACj}}}B`}0{{{b{ACj}}}{{AEl{ACj}}}}{{{b{ACj}}}{{AEn{ACj}}}}{{AB`AB`ccAF`}AB`{{Bb{{A`{j}}}}}}{AB`ACl}{{AClB`}ACl}{{ACl{Dn{j}}}AB`}{AB`AB`}{AFbAB`}1{{AB`AB`cc}AB`{{Aj{j}}}}{{AClc}ACl{{Bb{{A`{j}}}}}}{{AB`ADd}AB`}``{{ADnB`}ADn}`{{AB`cAFd{Bl{{Ab{Kj}}}}{Bl{{b{E`}}}}}AB`{{Bn{AAl}{{Bj{{AAn{AAl}}}}}}C`Cb}}{{AB`ABfAFd{Bl{ADb}}B`}AB`}777{{AB`AB`c}{{AAn{AB`}}}{{Aj{n}}}}8{{{b{AEb}}}{{Bl{Ih}}}}{{{b{ADj}}}{{Bl{Ih}}}}{{{b{ADn}}}{{Bl{Ih}}}}````>{cADj{{Bb{AFf}}}}{cADn{{Bb{AFf}}}}{{{Ab{{A`{AFh}}}}}ADj}{{{Ab{{A`{AFh}}}}}ADn}{AFjADj}{AFjADn}{ACjACj}{AB`AB`}{{AClc}ACl{{Bb{{A`{j}}}}}}{{AB`{b{Cd{ACd{ACb}}}}{b{Cd{ACd{ACf}}}}}{{AAn{AC`}}}}``{AB`{{AAn{{O`{AAlAAl}}}}}}{{AB`jOb}AB`}{{{b{AEb}}}B`}{{{b{ADj}}}B`}{{{b{ADn}}}B`}``{{{b{CdACj}}ACj}f}{{AB`ei}AB`{{Bb{E`}}}{{Ib{}{{I`{c}}}}}{{Bb{E`}}}{{Ib{}{{I`{g}}}}}}98{{AB`jcOf}ACh{{Bb{{A`{j}}}}}}{{{b{AEb}}}{{Bl{{b{AFl}}}}}}{{{b{ADj}}}{{Bl{{b{AFl}}}}}}{{{b{ADn}}}{{Bl{{b{AFl}}}}}}```{{AFnAG`B`}AB`}{{cADl}{{AAn{AB`}}}{{Bb{AFf}}}}{{{Ab{{A`{AFh}}}}ADl}{{AAn{AB`}}}}{{AFjADl}{{AAn{AB`}}}}{{cAE`}{{AAn{AB`}}}{{Bb{AFf}}}}{{{Ab{{A`{AFh}}}}AE`}{{AAn{AB`}}}}{{AFjAE`}{{AAn{AB`}}}}`{{}ACj}{{{b{CdAB`}}{b{Cd{ACd{ACb}}}}{b{Cd{ACd{ACf}}}}}{{AAn{ADb}}}}{{AB`c}AB`{{Bb{{A`{j}}}}}}0{{AB`AB`cc}AB`{{Aj{j}}}}{{{b{CdACj}}ACjB`}f}{{{b{AB`}}{ACd{ACb}}{ACd{ACf}}}f}{{AB`c}AB`{{Aj{j}}}}{{AB`ce}AB`{{Aj{j}}}{{Aj{j}}}}{{AB`cAGb}{{AAn{f}}}{{Bb{AFf}}}}{{AB`cAGd}{{AAn{f}}}{{Bb{AFf}}}}{{AB`Mb{Bl{AEd}}AGd}{{AAn{f}}}}{{AB`cAGf}{{AAn{f}}}{{Bb{AFf}}}}{{AB`cAGh}{{AAn{f}}}{{Bb{AFf}}}}{{AB`Mb{Bl{AEd}}AGh}{{AAn{f}}}}`{{AB`ClADd}AB`}{{AB`cDb}AB`{{Il{n}}}}{{AB`cDb}AB`{{Bb{{A`{j}}}}}}{{{b{AEb}}}{{b{AFj}}}}{{{b{ADj}}}{{b{AFj}}}}{{{b{ADn}}}{{b{AFj}}}}{{AB`Id}AB`}{{ACjACj}ACj}{{{b{CdACj}}ACj}f}{{AClc}ACl{{Aj{n}}}}{AB`AB`}3{{AB`ADd}AB`}{{ACh{Bl{Ih}}}AB`}{AB`{{AAn{AGj}}}}0{{{b{AB`}}B`}{{AAn{Mb}}}}{bc{}}000000007{{AB`ADdcDb}AB`{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{bAA`}000000000<{{AB`{Bl{{Dn{Mb}}}}AGl}AB`}{{AB`{Bl{e}}AGl}AB`{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{AB`{Bl{{Dn{n}}}}AGl}AB`}1{{AB`e}AB`{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{AB`Hn}AB`}`{{AClAGn}ACl}{{AB`Id}AB`}{{}c{}}000000000{{AClAB`}ACl}{{ADn{Bl{AH`}}}ADn}{{ADjB`}ADj}{{ADj{Bl{AEd}}}ADj}{{ADn{Bl{AEd}}}ADn}{{AB`B`}AB`}{{AB`j}AB`}{{AB`c}AB`{{Bb{{A`{j}}}}}}022{{ADj{Bl{n}}}ADj}{{AB`c}AB`{{Bb{{A`{AB`}}}}}}7{{ADj{Bl{ADb}}}ADj}{{ADjAHb}ADj}{{ADjId}ADj}:::{{ADnB`}ADn}5{{ADn{Bl{n}}}ADn}{{ADj{Bl{Ih}}}ADj}>=={{AEbc}AEb{{Aj{{Bl{Ih}}}}}}{{ADjc}ADj{{Aj{{Bl{Ih}}}}}}2{{ADnc}ADn{{Aj{{Bl{Ih}}}}}}{{ADn{Bl{Ih}}}ADn}>{{ADj{Bl{AHd}}}ADj}{{AB`ACj}AB`}{{AEb{Ab{{A`{AFh}}}}}AEb}0{{AB`B`}AB`}0{{ADj{Bl{Id}}}ADj}{{ADjB`}ADj}{{AEbB`}AEb}1=3{{AEbc}AEb{{Aj{{Bl{AFl}}}}}}{{AB`c{Bl{ADd}}}AB`{{Aj{n}}}}{{ADjc}ADj{{Aj{{Bl{AFl}}}}}}{{ADj{Bl{AFl}}}ADj}{{ADnc}ADn{{Aj{{Bl{AFl}}}}}}{{ADn{Bl{AFl}}}ADn}{{ADj{Bl{ADb}}}ADj}{{ADn{Bl{ADb}}}ADn}{{ADjc}{{AAn{ADj}}}{{Bn{AFn}{{Bj{{AAn{AFn}}}}}}}}1{{ADjId}ADj}={{ADjIh}ADj}0>{{AEbAFj}AEb}{{ADjAFj}ADj}{{ADnAFj}ADn}{{AB`B`}AB`}{{ADjB`}ADj}01{AB`AB`}{{{b{AAl}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{AAn{AAl}}}{{Aj{n}}}{{Ib{}{{I`{c}}}}}{{Aj{n}}}{{Ib{}{{I`{g}}}}}{{Aj{n}}}{{Ib{}{{I`{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{In}}Cl{Bl{{b{AHf}}}}}{{Af{ClAd}}}}00{{{b{ACn}}}B`}00{{{b{ACn}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AEh}}}AEh}{{{b{Of}}}Of}{{{b{In}}}In}{{{b{AF`}}}AF`}{{{b{AEj}}}AEj}{{{b{AGn}}}AGn}{{{b{AGb}}}AGb}{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{{b{AHh}}}AHh}{{{b{Od}}}Od}{{{b{AGh}}}AGh}{{{b{AHj}}}AHj}{{{b{AHl}}}AHl}{{{b{ABd}}}ABd}{{{b{Jh}}}Jh}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{In}}{b{In}}}AHn}`{{b{b{c}}}AHn{}}``{{{b{Jh}}}{{Af{{Ab{{Mf{Cn}}}}Ad}}}}`{{{b{In}}}Cl}{{{b{In}}}B`}{{}AEh}{{}Of}{{}AF`}{{}AGn}{{}AGb}{{}AGd}{{}AGf}{{}Od}{{}AGh}{{}AHl}{{}ABd}{{}Jh}{Ih{{b{c}}}{}}00000000000000000{Ih{{b{Cdc}}}{}}00000000000000000`{{{b{Jh}}}{{Af{MbAd}}}}0{c{{Af{AEh}}}Jf}{c{{Af{Of}}}Jf}{c{{Af{In}}}Jf}{c{{Af{AF`}}}Jf}{c{{Af{AEj}}}Jf}{c{{Af{AGn}}}Jf}{c{{Af{AGb}}}Jf}{c{{Af{AGd}}}Jf}{c{{Af{AGf}}}Jf}{c{{Af{AHh}}}Jf}{c{{Af{Od}}}Jf}{c{{Af{AGh}}}Jf}{c{{Af{AHj}}}Jf}{c{{Af{AHl}}}Jf}{c{{Af{ABd}}}Jf}{c{{Af{Jh}}}Jf}`{{{b{Jh}}}{{Af{{`{N`}}Ad}}}}{Ihf}00000000000000000{{{b{AEh}}{b{AEh}}}B`}{{{b{Of}}{b{Of}}}B`}{{{b{In}}{b{In}}}B`}{{{b{AF`}}{b{AF`}}}B`}{{{b{AEj}}{b{AEj}}}B`}{{{b{AGn}}{b{AGn}}}B`}{{{b{AGb}}{b{AGb}}}B`}{{{b{AGd}}{b{AGd}}}B`}{{{b{AGf}}{b{AGf}}}B`}{{{b{AHh}}{b{AHh}}}B`}{{{b{Od}}{b{Od}}}B`}{{{b{AGh}}{b{AGh}}}B`}{{{b{AHj}}{b{AHj}}}B`}{{{b{AHl}}{b{AHl}}}B`}{{{b{ABd}}{b{ABd}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AEh}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Of}}{b{CdKf}}}{{Af{fKh}}}}{{{b{In}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{ACn}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AF`}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AEj}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{AGn}}{b{CdKf}}}{{Af{fKh}}}}0{{{b{AGb}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AGd}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AGf}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AHh}}{b{CdKf}}}{{Af{fKh}}}}{{{b{Od}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AGh}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AHj}}{b{CdKf}}}{{Af{fKh}}}}{{{b{AHl}}{b{CdKf}}}{{Af{fKh}}}}{{{b{ABd}}{b{CdKf}}}{{Af{fKh}}}}`{cc{}}0000{AEjAF`}1111111111111`{{{b{AHj}}}Cn}{{{b{AI`}}{Dn{Bh}}{b{AEh}}}{{Af{{O`{Bh{Dn{Bh}}AIb}}Ad}}}}{{{b{AEh}}{b{Cdc}}}fMj}{{{b{Of}}{b{Cdc}}}fMj}{{{b{In}}{b{Cdc}}}fMj}{{{b{AF`}}{b{Cdc}}}fMj}{{{b{AEj}}{b{Cdc}}}fMj}{{{b{AGn}}{b{Cdc}}}fMj}{{{b{AGb}}{b{Cdc}}}fMj}{{{b{AGd}}{b{Cdc}}}fMj}{{{b{AGf}}{b{Cdc}}}fMj}{{{b{AHh}}{b{Cdc}}}fMj}{{{b{Od}}{b{Cdc}}}fMj}{{{b{AGh}}{b{Cdc}}}fMj}{{{b{AHj}}{b{Cdc}}}fMj}{{{b{AHl}}{b{Cdc}}}fMj}{{{b{ABd}}{b{Cdc}}}fMj}``````{{}Ih}00000000000000000{{}c{}}00000000000000000{{{b{Jh}}}}{{{b{AEj}}}B`}{{{b{In}}{Bl{{b{E`}}}}}B`}{{{b{In}}}B`}{{{b{AHj}}}B`}{{{b{AGn}}{b{AEj}}}{{Af{fAd}}}}2``{Nfj}{Inj}{AIdj}{AHjj}````{AHjAHj}`{{{b{In}}}Cl}8{{InCl}In}`1{{{b{AGn}}}B`}{In};{ClIn}{AEjAF`}{{{b{ACn}}AIf}{{Af{{Bl{AAl}}Ad}}}}````{{{b{E`}}}In}`{{{b{In}}{b{In}}}{{Bl{AHn}}}}```{Jh{{Af{{Dn{Id}}Ad}}}}`{{{b{AI`}}{Dn{Bh}}{b{Of}}}{{Af{{O`{Bh{Dn{Bh}}AIb}}Ad}}}}`{{{b{ACn}}AIf}{{Af{AAlAd}}}}{{{b{ACn}}{Bl{Ih}}}{{Af{{Ab{{Mf{Cn}}}}Ad}}}}`{{{b{AEh}}c}AfA@d}{{{b{Of}}c}AfA@d}{{{b{In}}c}AfA@d}{{{b{AF`}}c}AfA@d}{{{b{AEj}}c}AfA@d}{{{b{AGn}}c}AfA@d}{{{b{AGb}}c}AfA@d}{{{b{AGd}}c}AfA@d}{{{b{AGf}}c}AfA@d}{{{b{AHh}}c}AfA@d}{{{b{Od}}c}AfA@d}{{{b{AGh}}c}AfA@d}{{{b{AHj}}c}AfA@d}{{{b{AHl}}c}AfA@d}{{{b{ABd}}c}AfA@d}{{{b{Jh}}c}AfA@d}`{{{b{AF`}}}B`}````{{{b{AF`}}}{{b{n}}}}`{Jh{{Af{AGjAd}}}}{{{b{AHj}}}{{Bl{AIh}}}}{bc{}}000000000000000{bMb}00`{{{b{AGd}}c}{{AIj{c}}}AIl}{{{b{AGh}}c}{{AIn{c}}}AIl}{{{b{In}}Cl{Bl{{b{AHf}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AJ`}}}}}{{Bn{AJ`}{{Bj{Cl}}}}}}{{{b{In}}Cl{Bl{{b{AHf}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}0000000000000{AIh{{Af{AHjAd}}}}1111{{}{{Af{c}}}{}}00000000000000000{b{{Af{A@lA@n}}}}00{bAA`}00000000000000000`{{}c{}}00000000000000000{{{b{In}}}Cl}{{{b{In}}}B`}{{AF`AEf}AF`}`{{AF`{Bl{n}}}AF`}{{{b{AGd}}AAlc}{{Af{fAd}}}AIl}{{{b{AGh}}AAlc}{{Af{fAd}}}AIl}``````````````````````````````````````````````````````","D":"GJ`","p":[[1,"reference"],[5,"Private",3582],[1,"unit"],[5,"MetaNameSpace",5,3583],[6,"Expr",5,3584],[5,"StructNameSpace",5,3585],[5,"PlSmallStr",3586],[1,"slice"],[5,"Arc",3587],[6,"PolarsError",3588],[6,"Result",3589],[6,"Selector",5,3590],[10,"Into",3591],[5,"ArrayNameSpace",5,3592],[5,"ListNameSpace",5,3593],[1,"bool"],[10,"AsRef",3591],[10,"FunctionOutputField",5,3594],[5,"SpecialEq",5,3594],[5,"Series",3595],[17,"Output"],[6,"Option",3596],[10,"Fn",3597],[10,"Send",3598],[10,"Sync",3598],[0,"mut"],[6,"VisitRecursion",3599],[10,"FnMut",3597],[6,"FunctionExpr",5,3600],[1,"i64"],[6,"DataType",3601],[5,"SortOptions",3602],[5,"SortMultipleOptions",3602],[5,"FieldsMapper",5,3603],[5,"Field",3604],[10,"SeriesUdf",5,3594],[10,"Any",3605],[6,"AggExpr",5,3584],[5,"Vec",3606],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1733,3607],[6,"Operator",5,3584],[10,"Clone",3608],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3594],[5,"UserDefinedFunction",5,3609],[10,"SeriesBinaryUdf",5,3594],[6,"CastOptions",3610],[5,"CategoricalNameSpace",5,3611],[5,"When",5,3612],[5,"Then",5,3612],[5,"ChainedWhen",5,3612],[5,"ChainedThen",5,3612],[6,"Excluded",5,3584],[6,"BooleanFunction",5,3613],[6,"CategoricalFunction",5,3614],[6,"TemporalFunction",5,3615],[6,"PowFunction",5,3616],[6,"StringFunction",5,3617],[6,"StructFunction",5,3618],[5,"DatetimeArgs",5,3619],[5,"DurationArgs",5,3619],[5,"RollingCovOptions",5,3620],[5,"StrptimeOptions",5,3620],[5,"JoinOptions",5,3620],[6,"WindowType",5,3620],[6,"WindowMapping",5,3620],[6,"NestedType",5,3620],[5,"UnpivotArgsDSL",5,3620],[17,"Item"],[10,"IntoIterator",3621],[1,"u8"],[10,"ExprEvalExtension",5,3622],[1,"usize"],[1,"f64"],[10,"IntoVec",3623],[5,"Duration",2905,3624],[6,"ClosedWindow",3625],[6,"TimeUnit",3626],[10,"BinaryUdfOutputField",5,3594],[10,"Deserializer",3627],[6,"DslPlan",2905,3628],[6,"NullBehavior",3629],[5,"DateLikeNameSpace",1755,3630],[10,"Sized",3598],[10,"ListNameSpaceExtension",5,3631],[5,"EWMOptions",3632],[6,"FillNullStrategy",3633],[5,"Formatter",3634],[5,"Error",3634],[10,"UdfSchema",5,3635],[1,"u16"],[1,"i16"],[1,"i8"],[1,"u32"],[1,"f32"],[6,"InequalityOperator",3636],[6,"BusinessFunction",3637],[6,"RangeFunction",3638],[6,"ListFunction",3639],[6,"ArrayFunction",3640],[6,"BinaryFunction",3641],[5,"String",3642],[5,"FunctionOptions",3643],[5,"Schema",3644],[6,"Context",3628],[10,"Hasher",3645],[6,"InterpolationMethod",3646],[10,"IntoListNameSpace",5,3631],[10,"Display",3634],[6,"ClosedInterval",3647],[5,"ExprNameNameSpace",5,3648],[10,"Literal",2905,3649],[10,"FnOnce",3597],[5,"SuperTypeOptions",3650],[5,"PythonUdfExpression",2290,3651],[5,"UnitVec",3652],[1,"tuple"],[6,"QuantileInterpolOptions",3653],[5,"RankOptions",2905,3654],[5,"RollingGroupOptions",2905,3655],[5,"RollingOptionsFixedWindow",3656],[5,"Float64Type",3657],[5,"ChunkedArray",3658],[10,"Copy",3598],[5,"RollingOptionsDynamicWindow",3659],[6,"SearchSortedSide",3660],[10,"Serializer",3661],[6,"IsSorted",3662],[5,"StringNameSpace",2352,3663],[6,"ListToStructWidthStrategy",3664],[5,"CompactString",3665],[6,"ToCompactStringError",3665],[5,"TypeId",3605],[6,"Roll",3666],[6,"NonExistent",3667],[6,"RollingFunction",2104,3668],[6,"RollingFunctionBy",2138,3669],[6,"TrigonometricFunction",2171,3670],[5,"DataFrame",3671],[8,"PolarsResult",3588],[5,"LazyFrame",2419],[10,"IntoParallelIterator",3672],[5,"UnionArgs",2905,3643],[5,"PythonFunction",2290,3651],[5,"PyAny",3673],[5,"Py",3674],[5,"PythonGetOutput",2290,3651],[1,"char"],[5,"Node",3675],[6,"IR",3676],[5,"Arena",3675],[6,"AExpr",3677],[5,"LazyGroupBy",2419],[5,"OptFlags",2419,3678],[5,"JoinBuilder",2419],[10,"AnonymousScan",2905,3679],[5,"ScanArgsAnonymous",2419,3680],[8,"SchemaRef",3681],[8,"IdxSize",3682],[5,"InProcessQuery",2419,3683],[8,"PlHashMap",3684],[5,"LazyCsvReader",2419,3685],[5,"ScanArgsIpc",2419,3686],[5,"LazyJsonLineReader",2419,3687],[5,"ScanArgsParquet",2419,3688],[10,"LazyFileListReader",2419,3689],[5,"CloudOptions",3690],[6,"JoinCoalesce",3691],[5,"DynamicGroupOptions",2905,3655],[6,"JoinType",2905,3691],[5,"Iter",3692],[5,"IterNames",3692],[5,"JoinArgs",2905,3691],[10,"IntoLazy",2419],[8,"AllowedOptimizations",2419,3678],[5,"Path",3693],[5,"PathBuf",3693],[6,"ScanSources",3694],[5,"RowIndex",3695],[8,"Schema",3681],[8,"PyObject",3674],[5,"CsvWriterOptions",2905,3696],[5,"IpcWriterOptions",2905,3697],[5,"JsonWriterOptions",2905,3698],[5,"ParquetWriteOptions",2905,3699],[5,"IRPlan",3676],[6,"UniqueKeepStrategy",3671],[6,"JoinValidation",2905,3691],[8,"NonZeroUsize",3700],[6,"CsvEncoding",3701],[6,"NullValues",3701],[6,"Tz",3702],[6,"RankMethod",2905,3654],[6,"LiteralValue",2905,3649],[5,"AnonymousScanOptions",2905,3643],[6,"Ordering",3703],[10,"PolarsTemporalGroupby",2905,3655],[6,"GroupsProxy",3704],[5,"Null",2905,3649],[5,"AnonymousScanArgs",2905,3679],[6,"AnyValue",3705],[5,"IpcWriter",3697],[10,"Write",3706],[5,"ParquetWriter",3707],[5,"NaiveDateTime",3708],[15,"Quantile",1621],[15,"Min",1621],[15,"Max",1621],[15,"IsBetween",2028],[15,"Any",2028],[15,"All",2028],[15,"SortBy",1631],[15,"Filter",1631],[15,"Cast",1631],[15,"Sort",1631],[15,"Gather",1631],[15,"RenameAlias",1631],[15,"Ternary",1631],[15,"Function",1631],[15,"Window",1631],[15,"AnonymousFunction",1631],[15,"Slice",1631],[15,"BinaryExpr",1631],[15,"QCut",2031],[15,"Entropy",2031],[15,"Log",2031],[15,"Hist",2031],[15,"Cut",2031],[15,"Correlation",2031],[15,"Round",2031],[15,"TopK",2031],[15,"TopKBy",2031],[15,"RoundSF",2031],[15,"EwmMeanBy",2031],[15,"Clip",2031],[15,"BackwardFill",2031],[15,"ForwardFill",2031],[15,"Random",2031],[15,"GatherEvery",2031],[15,"ValueCounts",2031],[15,"Rank",2031],[15,"EwmMean",2031],[15,"EwmStd",2031],[15,"EwmVar",2031],[15,"ReplaceStrict",2031],[15,"CumCount",2031],[15,"CumSum",2031],[15,"CumProd",2031],[15,"CumMin",2031],[15,"CumMax",2031],[15,"ConcatHorizontal",2076],[15,"ConcatVertical",2076],[15,"ExtractGroups",2076],[15,"JsonDecode",2076],[15,"PadStart",2076],[15,"PadEnd",2076],[15,"SplitExact",2076],[15,"Contains",2076],[15,"Find",2076],[15,"Replace",2076],[15,"DatetimeFunction",2096],[15,"GroupBy",3528],[15,"Union",3528],[15,"Sort",3528],[15,"ExtContext",3528],[15,"DataFrameScan",3528],[15,"IR",3528],[15,"Select",3528],[15,"HStack",3528],[15,"Scan",3528],[15,"MapFunction",3528],[15,"Cache",3528],[15,"Filter",3528],[15,"Distinct",3528],[15,"Slice",3528],[15,"Sink",3528],[15,"Join",3528],[15,"HConcat",3528],[15,"PythonScan",3528],[15,"Range",3579]],"r":[[8,3584],[22,3592],[31,3594],[33,3613],[38,3614],[39,3611],[43,3612],[44,3612],[67,3619],[77,3619],[87,3584],[92,3584],[93,3622],[94,3648],[102,3603],[103,3648],[113,3600],[114,3594],[120,3594],[135,3631],[151,3620],[163,3593],[164,3631],[179,3583],[198,3620],[205,3584],[216,3616],[228,3594],[239,3620],[248,3590],[250,3594],[251,3594],[262,3594],[270,3617],[277,3620],[279,3618],[280,3585],[288,3615],[290,3612],[310,3635],[313,3620],[316,3609],[321,3612],[324,3620],[325,3620],[369,3709],[373,3710],[380,3710],[383,3711],[387,3712],[389,3713],[404,3714],[406,3714],[412,3715],[413,3716],[415,3712],[417,3612],[490,3717],[497,3716],[500,3712],[588,3710],[589,3709],[590,3709],[591,3718],[592,3718],[593,3718],[602,3719],[604,3710],[608,3710],[613,3713],[614,3619],[615,3713],[616,3713],[766,3712],[768,3709],[769,3709],[770,3619],[865,3712],[907,3710],[910,3718],[982,3712],[1028,3709],[1064,3713],[1065,3713],[1119,3716],[1121,3716],[1131,3712],[1134,3712],[1138,3649],[1148,3711],[1159,3712],[1162,3712],[1169,3716],[1173,3710],[1174,3716],[1177,3710],[1178,3716],[1186,3716],[1190,3710],[1217,3716],[1219,3712],[1232,3719],[1239,3712],[1242,3716],[1246,3710],[1250,3720],[1263,3719],[1264,3719],[1341,3719],[1349,3712],[1355,3716],[1359,3710],[1366,3612],[1369,3713],[1538,3712],[1590,3612],[1733,3607],[1754,3611],[1755,3630],[1828,3613],[1832,3614],[1879,3600],[1941,3616],[1980,3617],[1988,3618],[1993,3615],[2023,3600],[2024,3600],[2025,3600],[2026,3600],[2027,3600],[2098,3614],[2102,3616],[2108,3668],[2142,3669],[2186,3670],[2215,3619],[2216,3619],[2217,3709],[2218,3710],[2220,3710],[2221,3711],[2222,3713],[2223,3714],[2224,3714],[2225,3715],[2226,3716],[2227,3716],[2228,3710],[2229,3709],[2231,3709],[2233,3718],[2236,3718],[2237,3718],[2238,3719],[2239,3710],[2240,3710],[2241,3713],[2242,3713],[2243,3619],[2244,3713],[2245,3713],[2248,3709],[2249,3709],[2250,3619],[2251,3710],[2252,3718],[2255,3709],[2256,3713],[2257,3713],[2258,3716],[2259,3716],[2260,3711],[2261,3716],[2262,3716],[2263,3716],[2267,3716],[2272,3716],[2273,3719],[2274,3716],[2275,3710],[2276,3720],[2277,3719],[2278,3719],[2281,3719],[2282,3716],[2283,3713],[2284,3713],[2290,3651],[2291,3651],[2292,3651],[2293,3651],[2294,3651],[2352,3663],[2413,3609],[2419,3678],[2426,3683],[2429,3685],[2430,3689],[2433,3687],[2435,3678],[2442,3680],[2443,3686],[2444,3688],[2905,3679],[2906,3679],[2907,3643],[2915,3696],[2922,3628],[2923,3624],[2925,3655],[2943,3697],[2945,3691],[2946,3691],[2947,3691],[2948,3698],[2950,3649],[2951,3649],[2957,3649],[2958,3649],[2964,3699],[2965,3655],[2968,3654],[2969,3654],[2971,3655],[2987,3643],[3385,3721]],"b":[[621,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[622,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[623,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[705,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[706,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[707,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[708,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[709,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[773,"impl-Expr"],[774,"impl-PartialEq-for-Expr"],[777,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[778,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[876,"impl-Display-for-Expr"],[877,"impl-Debug-for-Expr"],[879,"impl-Debug-for-Operator"],[880,"impl-Display-for-Operator"],[882,"impl-Debug-for-BooleanFunction"],[883,"impl-Display-for-BooleanFunction"],[884,"impl-Debug-for-CategoricalFunction"],[885,"impl-Display-for-CategoricalFunction"],[886,"impl-Debug-for-TemporalFunction"],[887,"impl-Display-for-TemporalFunction"],[888,"impl-Debug-for-PowFunction"],[889,"impl-Display-for-PowFunction"],[890,"impl-Display-for-StringFunction"],[891,"impl-Debug-for-StringFunction"],[892,"impl-Debug-for-StructFunction"],[893,"impl-Display-for-StructFunction"],[894,"impl-Debug-for-FunctionExpr"],[895,"impl-Display-for-FunctionExpr"],[924,"impl-From%3C%26str%3E-for-Expr"],[925,"impl-From%3Cu8%3E-for-Expr"],[926,"impl-From%3Cu16%3E-for-Expr"],[928,"impl-From%3Ci16%3E-for-Expr"],[929,"impl-From%3Ci8%3E-for-Expr"],[930,"impl-From%3Cu32%3E-for-Expr"],[931,"impl-From%3Cbool%3E-for-Expr"],[932,"impl-From%3Cf64%3E-for-Expr"],[933,"impl-From%3Ci32%3E-for-Expr"],[934,"impl-From%3Ci64%3E-for-Expr"],[935,"impl-From%3Cf32%3E-for-Expr"],[936,"impl-From%3Cu64%3E-for-Expr"],[937,"impl-From%3CAggExpr%3E-for-Expr"],[941,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[942,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[943,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[944,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[945,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[946,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[947,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[948,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[949,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[951,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[952,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[959,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[960,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[961,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[962,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[974,"impl-From%3C%26str%3E-for-Selector"],[976,"impl-From%3CExpr%3E-for-Selector"],[977,"impl-From%3CPlSmallStr%3E-for-Selector"],[978,"impl-From%3CString%3E-for-Selector"],[1002,"impl-Expr"],[1003,"impl-Hash-for-Expr"],[1301,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1302,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1303,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1304,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1305,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[2124,"impl-Debug-for-RollingFunction"],[2125,"impl-Display-for-RollingFunction"],[2157,"impl-Display-for-RollingFunctionBy"],[2158,"impl-Debug-for-RollingFunctionBy"],[2201,"impl-Display-for-TrigonometricFunction"],[2202,"impl-Debug-for-TrigonometricFunction"],[2467,"impl-OptFlags"],[2468,"impl-Flags-for-OptFlags"],[2605,"impl-LowerHex-for-OptFlags"],[2606,"impl-UpperHex-for-OptFlags"],[2607,"impl-Binary-for-OptFlags"],[2608,"impl-Octal-for-OptFlags"],[2609,"impl-Debug-for-OptFlags"],[2613,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2615,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2624,"impl-OptFlags"],[2625,"impl-Flags-for-OptFlags"],[2863,"impl-LazyFileListReader-for-LazyCsvReader"],[2864,"impl-LazyCsvReader"],[2865,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2866,"impl-LazyJsonLineReader"],[2882,"impl-LazyFileListReader-for-LazyCsvReader"],[2883,"impl-LazyCsvReader"],[2884,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2885,"impl-LazyJsonLineReader"],[3248,"impl-Debug-for-Duration"],[3249,"impl-Display-for-Duration"],[3252,"impl-Display-for-JoinType"],[3253,"impl-Debug-for-JoinType"],[3254,"impl-Display-for-JoinValidation"],[3255,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC4KBgEEABIAGAAPACkAAgAuABUARQAIAE8ABwBYAAMAXgAAAGAAGQB7ABsAmAADAJ0ABgClAA4AtQAVAMwABADSACcA/QAJAAgBEAAaAQcAJAEYAD4BAwBDAQAARQEnAG4BAQB0AQAAdwEBAHsBAACBAQAAgwEAAI4BAACRAQAAmAEBAJsBAQCgAQAAowFFAOsBAADtAQAA7wEBAPUBAAD8AVAAUAIAAGoCDQB5AlwA2AIAANoCIQD9AgAA/wIAAAUDAAAHAxMAHAMyAFcDAABaAwEAYAMAAGYDAABpAyIAjQMAAJ0DAgChAwkArQMJALgDAQDAAwMAywMAAM8DAADRAwIA1QMAANcDAADcAwEA4QMFAOoDAADsAxEAAQQBAAQEAAAGBCEATwQCAFMEAQBXBAAAaQQAAHEEAAB+BAAAgQQFAIoEAACNBAAAnQQAAKAEAgCoBAIArAQDALUEAQC5BAIAvgQAAMAEAQDGBAAAzQQAAM8EAQDWBAAA2AQAAOAEAQDmBAAA6AQAAOoEAADvBAIACQUFABAFGQAzBQAAOgUAAEEFAABGBQAASAUBAEsFAABRBQEAVwUAAFkFAABbBQIAYgUbAH8FCQCNBUMA0wUAANUFLgAPBgAAEQYAABMGIwA6BgEAPwYAAEwGAABQBgEAVQYTAGsGAABtBgAAbwYBAHIGAQB1BgYAfQZIAMcGAwDMBgIA0QYCANcGAwDfBgEA6AYCAO4GAADwBgAA/QYAAAwHAwAUBzoBUAgBAFMIHABxCAEAdAgnAJ0IAQCgCAcArAgAALoIAADHCAEAzggBANkIAgDdCAMA5ggDAO4IBwD3CBsAFgkFAB8JEQAyCQMAOQkCAD8JAABECQIASQkBAGkJAwB7CQMAggkBAIsJAgCPCQkAnQkAAKUJAACoCRQAvgkBAMMJGgDiCQEA5gkAAOsJAADvCRgADQoDABIKBgApCgAAKwoBAC4KBAA2CgAAOAoAAEIKAABICgIAUAoBAFMKDABuCgAAdgoAAHgKAQB9CgEAgAoAAIIKAACGCgAAiwoDAJAKBQCZCgEAnwoDAKsKAwCwCgEAtQoCALkKAAC8CgAAxQoAAMoKAQDUCgEA1woIAOEKHgACCwAABAsAAAcLAQAKCwkAFQsAABcLAQAgCwEAKQsBADALAAAyCwAANAsAAEMLAABFCwAAUQsBAFgLBwBjCwAAZgsBAGkLAABrCwMAcQsAAHQLAAB4CwMAgAsAAIILBgCMCwIAkAsAAJMLCgCfCwIApAsAAKYLAACsCxMAwwtaACIMiwCvDBMAyAwAANYMAADYDBEA6wwAAO4MEQASDQIAFg0BABkNAAAcDQMAIw0FACoNAQAuDQAAMQ0CADUNAQA5DQAAOw0BAEANFQBXDacA"}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[238,"polars_ops::prelude"],[240,"polars_ops::series"],[292,"polars_ops::chunked_array::binary"],[293,"polars_core::datatypes"],[294,"polars_ops::chunked_array::binary::namespace"],[295,"polars_ops::chunked_array::scatter"],[296,"polars_utils::index"],[297,"polars_core::series"],[298,"polars_error"],[299,"core::marker"],[300,"core::option"],[301,"core::iter::traits::collect"],[302,"polars_ops::chunked_array::list::namespace"],[303,"polars_core::datatypes::aliases"],[304,"polars_core::chunked_array::ops::sort::options"],[305,"polars_core::frame"],[306,"dyn_clone::sealed"],[307,"polars_utils::pl_str"],[308,"polars_ops::frame::join::hash_join"],[309,"polars_ops::frame::join::args"],[310,"polars_ops::frame::join::cross_join"],[311,"core::fmt"],[312,"core::convert"],[313,"core::hash"],[314,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[315,"polars_arrow::array::primitive"],[316,"alloc::string"],[317,"core::result"],[318,"compact_str"],[319,"core::any"],[320,"polars_ops::series::ops::arg_min_max"],[321,"polars_ops::series::ops"],[322,"polars_core::chunked_array::ops::search_sorted"],[323,"polars_ops::series::ops::various"],[324,"polars_ops::frame::join::general"],[325,"polars_ops::series::ops::clip"],[326,"polars_ops::series::ops::horizontal"],[327,"polars_ops::series::ops::index"],[328,"polars_ops::series::ops::negate"],[329,"polars_ops::series::ops::not"],[330,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Cf```Ch``DhDj``00````1``10`Dl0001`Dd321`Db0`00`1432143214321432143241Dn000253`254325432543254322255544433325443322543Eh3654En00044765147656514154`444447656547654765654765444``Gd`00```0G`0Gb22```222``2222Gf0333333333`00```````333300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{Ad}}}}}{{Af{Bd}}}}0{{{d{Bf}}C`Bj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{Ad}}}{{Af{Bd}}}}0{{{d{Bf}}C`Cb}Bd}0{{{d{Bf}}Cd}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Cf}}}{{d{Bl}}}}```{{{d{Ch}}}{{d{Cj}}}}````````````````````````{{dCl}Cn}000{{Cj{d{{l{D`}}}}{d{{l{D`}}}}{Al{D`}}{d{Cj}}}Cj}{{{d{Db}}{d{{l{Ab}}}}BjBj}Cj}0`{{{d{Db}}{d{Cj}}{d{Ad}}{d{Ad}}Dd}{{Af{Cj}}}}0{{{d{Bh}}{d{Bh}}}D`}{d{{d{c}}}{}}000{{{d{Df}}}{{d{Dfc}}}{}}000{{{d{Dd}}}Dd}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{d{d{Dfc}}}Cn{}}000{dCn}000{{{d{Dh}}{d{Dj}}}Bj}`{{{d{Dn}}{d{Cj}}{Al{D`}}{Al{{E`{C`Cb}}}}}{{Af{Cj}}}}0{{{d{Dn}}{d{Cj}}{Al{{E`{C`Cb}}}}Bj}{{Af{{E`{CjCj}}}}}}0{{}Dd}{{}Dh}{{}Dl}{{}Eb}{Cb{{d{c}}}{}}000{Cb{{d{Dfc}}}{}}000{CbCn}000{{{d{Dd}}{d{Dd}}}Bj}{{{d{Dh}}{d{Dh}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{d{d{c}}}Bj{}}00000000000{{{d{Dd}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{cc{}}{DjDd}111{{{d{Eh}}{d{Cj}}ei}{{Af{Cj}}}{{Ej{D`}}}{{An{}{{Aj{c}}}}}{{Ej{D`}}}{{An{}{{Aj{g}}}}}}{{{d{Dd}}{d{Dfc}}}CnEl}{{{d{Dh}}{d{Dfc}}}CnEl}{{{d{Dj}}{d{Dfc}}}CnEl}{{{d{Dl}}{d{Dfc}}}CnEl}{{{d{En}}{d{Ad}}DlBj}{{Af{{E`{F`Bj}}}}}}0{{{d{En}}{d{Ad}}DlBj}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}Cb}0007{{}c{}}000{{{d{Dj}}}Bj}{{{d{Dl}}{d{Dj}}}{{Af{Cn}}}}{{{d{Eh}}{d{Cj}}eiDd}{{Af{Cj}}}{{Ej{D`}}}{{An{}{{Aj{c}}}}}{{Ej{D`}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dl}}}Bj}={{{d{Cj}}{d{Cj}}Bj}{{Af{Fd}}}}{{{d{Dd}}}Bj}`{{{d{Dd}}}{{d{D`}}}}`{dc{}}000{dFf}0{c{{Fh{e}}}{}{}}000{{}{{Fh{c}}}{}}000{d{{Fh{FjFl}}}}0{dFn}000`{{DdDh}Dd}{{Dd{Al{D`}}}Dd}`````````{{dCl}Cn}{{{d{G`}}}{{Al{Cb}}}}0{{{d{Gb}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Df}}}{{d{Dfc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gd}}}Gd}{{d{d{Dfc}}}Cn{}}{dCn}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}Cb}{{Af{Bn}}}}{{}Gd}{Cb{{d{c}}}{}}{Cb{{d{Dfc}}}{}}{CbCn}{{{d{Gf}}{d{Bh}}}{{Af{Cn}}}}0{{{d{Gd}}{d{Gd}}}Bj}{{d{d{c}}}Bj{}}00{{{d{Gd}}{d{DfEd}}}{{Fh{CnGh}}}}{cc{}}{{{d{Gd}}{d{Dfc}}}CnEl}{{}Cb}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gf}}Cd}{{Af{Bj}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{C`D`}{{Af{Ad}}}}2{dc{}}{c{{Fh{e}}}{}{}}{{}{{Fh{c}}}{}}{dFn}{{{d{Gf}}BjBjD`Bj}{{Af{Cj}}}}0","D":"El","p":[[10,"AsBinary",4,292],[1,"reference"],[8,"BinaryChunked",293],[10,"BinaryNameSpaceImpl",4,294],[1,"u8"],[1,"slice"],[8,"BooleanChunked",293],[10,"ChunkedSet",4,295],[8,"IdxSize",296],[5,"Series",297],[8,"PolarsResult",298],[10,"Copy",299],[17,"Item"],[6,"Option",300],[10,"IntoIterator",301],[8,"UInt32Chunked",293],[10,"AsList",25],[8,"ListChunked",293],[10,"ListNameSpaceImpl",25,302],[1,"str"],[1,"bool"],[8,"StringChunked",293],[8,"IdxCa",303],[1,"i64"],[1,"usize"],[5,"SortOptions",304],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",305],[5,"Private",306],[1,"unit"],[5,"PlSmallStr",307],[10,"JoinDispatch",80,308],[5,"JoinArgs",80,309],[0,"mut"],[6,"JoinCoalesce",80,309],[6,"JoinType",80,309],[6,"JoinValidation",80,309],[10,"CrossJoin",80,310],[1,"tuple"],[8,"ChunkJoinOptIds",80,309],[5,"Formatter",311],[8,"Result",311],[10,"DataFrameJoinOps",80],[10,"Into",312],[10,"Hasher",313],[10,"SeriesJoin",80,314],[8,"InnerJoinIds",80,309],[5,"PrimitiveArray",315],[8,"LeftJoinIds",80,309],[5,"String",316],[6,"Result",317],[5,"CompactString",318],[6,"ToCompactStringError",318],[5,"TypeId",319],[10,"ArgAgg",240,320],[10,"SeriesSealed",240,321],[6,"SearchSortedSide",240,322],[10,"SeriesMethods",240,323],[5,"Error",311]],"r":[[4,292],[5,294],[6,295],[26,302],[80,309],[81,309],[84,310],[88,309],[89,309],[90,309],[91,308],[93,309],[94,309],[97,309],[103,314],[108,324],[111,324],[114,324],[144,308],[238,80],[239,76],[241,320],[244,322],[245,323],[246,321],[253,325],[254,325],[255,325],[259,326],[260,327],[276,327],[279,326],[280,326],[281,326],[282,328],[283,329],[284,330],[285,326]],"b":[[175,"impl-Debug-for-JoinType"],[176,"impl-Display-for-JoinType"],[177,"impl-Display-for-JoinValidation"],[178,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAnALUAAAC6AAwAzAABAM8AAADRACAA8wAFAPsAAgABAQ8AEgEBABgBCgA="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[106,"polars_sql::keywords"],[108,"dyn_clone::sealed"],[109,"polars_sql::context"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"polars_plan::plans::options"],[121,"polars_plan::plans"],[122,"core::fmt"],[123,"polars_plan::dsl::udf"],[124,"core::option"],[125,"core::hash"],[126,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj1212312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",108],[1,"unit"],[0,"mut"],[5,"SQLContext",0,109],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",32],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",32,120],[1,"bool"],[6,"Context",32,121],[5,"DefaultFunctionRegistry",32],[5,"Formatter",122],[5,"Error",122],[5,"UserDefinedFunction",123],[6,"Option",124],[10,"Hasher",125]],"r":[[0,109],[24,126],[33,121],[36,120]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgASAFEABABZAAAAXAAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[57,"polars_time::chunkedarray::string::infer"],[83,"polars_time::prelude"],[288,"polars_time::series"],[309,"polars_utils::pl_str"],[310,"chrono::naive::datetime"],[311,"polars_time::windows::duration"],[312,"polars_time::windows::group_by"],[313,"polars_core::datatypes::time_unit"],[314,"polars_arrow::legacy::time_zone"],[315,"core::option"],[316,"polars_core::chunked_array::logical::datetime"],[317,"polars_error"],[318,"polars_time::round"],[319,"polars_core::datatypes"],[320,"chrono::naive::time"],[321,"polars_core::chunked_array::logical::time"],[322,"polars_time::truncate"],[323,"polars_time::upsample"],[324,"polars_core::frame"],[325,"polars_core::utils"],[326,"dyn_clone::sealed"],[327,"polars_time::chunkedarray::string::patterns"],[328,"core::fmt"],[329,"core::hash"],[330,"core::result"],[331,"core::any"],[332,"core::clone"],[333,"polars_time::windows::bounds"],[334,"polars_time::windows::window"],[335,"core::cmp"],[336,"polars_core::datatypes::dtype"],[337,"polars_core::frame::group_by::proxy"],[338,"alloc::vec"],[339,"alloc::string"],[340,"core::ops::function"],[341,"compact_str"],[342,"polars_core::series"],[343,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``0Bn111111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<<>>>3332221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0``````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}00{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}00000000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",309],[5,"NaiveDateTime",310],[5,"Duration",83,311],[6,"ClosedWindow",83,312],[6,"TimeUnit",313],[6,"Tz",314],[1,"reference"],[6,"Option",315],[8,"DatetimeChunked",316],[8,"PolarsResult",317],[1,"bool"],[10,"PolarsRound",0,318],[8,"StringChunked",319],[5,"NaiveTime",320],[8,"TimeChunked",321],[10,"PolarsTruncate",0,322],[10,"PolarsUpsample",0,323],[1,"str"],[5,"DataFrame",324],[10,"IntoVec",325],[5,"Private",326],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,327],[1,"usize"],[5,"Formatter",328],[8,"Result",328],[10,"Hasher",329],[6,"Result",330],[5,"TypeId",331],[5,"DatetimeInfer",57],[10,"Clone",332],[10,"PolarsNumericType",319],[10,"StrpTimeParser",57],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",57],[1,"i64"],[5,"Bounds",83,333],[6,"Label",83,312],[6,"StartBy",83,312],[5,"Window",83,334],[6,"Ordering",335],[6,"DataType",336],[5,"BoundsIter",83,334],[8,"GroupsSlice",337],[8,"TimeZone",336],[5,"Vec",338],[1,"tuple"],[5,"String",339],[17,"Output"],[10,"Fn",340],[5,"CompactString",341],[6,"ToCompactStringError",341],[1,"u32"],[10,"AsSeries",288],[5,"Series",342],[10,"TemporalMethods",288],[8,"Int32Chunked",319],[8,"Int8Chunked",319],[8,"BooleanChunked",319],[8,"Int16Chunked",319]],"r":[[1,312],[2,311],[5,318],[6,322],[7,323],[9,334],[11,343],[12,343],[18,343],[22,24],[30,327],[84,333],[85,334],[86,312],[89,311],[91,312],[99,312],[101,288],[105,334],[174,311],[175,311],[209,312],[210,312]],"b":[[193,"impl-Debug-for-Duration"],[194,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPsAFwAAAAkADQAFABQAAAAXABgAMQACADUAEQBIAAEASwATAGAACQBrAFsAzgAAANAAAQDUAAoA5gABAOoAAgDuAAAA8QACAPUAAQD6AAgABAEAAAYBAAAIARsAKAEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCQQCCRKMMRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","dirty_hash","","drop","eq","equivalent","","","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[68,"polars_utils::arena"],[135,"polars_utils::atomic"],[156,"polars_utils::binary_search"],[161,"polars_utils::cache"],[198,"polars_utils::cell"],[218,"polars_utils::clmul"],[222,"polars_utils::contention_pool"],[237,"polars_utils::cpuid"],[239,"polars_utils::fixedringbuffer"],[262,"polars_utils::float"],[268,"polars_utils::floor_divmod"],[270,"polars_utils::functions"],[274,"polars_utils::hashing"],[307,"polars_utils::idx_vec"],[351,"polars_utils::index"],[415,"polars_utils::io"],[418,"polars_utils::itertools"],[428,"polars_utils::itertools::enumerate_idx"],[454,"polars_utils::mem"],[459,"polars_utils::min_max"],[466,"polars_utils::mmap"],[565,"polars_utils::nulls"],[570,"polars_utils::ord"],[572,"polars_utils::partitioned"],[591,"polars_utils::pl_str"],[650,"polars_utils::priority"],[674,"polars_utils::slice"],[688,"polars_utils::sort"],[690,"polars_utils::sync"],[718,"polars_utils::sys"],[732,"polars_utils::total_ord"],[783,"polars_utils::unwrap"],[785,"polars_utils::vec"],[799,"num_traits"],[800,"core::cmp"],[801,"core::marker"],[802,"core::fmt"],[803,"core::clone"],[804,"core::result"],[805,"serde::de"],[806,"core::option"],[807,"core::hash"],[808,"core::default"],[809,"core::ops::function"],[810,"serde::ser"],[811,"core::any"],[812,"core::borrow"],[813,"alloc::sync"],[814,"alloc::vec"],[815,"core::convert"],[816,"core::ops::range"],[817,"core::iter::traits::collect"],[818,"core::slice::iter"],[819,"polars_error"],[820,"std::path"],[821,"std::io::error"],[822,"std::fs"],[823,"core::iter::traits::iterator"],[824,"core::ops::arith"],[825,"num_traits::cast"],[826,"num_traits::identities"],[827,"core::iter::traits::exact_size"],[828,"core::iter::traits::double_ended"],[829,"memmap2"],[830,"memmap2::advice"],[831,"polars_utils::mmap::private"],[832,"bytes::bytes"],[833,"std::io"],[834,"hashbrown::map"],[835,"std::ffi::os_str"],[836,"alloc::string"],[837,"compact_str"],[838,"alloc::borrow"],[839,"alloc::boxed"],[840,"core::mem::maybe_uninit"],[841,"core::slice::index"],[842,"rayon_core::thread_pool"]],"i":"``````````````````````````````````````````````d`00ABf```````0AdAfABhABj43210``AjAn101101010100010101010110000010111111001011110111011101010110111`Dh0000000000000000000`Dj``0``EfE`100000101010110000100101001001010`El000000000000000000`````Fb0000000000000```Fd000000000000000000000`Fh0000`Fj``````Gd000000Gf111111111`1111111111111``Gj00000000000000000000000000000000000000000````Hn````HjHl10`1010101010101111010110221101010Ib122021Id2If443434343````J`0`000000`Jb000000000000000000000000``````Kd00000Kl````Kf0Kj12012Kn123013030303223301230123011`230123001303300330230123012220110300020330302301230123012I`0`00```Md00000000000000000Ml0`00000000000000000000000000000000000000000000000000000000`O`0000000000000000000000`````ObOf0Oj`Ol0On0```A@d00000000000000000000000000``A@f00000000000AAf````0`A@l0``000000000000000000000000101A@`A@n11AA`02213333`AAh```AAl``00AAn`AB`ABb1ABd","f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}````````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{{Al{An}}{Al{An}}}Bd}{{Al{Al{c}}}Bd{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{c{{Bf{An}}}Bh}{c{{Bf{{Aj{e}}}}}BhBj}{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{An}}{Al{AhBn}}}C`}{{{Al{{Aj{c}}}}{Al{AhBn}}}C`l}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Cb{An}}}{{Cb{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Cd{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`Cf}{{}Ab}0{{}c{}}0{{{Al{{Aj{c}}}}}Bl{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Cd{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Ch{{Cl{c}{{Cj{c}}}}}}{{{Al{An}}c}BfCn}{{{Al{{Aj{c}}}}e}BfD`Cn}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCh}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{Al{Ah{Aj{c}}}}Ane}{{Bf{B``}}}Ch{{Db{c}{{Cj{{Bf{c`}}}}}}}}{AlDd}0{{{Al{{Aj{c}}}}}Df{}}{Ab{{Aj{c}}}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Dh}}}Dh}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}Dh}{Ab{{Al{c}}}{}}{{{Al{Dh}}}{{Al{c}}}{}}{{{Al{AhDh}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{}c{}}{{{Al{AhDh}}}B`}{AbDh}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`{{{Al{Dj}}e}{{Bf{AbAb}}}{}{{Db{{Al{c}}}{{Cj{Bd}}}}}}{{{Al{{Dl{c}}}}c}AbDn}0{{{Al{Dj}}e}Ab{}{{Db{{Al{c}}}{{Cj{Bl}}}}}}``{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{E`{ce}}}}}{{E`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{E`{ce}}}{EbEd}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Ef{ceg}}}}cBl}e{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{cc{}}0{{{Al{{E`{eg}}}}{Al{c}}}{{Cd{{Al{g}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}}{{Cd{{Al{Ahg}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Ej{c}}EbEd}{}{{Cl{{Al{e}}}{{Cj{g}}}}}}{{}Ab}0{{{Al{Ah{E`{ce}}}}ce}{{Al{Ahe}}}{EbEd}{}}{{}c{}}0{{gAb}{{Ef{ceg}}}{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{Ab{{E`{ce}}}{EbEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}0{{{Al{Ah{E`{eg}}}}{Al{c}}k}{{Bf{{Al{Ahg}}i}}}{}{{Ej{c}}EbEd}{}{}{{Cl{{Al{e}}}{{Cj{{Bf{gi}}}}}}}}{{}{{Bf{c}}}{}}0{AlDd}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{}{{El{c}}}Ch}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{Enc{}}{c{{El{c}}}{}}{{{Al{{El{c}}}}}{}Eh}{{{Al{Ah{El{c}}}}}{{Al{Ahc}}}Eh}{{}Ab}{{}c{}}{{{El{c}}}c{}}5{{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{F`F`}F`}0{F`F`}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Fb{c}}}}}cCh}?>{Ab{{Fb{c}}}Ch}{{{Al{{Fb{c}}}}c}B`Ch}=<;{{}Bl}0`{{{Al{{Fd{c}}}}}{{Ff{{Al{{Dl{c}}}}{Al{{Dl{c}}}}}}}{}}:9{{{Al{{Fd{c}}}}}Ab{}}98{{{Al{Ah{Fd{c}}}}}B`{}}8{{{Al{Ah{Fd{c}}}}cAb}Abj}8{{}Ab}{{}c{}}{{{Al{{Fd{c}}}}}Bl{}}05{Ab{{Fd{c}}}{}}{{{Al{Ah{Fd{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Fd{c}}}}c}{{Cd{B`}}}{}}8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`=={{{Al{Fh}}}Bl}>0`{{FjFj}{{Ff{FjFj}}}}{{{Fl{c}}e}{{Fl{c}}}Bb{{Db{c}{{Cj{c}}}}}}{{{Al{{Dl{e}}}}{Cd{Ab}}}{{Fn{c}}}Bb{{G`{{Dl{c}}}}}}{{AbAb{Gb{Ab}}}{{Gb{Ab}}}}{{{Fl{c}}g}{{Bf{{Fl{c}}e}}}Bb{}{{Db{c}{{Cj{{Bf{ce}}}}}}}}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Gd}}}Gd}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Gf}}}F`}{{{Al{Gd}}}F`}{AbB`}{{{Al{Gd}}{Al{Gd}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{Gd}}{Al{AhBn}}}C`}{cc{}}{{{Al{Gd}}{Al{Ahc}}}B`Cf}{{F`Ab}Ab}{{}Ab}{{}c{}}{{{Al{Gd}}}Bl}{{{Cd{{Al{{Dl{Gh}}}}}}F`}Gd}{ce{}{}}{Alc{}}{{{Al{Gd}}}c{}}<8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Gdc{}}``{{{Al{Ah{Gj{c}}}}}{{Al{Ah{Dl{c}}}}}{}}0{{{Al{{Gj{c}}}}}{{Al{{Dl{c}}}}}{}}0{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{{Al{{Gj{c}}}}}{{Gj{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{Gj{c}}}{}}{{{Al{{Gj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Gj{c}}}}}B`{}}{AbB`}{{{Al{{Gj{c}}}}{Al{{Gj{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{Ah{Gj{c}}}}e}B`{}{{H`{}{{Gn{c}}}}}}{{{Al{{Gj{c}}}}{Al{AhBn}}}C`l}{cc{}}{{{Fn{c}}}{{Gj{c}}}{}}{{{Al{{Dl{c}}}}}{{Gj{c}}}Bb}{e{{Gj{c}}}{}{{H`{}{{Gn{c}}}}}}{{}Ab}{{}c{}}{{{Al{{Gj{c}}}}}Bl{}}{{{Al{{Gj{c}}}}}{{Hb{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Hd{c}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{}{{Gj{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Gj{c}}}}c}B`{}}0{{{Al{Ah{Gj{c}}}}Ab}B`{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Ab{{Gj{c}}}{}}`````````{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{Dl{Hf}}}}Hf}{{Hh{B`}}}}{{{Al{Hj}}}Hj}{{{Al{Hl}}}Hl}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hj}}{Al{Hj}}}Bl}{{Al{Al{c}}}Bl{}}00{Hl{{Ff{HfHf}}}}{{{Al{Hj}}{Al{AhBn}}}C`}{{{Al{Hl}}{Al{AhBn}}}C`}{HfHj}{cc{}}0{{{Al{{Hn{}{{Gn{c}}}}}}Ab}cI`}0{{{Al{Hj}}}Hf}{{}Ab}0`{{{Al{AhHl}}}{{Al{AhF`}}}}{{}c{}}0{{{Al{Ib}}}Bl}{{{Al{Hl}}}Bl}{{{Al{Hj}}}Bl}{{{Al{c}}}Bl{}}{{{Al{Ib}}}Ab}{{}Hj}{{}Hl}{{{Al{Id}}}Ab}{{HfHf}Hl}{{IfF`}Hf}{{{Al{Hj}}}{{Cd{Hf}}}}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{AlDd}0{{{Al{Ih}}Ij}Il}{{{Al{Ih}}}{{Hh{In}}}}0`{J`Bl}{J`{{Fn{c}}}{}}`{J`{{Jb{J`Hf}}}}{J`{{Jb{J`Df}}}}{{J`cg}BlH`{}{{Db{e}{{Cj{Bl}}}}}}{{J`cg}{{Cd{Bd}}}H`{}{{Db{e}{{Cj{{Cd{Bd}}}}}}}}{J`{{Bf{ce}}}{}{}}{J`{{Bf{{Fn{c}}e}}}{}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Jb{ce}}}}}{{Jb{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Jb{ce}}}AbJd{{Jf{}{{Cj{}}}}JhJjJlj}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jb{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}0{{{Al{{Jb{ce}}}}}AbJn{{Jf{}{{Cj{}}}}JhJjJlj}}{c{{Jb{ce}}}{}K`}{{{Al{Ah{Jb{ce}}}}}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{{Jb{ce}}}}}{{Ff{Ab{Cd{Ab}}}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Al{{Dl{Gh}}}}}B`}000{{{Al{{Dl{c}}}}}{{Al{Ah{Dl{c}}}}}j}`{{KdKd}Kd}000{{{Al{Kd}}{Al{Kd}}}Bl}0`````{{{Al{Kf}}Kh}{{Bf{B`Ij}}}}{{{Al{Kf}}KhAbAb}{{Bf{B`Ij}}}}{{{Al{Kj}}}Gh}{{{Al{Kf}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kl}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kj}}}{{Al{{Dl{Gh}}}}}}{Al{{Al{c}}}{}}000{{{Al{Ah}}}{{Al{Ahc}}}{}}000{{{Al{Kl}}}Kl}{{{Al{Kn}}}Kn}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{}Kl}{Ab{{Al{c}}}{}}:0{{{Al{Kl}}}{{Al{c}}}{}}11{Ab{{Al{Ahc}}}{}}000{AbB`}00{{{Al{AhKj}}}B`}1{{{Al{In}}}{{Hh{B`}}}}{{{Al{Kf}}{Al{AhBn}}}{{Bf{B`L`}}}}{{{Al{Kl}}{Al{AhBn}}}C`}{{{Al{Kn}}{Al{AhBn}}}C`}{{{Al{Kj}}{Al{AhBn}}}C`}{cc{}}0{KlKn}11{LbKl}{LbKn}{{{Al{In}}}{{Hh{Kl}}}}{{{Fl{Kj}}}Kl}{c{{Ld{Kn}}}Lf}{{{Al{{Dl{Gh}}}}}Kn}{{{Al{{Dl{Gh}}}}}Kl}{{{Fn{Gh}}}Kl}{{{Fn{Gh}}}Kn}{{}Ab}000{{}c{}}000{{{Al{Kf}}}{{Bf{B`Ij}}}}{Kf{{Bf{LhIj}}}}{c{{Bf{KfIj}}}Lj}>{{{Al{In}}}{{Hh{Kj}}}}{{{Al{In}}Ll}{{Hh{Kj}}}}{{{Al{Kn}}}Ab}{{{Al{Kl}}}B`}{{{Al{AhKn}}{Al{Ah{Dl{Gh}}}}}{{Ld{Ab}}}}{{{Al{AhKn}}Ab}Kl}3{{{Al{AhKf}}AbLn}{{Bf{B`Ij}}}}{{{Al{AhKn}}M`}{{Ld{F`}}}}{{{Al{Kl}}{Gb{Ab}}}Kl}{Alc{}}0{Kl{{Fn{Gh}}}}8{c{{Bf{e}}}{}{}}000{{}{{Bf{c}}}{}}000{AlDd}000{{{Al{Kf}}}{{Bf{B`Ij}}}}```{{{Al{{I`{}{{Mb{c}}}}}}}Bl{}}{{{I`{}{{Mb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hFh}}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Md{ceg}}}}}{{Al{{Dl{{Mf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}}{{Al{Ah{Fn{{Mf{ceg}}}}}}}{}{}{}}{{}c{}}{{{Fn{{Mf{ceg}}}}}{{Md{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Mh{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Ff{{Mh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Ff{{Mj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Mj{ceg}}}{}{}{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}```{{{Al{Ml}}}{{Al{Ih}}}}{{{Al{Ml}}}{{Al{Mn}}}}{{{Al{Ml}}}{{Al{N`}}}}{{{Al{Ml}}}{{Al{{Dl{Gh}}}}}}22{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Ml}}}Ml}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{Ml}}{Al{Ml}}}Bd}{{Al{Al{c}}}Bd{}}{{}Ml}{Ab{{Al{c}}}{}}{{{Al{Ml}}}{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{c{{Bf{Ml}}}Bh}{AbB`}{{{Al{Ml}}{Al{c}}}Bl{{G`{Mn}}Eh}}{{Al{Al{c}}}Bl{}}00{{{Al{Ml}}{Al{AhBn}}}C`}0{NbMl}{cc{}}{{{Al{Mn}}}Ml}{NdMl}{{{Al{Nb}}}Ml}{cMl{{H`{}{{Gn{{Nf{Mn}}}}}}}}{cMl{{H`{}{{Gn{Nh}}}}}}{cMl{{H`{}{{Gn{{Al{Nh}}}}}}}}{cMl{{H`{}{{Gn{{Al{Mn}}}}}}}}{cMl{{H`{}{{Gn{Nb}}}}}}{cMl{{H`{}{{Gn{{Nj{Mn}}}}}}}}{cMl{{H`{}{{Gn{{Al{Ml}}}}}}}}{cMl{{H`{}{{Gn{Ml}}}}}}::<{{{Al{Ml}}{Al{Ahc}}}B`Cf}{{}Ab}{{}c{}}{MlNb}{{{Al{Ml}}{Al{Ml}}}{{Cd{Bd}}}}{{{Al{Ml}}c}BfCn}{Alc{}}{AlNb}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{Al{{Bf{NdNl}}}}{AlDd}{{{Al{AhMl}}Nh}C`}{{{Al{AhMl}}Nn}C`}{{{Al{AhMl}}{Al{Mn}}}C`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{O`{ce}}}}}{{O`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}Bd{DnEd}{}}{{Al{Al{c}}}Bd{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}BlEd{}}{{Al{Al{c}}}Bl{}}00{{{Al{{O`{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}{{Cd{Bd}}}{DnEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`````{{{Al{Ob}}}{{Al{{Dl{{Od{c}}}}}}}{}}{{{Al{Of}}e}Al{}{{Oh{{Dl{c}}}}}}{{{Al{AhOf}}e}{{Al{Ah}}}{}{{Oh{{Dl{c}}}}}}{{{Al{Oj}}}Bl}{{{Al{{Dl{Gh}}}}}F`}{{{Al{Ol}}}{{Cd{{Al{c}}}}}{}}0{{{Al{On}}{Gb{Ab}}}On}0{{e{Al{Ah{Fn{Gh}}}}Ab}{{Al{Ah{Dl{g}}}}}{A@`j}{{H`{}{{Gn{c}}}}}{Jhj}}{{{Al{A@b}}{Al{{Dl{{Ff{HfHf}}}}}}{Al{Ah{Fn{Hf}}}}}B`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{A@d{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{A@d{c}}}}{Al{{A@d{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{{A@d{c}}}}{Al{AhBn}}}C`l}{cc{}}{{}{{A@d{c}}}{}}0{{{Al{{A@d{c}}}}}{}{}}{{}Ab}{{}c{}}{{{Al{{A@d{c}}}}}Bl{}}44{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{A@f}}}F`}?<;876```````54{A@hA@h}{A@jA@j}{{{Al{{A@l{c}}}}}{{A@l{c}}}Bb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BdA@`}{{Al{Al{c}}}Bd{}}:9{{{Al{{A@l{c}}}}}F`Gf}9{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@n}{{Al{Al{c}}}Bl{}}00{cc{}}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@`}0{{{Al{{A@l{c}}}}{Al{Ahe}}}B`AA`Cf}{{}Ab}{{}c{}}{{{Al{{A@l{c}}}}}BlI`}447{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}{{Cd{Bd}}}A@`}{ce{}{}}{Alc{}}{{{Al{{AAf{}{{AAb{c}}{AAd{e}}}}}}}c{}{}}{{{Al{A@`}}{Al{A@`}}}Bd}{{{Al{A@n}}{Al{A@n}}}Bl}{{{Al{A@`}}{Al{A@`}}}Bl}0{{{Al{AA`}}{Al{Ahc}}}B`Cf}{{{Al{{Dl{AA`}}}}{Al{Ahc}}}B`Cf}223{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{A@l{c}}}eI`{}}`{AAhc{}}``````{{{Al{{AAl{}{{AAj{c}}}}}}g}{{Fn{e}}}{}{}{{Db{{Al{c}}}{{Cj{e}}}}}}{{{AAl{}{{AAj{c}}}}g}{{Fn{e}}}{}{}{{Db{c}{{Cj{e}}}}}}{{{Al{AhAAn}}Abc}B`j}{{{Al{Ah{Fn{c}}}}{Al{Ah{Fn{e}}}}g}B`{}{}{{Db{ce}{{Cj{{Cd{{Ff{ce}}}}}}}}}}{AB`{{Ff{AbAb}}}}{{{Al{AhABb}}c}B`{}}{{{Al{AB`}}}{{Ff{AbAb}}}}{{AbA@j}ABd}","D":"Oj","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",799],[10,"PartialOrd",800],[10,"Copy",801],[10,"Debug",802],[10,"Send",801],[10,"Sync",801],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",68],[1,"reference"],[5,"Node",68],[1,"unit"],[10,"Clone",803],[6,"Ordering",800],[6,"Result",804],[10,"Deserializer",805],[10,"Deserialize",805],[1,"bool"],[5,"Formatter",802],[8,"Result",802],[1,"array"],[6,"Option",806],[10,"Hasher",807],[10,"Default",808],[17,"Output"],[10,"FnOnce",809],[10,"Serializer",810],[10,"Serialize",810],[10,"FnMut",809],[5,"TypeId",811],[1,"u32"],[5,"SyncCounter",135],[10,"ExponentialSearch",156],[1,"slice"],[10,"Ord",800],[5,"FastFixedCache",161],[10,"Hash",807],[10,"Eq",800],[5,"FastCachedFunc",161],[10,"Sized",801],[10,"Borrow",812],[5,"SyncUnsafeCell",198],[1,"never"],[1,"u64"],[5,"LowContentionPool",222],[5,"FixedRingBuffer",239],[1,"tuple"],[10,"IsFloat",262],[10,"FloorDivMod",268],[5,"Arc",813],[5,"Vec",814],[10,"AsRef",815],[5,"Range",816],[5,"BytesHash",274],[10,"DirtyHash",274],[1,"u8"],[5,"UnitVec",307],[10,"PartialEq",800],[17,"Item"],[10,"IntoIterator",817],[5,"Iter",818],[5,"IterMut",818],[8,"IdxSize",351],[8,"PolarsResult",819],[5,"NullableIdxSize",351],[5,"ChunkId",351],[10,"Indexable",351],[10,"IsNull",565],[10,"Bounded",351],[10,"NullCount",351],[10,"ToIdx",351],[5,"Path",820],[5,"Error",821],[6,"PolarsError",819],[5,"File",822],[10,"Itertools",418],[5,"EnumerateIdx",428],[10,"Iterator",823],[10,"Add",824],[10,"FromPrimitive",825],[10,"AddAssign",824],[10,"One",826],[10,"ExactSizeIterator",827],[10,"Zero",826],[10,"DoubleEndedIterator",828],[10,"MinMax",459],[5,"Mmap",466,829],[6,"Advice",830],[5,"MMapSemaphore",466],[5,"MemSlice",466,831],[5,"MemReader",466],[5,"Error",802],[5,"Bytes",832],[8,"Result",821],[10,"Read",833],[5,"MmapMut",829],[10,"MmapAsRawDesc",829],[5,"MmapOptions",829],[5,"RemapOptions",829],[6,"SeekFrom",833],[17,"Inner"],[5,"PartitionedHashMap",572],[5,"HashMap",834],[5,"RawEntryBuilder",834],[5,"RawEntryBuilderMut",834],[5,"PlSmallStr",591],[1,"str"],[5,"OsStr",835],[5,"String",836],[5,"CompactString",837],[6,"Cow",838],[1,"char"],[5,"Box",839],[6,"ToCompactStringError",837],[5,"Arguments",802],[5,"Priority",650],[10,"Slice2Uninit",674],[20,"MaybeUninit",840],[10,"GetSaferUnchecked",674],[10,"SliceIndex",841],[10,"SortedSlice",674],[10,"Extrema",674],[10,"SliceAble",674],[10,"TotalOrd",732],[5,"ThreadPool",842],[5,"SyncPtr",690],[5,"MemInfo",718],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",732],[10,"TotalEq",732],[10,"TotalHash",732],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",732],[10,"UnwrapUncheckedRelease",783],[17,"ItemIn"],[10,"ConvertVec",785],[10,"ResizeFaster",785],[10,"IntoRawParts",785],[10,"PushUnchecked",785],[10,"CapacityByFactor",785],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,351],[1,351],[469,831],[470,829]],"b":[[332,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[333,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[594,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[595,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[596,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[597,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[617,"impl-Debug-for-PlSmallStr"],[618,"impl-Display-for-PlSmallStr"],[619,"impl-From%3CString%3E-for-PlSmallStr"],[621,"impl-From%3C%26str%3E-for-PlSmallStr"],[622,"impl-From%3CCompactString%3E-for-PlSmallStr"],[623,"impl-From%3C%26String%3E-for-PlSmallStr"],[624,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[625,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[626,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[627,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[628,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[629,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[630,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[631,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKICTwAAAAgACgBbAGgAAABqAAEAbQACAHIAFQCJAAoAlQAAAJgABgChAAAAowAPALUABQC9AAkAyAABAMsAAgDPAAAA0wAAANgADADmAAEA6QAGAPIABgD7AAAA/QADAAMBAwAIAQoAFAEPACUBAgApAQsANgEVAE0BAwBSAQYAWgEnAIQBAACGAQQAjQEVAKQBAACmAQQArgEJALkBAAC7AQIAvwEHAMwBCADaASYAAwIAAAgCAgAPAgMAGgIDAB8CAgAjAgAAJQIBACgCDAA2AgQAPQIFAEQCAgBIAgkAUwIZAG4CDwB/AgsAjAIOAJwCAACeAgoAqwIEALECAAC0AgYAvAIFAMMCAwDIAgAAygIFANECBADYAgAA2gIDAOICAwDoAgwA9gIDAPsCFQASAwQAGAMCABwDAAAeAwEA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[381193,185975,50521,81236,9220,3376,8569,26322]}